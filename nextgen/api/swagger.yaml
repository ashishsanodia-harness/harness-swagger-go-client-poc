openapi: 3.0.3
info:
  title: Harness NextGen Software Delivery Platform API Reference
  description: This is the Open Api Spec 3 for the Access Control Service. This is
    under active development. Beware of the breaking change with respect to the generated
    code stub.
  contact:
    email: contact@harness.io
  version: "1.0"
servers:
- url: http://app.harness.io
  description: localhost
security:
- x-api-key: []
tags:
- name: Account Roles
  description: This contains APIs for performing CRUD operations on Account level
    Roles.
- name: Organization Roles
  description: This contains APIs for performing CRUD operations on Organization level
    Roles.
- name: Project Roles
  description: This contains APIs for performing CRUD operations on Project level
    Roles.
- name: Account Role Assignments
  description: This contains APIs for performing CRUD operations on Account level
    Role Assignments.
- name: Org Role Assignments
  description: This contains APIs for performing CRUD operations on Organization level
    Role Assignments.
- name: Project Role Assignments
  description: This contains APIs for performing CRUD operations on Project level
    Role Assignments.
- name: Organization
  description: Everything about organization
- name: Org Project
  description: Everything about org scoped project
- name: Account Secret
  description: Everything about account scoped secret
- name: Org Secret
  description: Everything about org scoped secret
- name: Project Secret
  description: Everything about project scoped secret
- name: Project Services
  description: This contains APIs for performing CRUD operations on Services.
- name: Account Connector
  description: Everything about account scoped connector
- name: Org Connector
  description: Everything about org scoped connector
- name: Project Connector
  description: Everything about project scoped connector
- name: Project Environments
  description: This contains APIs for performing CRUD operations on Environments.
- name: Account Resource Groups
  description: This contains APIs for performing CRUD operations on Account level
    Resource Groups.
- name: Organization Resource Groups
  description: This contains APIs for performing CRUD operations on Organization level
    Resource Groups.
- name: Project Resource Groups
  description: This contains APIs for performing CRUD operations on Project level
    Resource Groups.
- name: Filter Resource Groups
  description: This contains the filter endpoint for Resource Groups.
- name: Pipelines
  description: This contains APIs for performing CRUD operations on Pipelines.
- name: Account Template
  description: This contains APIs for performing CRUD operations on Templates at account
    scope.
- name: Org Template
  description: This contains APIs for performing CRUD operations on Templates at org
    scope.
- name: Project Template
  description: This contains APIs for performing CRUD operations on Templates at project
    scope.
paths:
  /v1/roles:
    get:
      tags:
      - Account Roles
      summary: List Roles
      description: Returns a list of Roles present in the Account scope.
      operationId: list-roles-acc
      parameters:
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Roles List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
                x-content-type: application/json
              examples:
                role-list-response:
                  value:
                  - slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
              examples:
                role-list-response:
                  value: "- slug: example_role\n  name: Example_Role\n  permissions:\n\
                    \    - core_resource_view\n  allowed_scope_levels:\n    - account\n\
                    \  description: This is an Example Role\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  scope:\n    account: sample_account\n    org: sample_organization\n\
                    \    project: sample_project\n  created: 1234567890\n  updated:\
                    \ 1234567890\n  harness_managed: true\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Account Roles
      summary: Create a Role
      description: Creates a custom Role in the Account scope.
      operationId: create-role-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "201":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/roles/{role}:
    get:
      tags:
      - Account Roles
      summary: Retrieve a Role
      description: Retrieves a Role from Account scope.
      operationId: get-role-acc
      parameters:
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Account Roles
      summary: Update a Role
      description: Updates a Role from Account scope.
      operationId: update-role-acc
      parameters:
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Roles
      summary: Delete a Role
      description: Deletes a custom Role from Account scope.
      operationId: delete-role-acc
      parameters:
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/roles:
    get:
      tags:
      - Organization Roles
      summary: List Roles
      description: Returns a list of Roles present in the Organization scope.
      operationId: list-roles-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Roles List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
                x-content-type: application/json
              examples:
                role-list-response:
                  value:
                  - slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
              examples:
                role-list-response:
                  value: "- slug: example_role\n  name: Example_Role\n  permissions:\n\
                    \    - core_resource_view\n  allowed_scope_levels:\n    - account\n\
                    \  description: This is an Example Role\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  scope:\n    account: sample_account\n    org: sample_organization\n\
                    \    project: sample_project\n  created: 1234567890\n  updated:\
                    \ 1234567890\n  harness_managed: true\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Organization Roles
      summary: Create a Role
      description: Creates a custom Role in the Organization scope.
      operationId: create-role-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "201":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/roles/{role}:
    get:
      tags:
      - Organization Roles
      summary: Retrieve a Role
      description: Retrieves a Role from Organization scope.
      operationId: get-role-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Organization Roles
      summary: Update a Role
      description: Updates a Role from Organization scope.
      operationId: update-role-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Organization Roles
      summary: Delete a Role
      description: Deletes a custom Role from Organization scope.
      operationId: delete-role-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/roles:
    get:
      tags:
      - Project Roles
      summary: List Roles
      description: Returns a list of Roles present in the Project scope.
      operationId: list-roles-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Roles List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
                x-content-type: application/json
              examples:
                role-list-response:
                  value:
                  - slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RolesResponse'
              examples:
                role-list-response:
                  value: "- slug: example_role\n  name: Example_Role\n  permissions:\n\
                    \    - core_resource_view\n  allowed_scope_levels:\n    - account\n\
                    \  description: This is an Example Role\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  scope:\n    account: sample_account\n    org: sample_organization\n\
                    \    project: sample_project\n  created: 1234567890\n  updated:\
                    \ 1234567890\n  harness_managed: true\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Roles
      summary: Create a Role
      description: Creates a custom Role in the Project scope.
      operationId: create-role-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "201":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/roles/{role}:
    get:
      tags:
      - Project Roles
      summary: Retrieve a Role
      description: Retrieves a Role from Project scope.
      operationId: get-role-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Roles
      summary: Update a Role
      description: Updates a Role from Project scope.
      operationId: update-role-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateRoleRequest'
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Roles
      summary: Delete a Role
      description: Deletes a custom Role from Project scope.
      operationId: delete-role-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: role
        in: path
        description: Role identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value:
                    slug: example_role
                    name: Example_Role
                    permissions:
                    - core_resource_view
                    allowed_scope_levels:
                    - account
                    description: This is an Example Role
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    scope:
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/RolesResponse'
              examples:
                role-response:
                  value: "slug: example_role\nname: Example_Role\npermissions:\n \
                    \ - core_resource_view\nallowed_scope_levels:\n  - account\ndescription:\
                    \ This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nscope:\n  account: sample_account\n\
                    \  org: sample_organization\n  project: sample_project\ncreated:\
                    \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/roleassignments:
    get:
      tags:
      - Account Role Assignments
      summary: List role assignments
      description: Retrieves the information of the role assignments
      operationId: get-account-scoped-role-assignments
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Role Assignment List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
                x-content-type: application/json
              examples:
                role-assignment-response-json:
                  value:
                  - roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value: "- roleassignment:\n    slug: example_role_assignment\n \
                    \   resource_group: example_resource_group_slug\n    role: example_role_slug\n\
                    \    principal:\n      scope: ACCOUNT\n      slug: example_principal_slug\n\
                    \      type: USER\n    disabled: false\n    managed: false\n \
                    \ created: 1234567890\n  updated: 1234567890\n  harness_managaed:\
                    \ false\n"
    post:
      tags:
      - Account Role Assignments
      summary: Create a role assignment
      description: Create a role assignment
      operationId: create-account-scoped-role-assignments
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/RoleAssignmentRequest'
      responses:
        "201":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/roleassignments/{roleassignment}:
    get:
      tags:
      - Account Role Assignments
      summary: Retrieve a role assignment
      description: Retrieves the information of the role assignment with the matching
        role assignment slug.
      operationId: get-account-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
    delete:
      tags:
      - Account Role Assignments
      summary: Delete a role assignment
      description: Deletes the information of the role assignment with the matching
        role assignment slug.
      operationId: delete-account-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/orgs/{org}/roleassignments:
    get:
      tags:
      - Org Role Assignments
      summary: List role assignments
      description: Retrieves the information of the role assignments
      operationId: get-org-scoped-role-assignments
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Role Assignment List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
                x-content-type: application/json
              examples:
                role-assignment-response-json:
                  value:
                  - roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value: "- roleassignment:\n    slug: example_role_assignment\n \
                    \   resource_group: example_resource_group_slug\n    role: example_role_slug\n\
                    \    principal:\n      scope: ACCOUNT\n      slug: example_principal_slug\n\
                    \      type: USER\n    disabled: false\n    managed: false\n \
                    \ created: 1234567890\n  updated: 1234567890\n  harness_managaed:\
                    \ false\n"
    post:
      tags:
      - Org Role Assignments
      summary: Create a role assignment
      description: Create a role assignment
      operationId: create-org-scoped-role-assignments
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/RoleAssignmentRequest'
      responses:
        "201":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/orgs/{org}/roleassignments/{roleassignment}:
    get:
      tags:
      - Org Role Assignments
      summary: Retrieve a role assignment
      description: Retrieves the information of the role assignment with the matching
        role assignment slug.
      operationId: get-org-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
    delete:
      tags:
      - Org Role Assignments
      summary: Delete a role assignment
      description: Deletes the information of the role assignment with the matching
        role assignment slug.
      operationId: delete-org-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/orgs/{org}/projects/{project}/roleassignments:
    get:
      tags:
      - Project Role Assignments
      summary: List role assignments
      description: Retrieves the information of the role assignments
      operationId: get-project-scoped-role-assignments
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Role Assignment List Response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                    \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
                x-content-type: application/json
              examples:
                role-assignment-response-json:
                  value:
                  - roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value: "- roleassignment:\n    slug: example_role_assignment\n \
                    \   resource_group: example_resource_group_slug\n    role: example_role_slug\n\
                    \    principal:\n      scope: ACCOUNT\n      slug: example_principal_slug\n\
                    \      type: USER\n    disabled: false\n    managed: false\n \
                    \ created: 1234567890\n  updated: 1234567890\n  harness_managaed:\
                    \ false\n"
    post:
      tags:
      - Project Role Assignments
      summary: Create a role assignment
      description: Create a role assignment
      operationId: create-project-scoped-role-assignments
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/RoleAssignmentRequest'
      responses:
        "201":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/orgs/{org}/projects/{project}/roleassignments/{roleassignment}:
    get:
      tags:
      - Project Role Assignments
      summary: Retrieve a role assignment
      description: Retrieves the information of the role assignment with the matching
        role assignment slug.
      operationId: get-project-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
    delete:
      tags:
      - Project Role Assignments
      summary: Delete a role assignment
      description: Deletes the information of the role assignment with the matching
        role assignment slug.
      operationId: delete-project-scoped-role-assignment
      parameters:
      - name: roleassignment
        in: path
        description: Role assignment slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Role assignment response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-json:
                  value:
                    roleassignment:
                      slug: example_role_assignment
                      resource_group: example_resource_group_slug
                      role: example_role_slug
                      principal:
                        scope: ACCOUNT
                        slug: example_principal_slug
                        type: USER
                      disabled: false
                      managed: false
                    created: 1234567890
                    updated: 1234567890
                    harness_managaed: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleAssignmentResponse'
              examples:
                role-assignment-response-yaml:
                  value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                    \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                    \    scope: ACCOUNT\n    slug: example_principal_slug\n    type:\
                    \ USER\n  disabled: false\n  managed: false\ncreated: 1234567890\n\
                    updated: 1234567890\nharness_managaed: false\n"
  /v1/orgs/{org}/projects/{project}/services/{service}:
    get:
      tags:
      - Project Services
      summary: Retrieve a Service
      description: 'Retrieves specified Service '
      operationId: get-service
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      slug: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "service:\n  name: \"Example_service\"\n  identifier:\
                        \ \"example_service\"\n  tags: {}\n"
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: "service:\n  account: sample_account\n  slug: example_service\n\
                    \  org: sample_organization\n  project: sample_project\n  name:\
                    \ Example_service\n  description: This is a example service\n\
                    \  tags:\n    example-tag-1: example-tag-1-value\n    example-tag-2:\
                    \ example-tag-2-value\n  yaml: |\n    service:\n      name: \"\
                    Example_service\"\n      identifier: \"example_service\"\n   \
                    \   tags: {}\ncreated: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Services
      summary: Update Service
      description: Update Services
      operationId: update-service
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceRequest'
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      slug: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "service:\n  name: \"Example_service\"\n  identifier:\
                        \ \"example_service\"\n  tags: {}\n"
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: "service:\n  account: sample_account\n  slug: example_service\n\
                    \  org: sample_organization\n  project: sample_project\n  name:\
                    \ Example_service\n  description: This is a example service\n\
                    \  tags:\n    example-tag-1: example-tag-1-value\n    example-tag-2:\
                    \ example-tag-2-value\n  yaml: |\n    service:\n      name: \"\
                    Example_service\"\n      identifier: \"example_service\"\n   \
                    \   tags: {}\ncreated: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Services
      summary: Delete a Service
      description: Deletes the requested service
      operationId: delete-service
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      slug: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "service:\n  name: \"Example_service\"\n  identifier:\
                        \ \"example_service\"\n  tags: {}\n"
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: "service:\n  account: sample_account\n  slug: example_service\n\
                    \  org: sample_organization\n  project: sample_project\n  name:\
                    \ Example_service\n  description: This is a example service\n\
                    \  tags:\n    example-tag-1: example-tag-1-value\n    example-tag-2:\
                    \ example-tag-2-value\n  yaml: |\n    service:\n      name: \"\
                    Example_service\"\n      identifier: \"example_service\"\n   \
                    \   tags: {}\ncreated: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/services:
    get:
      tags:
      - Project Services
      summary: List Services
      description: Returns all services that the current user has view permissions
        for given project.
      operationId: get-services
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: service_ids
        in: query
        description: List of Service Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - slug
          - created
          - updated
      - name: is_access_list
        in: query
        description: Specify whether list an access list or not. Access List refers
          to list of services that current user has permission to use in the pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: type
        in: query
        description: Service Definition type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - Kubernetes
          - NativeHelm
          - Ssh
          - WinRm
          - ServerlessAwsLambda
          - AzureWebApp
      - name: git_ops_enabled
        in: query
        description: Enables use of this service in Harness GitOps PR Pipelines
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Example response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
                x-content-type: application/json
              examples:
                example-1:
                  value:
                  - service:
                      account: sample_account
                      slug: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "service:\n  name: \"Example_service\"\n  identifier:\
                        \ \"example_service\"\n  tags: {}\n"
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: "- service:\n    account: sample_account\n    slug: example_service\n\
                    \    org: sample_organization\n    project: sample_project\n \
                    \   name: Example_service\n    description: This is a example\
                    \ service\n    tags:\n      example-tag-1: example-tag-1-value\n\
                    \      example-tag-2: example-tag-2-value\n    yaml: |\n     \
                    \ service:\n        name: \"Example_service\"\n        identifier:\
                    \ \"example_service\"\n        tags: {}\n  created: 1234567890\n\
                    \  updated: 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Services
      summary: Create a Service
      description: Creates a Service
      operationId: create-service
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceRequest'
      responses:
        "201":
          description: Example response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value:
                    service:
                      account: sample_account
                      slug: example_service
                      org: sample_organization
                      project: sample_project
                      name: Example_service
                      description: This is a example service
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "service:\n  name: \"Example_service\"\n  identifier:\
                        \ \"example_service\"\n  tags: {}\n"
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
              examples:
                example-1:
                  value: "service:\n  account: sample_account\n  slug: example_service\n\
                    \  org: sample_organization\n  project: sample_project\n  name:\
                    \ Example_service\n  description: This is a example service\n\
                    \  tags:\n    example-tag-1: example-tag-1-value\n    example-tag-2:\
                    \ example-tag-2-value\n  yaml: |\n    service:\n      name: \"\
                    Example_service\"\n      identifier: \"example_service\"\n   \
                    \   tags: {}\ncreated: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/environments:
    get:
      tags:
      - Project Environments
      summary: List Environments
      description: Returns all environments that the current user has view permissions
        for given project.
      operationId: get-environments
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: environment_ids
        in: query
        description: List of Environment Identifiers
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - slug
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: is_access_list
        in: query
        description: Specify whether list an access list or not. Access List refers
          to list of services that current user has permission to use in the pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Environment List Response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentListResponse'
              examples:
                example-1:
                  value:
                  - environment:
                      account: example_account
                      slug: example_environment
                      org: example_organization
                      project: example_project
                      name: Example_environment
                      description: Sample Description
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                        \ \"example_project\"\n  identifier: \"example_environment\"\
                        \n  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n\
                        \  name: \"example_environment\"\n  description: \"Sample\
                        \ Description\"\n  type: \"Production\"\n"
                      color: '#0063F7'
                      type: Production
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: "- environment:\n    account: sample_account\n    slug: example_environment\n\
                    \    org: sample_organization\n    project: sample_project\n \
                    \   name: Example_environment\n    description: Sample Description\n\
                    \    tags:\n      example-tag-1: example-tag-1-value\n      example-tag-2:\
                    \ example-tag-2-value\n    yaml: |\n      environment:\n     \
                    \   orgIdentifier: \"default\"\n        projectIdentifier: \"\
                    example_project\"\n        identifier: \"example_environment\"\
                    \n        tags:\n          example_tag: \"\"\n          example_tag_2:\
                    \ \"\"\n        name: \"example_environment\"\n        description:\
                    \ \"Sample Description\"\n        type: \"Production\"\n    color:\
                    \ '#0063F7'\n    type: Production\n  created: 1234567890\n  updated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Environments
      summary: Create an Environment
      description: Creates an Environment
      operationId: create-environment
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentRequest'
      responses:
        "201":
          description: Environment Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: example_account
                      slug: example_environment
                      org: example_organization
                      project: example_project
                      name: Example_environment
                      description: Sample Description
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                        \ \"example_project\"\n  identifier: \"example_environment\"\
                        \n  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n\
                        \  name: \"example_environment\"\n  description: \"Sample\
                        \ Description\"\n  type: \"Production\"\n"
                      color: '#0063F7'
                      type: Production
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: "environment:\n  account: example_account\n  slug: example_environment\n\
                    \  org: example_organization\n  project: example_project\n  name:\
                    \ Example_environment\n  description: Sample Description\n  tags:\n\
                    \    example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    environment:\n      orgIdentifier: \"default\"\
                    \n      projectIdentifier: \"example_project\"\n      identifier:\
                    \ \"example_environment\"\n      tags:\n        example_tag: \"\
                    \"\n        example_tag_2: \"\"\n      name: \"example_environment\"\
                    \n      description: \"Sample Description\"\n      type: \"Production\"\
                    \n  color: '#0063F7'\n  type: Production\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/environments/{environment}:
    get:
      tags:
      - Project Environments
      summary: Retrieve an Environment
      description: Retrieves specified Environment
      operationId: get-environment
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Environment Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: example_account
                      slug: example_environment
                      org: example_organization
                      project: example_project
                      name: Example_environment
                      description: Sample Description
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                        \ \"example_project\"\n  identifier: \"example_environment\"\
                        \n  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n\
                        \  name: \"example_environment\"\n  description: \"Sample\
                        \ Description\"\n  type: \"Production\"\n"
                      color: '#0063F7'
                      type: Production
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: "environment:\n  account: example_account\n  slug: example_environment\n\
                    \  org: example_organization\n  project: example_project\n  name:\
                    \ Example_environment\n  description: Sample Description\n  tags:\n\
                    \    example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    environment:\n      orgIdentifier: \"default\"\
                    \n      projectIdentifier: \"example_project\"\n      identifier:\
                    \ \"example_environment\"\n      tags:\n        example_tag: \"\
                    \"\n        example_tag_2: \"\"\n      name: \"example_environment\"\
                    \n      description: \"Sample Description\"\n      type: \"Production\"\
                    \n  color: '#0063F7'\n  type: Production\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Environments
      summary: Update Environment
      description: Update Environment
      operationId: update-environment
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/EnvironmentRequest'
      responses:
        "200":
          description: Environment Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value:
                    environment:
                      account: example_account
                      slug: example_environment
                      org: example_organization
                      project: example_project
                      name: Example_environment
                      description: Sample Description
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                        \ \"example_project\"\n  identifier: \"example_environment\"\
                        \n  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n\
                        \  name: \"example_environment\"\n  description: \"Sample\
                        \ Description\"\n  type: \"Production\"\n"
                      color: '#0063F7'
                      type: Production
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
              examples:
                example-1:
                  value: "environment:\n  account: example_account\n  slug: example_environment\n\
                    \  org: example_organization\n  project: example_project\n  name:\
                    \ Example_environment\n  description: Sample Description\n  tags:\n\
                    \    example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    environment:\n      orgIdentifier: \"default\"\
                    \n      projectIdentifier: \"example_project\"\n      identifier:\
                    \ \"example_environment\"\n      tags:\n        example_tag: \"\
                    \"\n        example_tag_2: \"\"\n      name: \"example_environment\"\
                    \n      description: \"Sample Description\"\n      type: \"Production\"\
                    \n  color: '#0063F7'\n  type: Production\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Environments
      summary: Delete an Environment
      description: Deletes the requested environment
      operationId: delete-environment
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/environments/{environment}/services:
    get:
      tags:
      - Project Environments
      summary: Retrieve Service Overrides list
      description: Gets Service Override List
      operationId: get-env-service-overrides
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - slug
          - created
          - updated
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      responses:
        "200":
          description: Serivce Order List Response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page.Link"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOverrideListResponse'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    environemnt: example_environment
                    service: example_service
                    yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                      \    serviceRef: example_service\n    variables:\n        -\
                      \ name: sample_var_1\n          type: String\n          value:\
                      \ example_val\n        - name: sample_var_2\n          value:\
                      \ example_val\n          type: String\n"
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceOverrideListResponse'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  environemnt: example_environment\n\
                    \  service: example_service\n  yaml: |\n    serviceOverrides:\n\
                    \        environmentRef: example_environment\n        serviceRef:\
                    \ example_service\n        variables:\n            - name: sample_var_1\n\
                    \              type: String\n              value: example_val\n\
                    \            - name: sample_var_2\n              value: example_val\n\
                    \              type: String\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/environments/{environment}/services/{service}:
    get:
      tags:
      - Project Environments
      summary: Retrieve a Service Override
      description: Gets a Service Override
      operationId: get-env-service-override
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Service Override Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    environemnt: example_environment
                    service: example_service
                    yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                      \    serviceRef: example_service\n    variables:\n        -\
                      \ name: sample_var_1\n          type: String\n          value:\
                      \ example_val\n        - name: sample_var_2\n          value:\
                      \ example_val\n          type: String\n"
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nenvironemnt: example_environment\nservice:\
                    \ example_service\nyaml: |\n  serviceOverrides:\n      environmentRef:\
                    \ example_environment\n      serviceRef: example_service\n   \
                    \   variables:\n          - name: sample_var_1\n            type:\
                    \ String\n            value: example_val\n          - name: sample_var_2\n\
                    \            value: example_val\n            type: String\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Environments
      summary: Update Service Override
      description: Update Service Override
      operationId: update-env-service-override
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceOverrideRequest'
      responses:
        "200":
          description: Service Override Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    environemnt: example_environment
                    service: example_service
                    yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                      \    serviceRef: example_service\n    variables:\n        -\
                      \ name: sample_var_1\n          type: String\n          value:\
                      \ example_val\n        - name: sample_var_2\n          value:\
                      \ example_val\n          type: String\n"
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nenvironemnt: example_environment\nservice:\
                    \ example_service\nyaml: |\n  serviceOverrides:\n      environmentRef:\
                    \ example_environment\n      serviceRef: example_service\n   \
                    \   variables:\n          - name: sample_var_1\n            type:\
                    \ String\n            value: example_val\n          - name: sample_var_2\n\
                    \            value: example_val\n            type: String\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Environments
      summary: Create Service Override
      description: Creates a Service Override
      operationId: create-env-service-override
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ServiceOverrideRequest'
      responses:
        "201":
          description: Service Override Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    environemnt: example_environment
                    service: example_service
                    yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                      \    serviceRef: example_service\n    variables:\n        -\
                      \ name: sample_var_1\n          type: String\n          value:\
                      \ example_val\n        - name: sample_var_2\n          value:\
                      \ example_val\n          type: String\n"
            application/yaml:
              schema:
                $ref: '#/components/schemas/ServiceOverrideResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nenvironemnt: example_environment\nservice:\
                    \ example_service\nyaml: |\n  serviceOverrides:\n      environmentRef:\
                    \ example_environment\n      serviceRef: example_service\n   \
                    \   variables:\n          - name: sample_var_1\n            type:\
                    \ String\n            value: example_val\n          - name: sample_var_2\n\
                    \            value: example_val\n            type: String\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Environments
      summary: Delete Service Override
      description: Deletes Service Override
      operationId: delete-env-service-override
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environment
        in: path
        description: Slug field of the environemnt the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: service
        in: path
        description: Slug field of the service the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
      security:
      - x-api-key: []
  /v1/orgs:
    get:
      tags:
      - Organization
      summary: List organizations
      description: Retrieves the information of the organizations.
      operationId: get-organizations
      parameters:
      - name: org
        in: query
        description: Slug field of the organizations the resource is scoped to
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - slug
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Organization list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
                x-content-type: application/json
              examples:
                example-organizations-list-response-json:
                  value:
                  - org:
                      slug: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organizations-list-response-yaml:
                  value: "- org:\n    slug: example_organization\n    name: Example\
                    \ Organization\n    description: This is an example organization\n\
                    \    tags:\n      example-tag-1: example-tag-1-value\n      example-tag-2:\
                    \ example-tag-2-value\n  created: 1234567890\n  updated: 1234567890\n\
                    \  harness_managed: true\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Organization
      summary: Create an organization
      description: Creates a new organization.
      operationId: create-organization
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateOrganizationRequest'
      responses:
        "201":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      slug: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                    \  description: This is an example organization\n  tags:\n   \
                    \ example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    created: 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}:
    get:
      tags:
      - Organization
      summary: Retrieve an organization
      description: Retrieves the information of the organization with the matching
        organization slug.
      operationId: get-organization
      parameters:
      - name: org
        in: path
        description: Organization slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      slug: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                    \  description: This is an example organization\n  tags:\n   \
                    \ example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    created: 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Organization
      summary: Update an organization
      description: Updates the information of the organization with the matching organization
        slug.
      operationId: update-organization
      parameters:
      - name: org
        in: path
        description: Organization slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateOrganizationRequest'
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      slug: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                    \  description: This is an example organization\n  tags:\n   \
                    \ example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    created: 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Organization
      summary: Delete an organization
      description: Deletes the information of the organization with the matching organization
        slug.
      operationId: delete-organization
      parameters:
      - name: org
        in: path
        description: Organization slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Organization response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-json:
                  value:
                    org:
                      slug: example_organization
                      name: Example Organization
                      description: This is an example organization
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    harness_managed: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
              examples:
                example-organization-response-yaml:
                  value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                    \  description: This is an example organization\n  tags:\n   \
                    \ example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    created: 1234567890\nupdated: 1234567890\nharness_managed: true\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects:
    get:
      tags:
      - Org Project
      summary: List projects
      description: Retrieves the information of the projects.
      operationId: get-org-scoped-projects
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: query
        description: Slug field of the projects the resource is scoped to
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: has_module
        in: query
        description: This boolean specifies whether to filter projects which has the
          module of type passed in the moduleType parameter or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
      - name: module_type
        in: query
        description: Project's module type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - name
          - slug
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Project list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page.Link"
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
                x-content-type: application/json
              examples:
                example-project-list-response-json:
                  value:
                  - project:
                      org: example_org_slug
                      slug: example_project_slug
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-list-response-yaml:
                  value: "- project:\n    org: example_org_slug\n    slug: example_project_slug\n\
                    \    name: example-project-name\n    color: '#0063F7'\n    modules:\n\
                    \      - CD\n    description: This is a example project\n    tags:\n\
                    \      property1: value1\n      property2: value2\n  created:\
                    \ 1234567890\n  updated: 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Org Project
      summary: Creates a project
      description: Creates a new project
      operationId: create-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateProjectRequest'
      responses:
        "201":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_slug
                      slug: example_project_slug
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: "project:\n  org: example_org_slug\n  slug: example_project_slug\n\
                    \  name: example-project-name\n  color: '#0063F7'\n  modules:\n\
                    \    - CD\n  description: This is a example project\n  tags:\n\
                    \    property1: value1\n    property2: value2\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}:
    get:
      tags:
      - Org Project
      summary: Retrieve a project
      description: Retrieves the information of the project with the matching project
        slug.
      operationId: get-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_slug
                      slug: example_project_slug
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: "project:\n  org: example_org_slug\n  slug: example_project_slug\n\
                    \  name: example-project-name\n  color: '#0063F7'\n  modules:\n\
                    \    - CD\n  description: This is a example project\n  tags:\n\
                    \    property1: value1\n    property2: value2\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Org Project
      summary: Update a project
      description: Updates the information of the project with the matching project
        slug.
      operationId: update-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateProjectRequest'
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_slug
                      slug: example_project_slug
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: "project:\n  org: example_org_slug\n  slug: example_project_slug\n\
                    \  name: example-project-name\n  color: '#0063F7'\n  modules:\n\
                    \    - CD\n  description: This is a example project\n  tags:\n\
                    \    property1: value1\n    property2: value2\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Project
      summary: Delete a project
      description: Deletes the information of the project with the matching project
        slug.
      operationId: delete-org-scoped-project
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-json:
                  value:
                    project:
                      org: example_org_slug
                      slug: example_project_slug
                      name: example-project-name
                      color: '#0063F7'
                      modules:
                      - CD
                      description: This is a example project
                      tags:
                        property1: value1
                        property2: value2
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples:
                example-project-response-yaml:
                  value: "project:\n  org: example_org_slug\n  slug: example_project_slug\n\
                    \  name: example-project-name\n  color: '#0063F7'\n  modules:\n\
                    \    - CD\n  description: This is a example project\n  tags:\n\
                    \    property1: value1\n    property2: value2\ncreated: 1234567890\n\
                    updated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/connectors:
    get:
      tags:
      - Account Connector
      summary: List connectors
      description: Retrieves the information of the connectors.
      operationId: get-account-scoped-connectors
      parameters:
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorResponse'
                x-content-type: application/json
              examples:
                example-list-connector-response-json:
                  value:
                  - connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-list-connector-response-yaml:
                  value: "- connector:\n    name: example_connector\n    slug: example_connector\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_connector\n    description: example_connector\n\
                    \    spec:\n        type: GitHttp\n        url: 'https://github.com/example/example-repo.git'\n\
                    \        branch: example_branch\n        connection_type: Repo\n\
                    \        username: git-http-user\n        password_ref: account.git-http-password\n\
                    \  created: 1234567890\n  updated: 1234567890\n"
    post:
      tags:
      - Account Connector
      summary: Create a Connector
      description: Creates a new connector
      operationId: create-account-scoped-connector
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "201":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/connectors/{connector}:
    get:
      tags:
      - Account Connector
      summary: Retrieve a connector
      description: |
        Retrieves the information of the connector with the matching connector slug.
      operationId: get-account-scoped-connector
      parameters:
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    put:
      tags:
      - Account Connector
      summary: Update a connector
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-account-scoped-connector
      parameters:
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    delete:
      tags:
      - Account Connector
      summary: Delete a connector
      description: Deletes the information of the connector with the matching connector
        slug.
      operationId: delete-account-scoped-connector
      parameters:
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v1/connectors/{connector}/test-connection:
    get:
      tags:
      - Account Connector
      summary: Test a connector
      description: |
        Tests connection of the connector with the matching connector slug.
      operationId: test-account-scoped-connector
      parameters:
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This has test connection details for the Connector defined
            in Harness.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
  /v1/orgs/{org}/connectors:
    get:
      tags:
      - Org Connector
      summary: List connectors
      description: Retrieves the information of the connectors.
      operationId: get-org-scoped-connectors
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorResponse'
                x-content-type: application/json
              examples:
                example-list-connector-response-json:
                  value:
                  - connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-list-connector-response-yaml:
                  value: "- connector:\n    name: example_connector\n    slug: example_connector\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_connector\n    description: example_connector\n\
                    \    spec:\n        type: GitHttp\n        url: 'https://github.com/example/example-repo.git'\n\
                    \        branch: example_branch\n        connection_type: Repo\n\
                    \        username: git-http-user\n        password_ref: account.git-http-password\n\
                    \  created: 1234567890\n  updated: 1234567890\n"
    post:
      tags:
      - Org Connector
      summary: Create a Connector
      description: Creates a new connector
      operationId: create-org-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "201":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/connectors/{connector}:
    get:
      tags:
      - Org Connector
      summary: Retrieve a connector
      description: |
        Retrieves the information of the connector with the matching connector slug.
      operationId: get-org-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    put:
      tags:
      - Org Connector
      summary: Update a connector
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-org-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    delete:
      tags:
      - Org Connector
      summary: Delete a connector
      description: Deletes the information of the connector with the matching connector
        slug.
      operationId: delete-org-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v1/orgs/{org}/connectors/{connector}/test-connection:
    get:
      tags:
      - Org Connector
      summary: Test a connector
      description: |
        Tests connection of the connector with the matching connector slug.
      operationId: test-org-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This has test connection details for the Connector defined
            in Harness.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
  /v1/orgs/{org}/projects/{project}/connectors:
    get:
      tags:
      - Project Connector
      summary: List connectors
      description: Retrieves the information of the connectors.
      operationId: get-project-scoped-connectors
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorResponse'
                x-content-type: application/json
              examples:
                example-list-connector-response-json:
                  value:
                  - connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-list-connector-response-yaml:
                  value: "- connector:\n    name: example_connector\n    slug: example_connector\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_connector\n    description: example_connector\n\
                    \    spec:\n        type: GitHttp\n        url: 'https://github.com/example/example-repo.git'\n\
                    \        branch: example_branch\n        connection_type: Repo\n\
                    \        username: git-http-user\n        password_ref: account.git-http-password\n\
                    \  created: 1234567890\n  updated: 1234567890\n"
    post:
      tags:
      - Project Connector
      summary: Create a Connector
      description: Creates a new connector
      operationId: create-project-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "201":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/connectors/{connector}:
    get:
      tags:
      - Project Connector
      summary: Retrieve a connector
      description: |
        Retrieves the information of the connector with the matching connector slug.
      operationId: get-project-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    put:
      tags:
      - Project Connector
      summary: Update a connector
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-project-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ConnectorRequest'
      responses:
        "200":
          description: Connector response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-json:
                  value:
                    connector:
                      name: example_connector
                      slug: example_connector
                      org: default
                      project: example_project
                      tags:
                        property1: example_connector
                      description: example_connector
                      spec:
                        type: GitHttp
                        url: https://github.com/example/example-repo.git
                        branch: example_branch
                        connection_type: Repo
                        username: git-http-user
                        password_ref: account.git-http-password
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorResponse'
              examples:
                example-connector-response-yaml:
                  value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_connector\n  description: example_connector\n  spec:\n\
                    \      type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                    \      branch: example_branch\n      connection_type: Repo\n \
                    \     username: git-http-user\n      password_ref: account.git-http-password\n\
                    created: 1234567890\nupdated: 1234567890\n"
    delete:
      tags:
      - Project Connector
      summary: Delete a connector
      description: Deletes the information of the connector with the matching connector
        slug.
      operationId: delete-project-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /v1/orgs/{org}/projects/{project}/connectors/{connector}/test-connection:
    get:
      tags:
      - Project Connector
      summary: Test a connector
      description: |
        Tests connection of the connector with the matching connector slug.
      operationId: test-project-scoped-connector
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connector
        in: path
        description: Connector slug
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: This has test connection details for the Connector defined
            in Harness.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConnectorTestConnectionResponse'
  /v1/secrets:
    get:
      tags:
      - Account Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-account-scoped-secrets
      parameters:
      - name: secret
        in: query
        description: Slug field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page.Link"
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: "- secret:\n    name: example_secret\n    slug: example_secret\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_secret\n    description: example_secret\n\
                    \    spec:\n      type: SSHKeyPath\n      port: 80\n      username:\
                    \ example_secret\n      key_path: example_secret\n      encrypted_passphrase:\
                    \ account.example_secret\n  created: 1234567890\n  updated: 1234567890\n\
                    \  draft: false\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Account Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-account-scoped-secret
      parameters:
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/secrets:
    get:
      tags:
      - Org Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-org-scoped-secrets
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: query
        description: Slug field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page.Link"
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: "- secret:\n    name: example_secret\n    slug: example_secret\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_secret\n    description: example_secret\n\
                    \    spec:\n      type: SSHKeyPath\n      port: 80\n      username:\
                    \ example_secret\n      key_path: example_secret\n      encrypted_passphrase:\
                    \ account.example_secret\n  created: 1234567890\n  updated: 1234567890\n\
                    \  draft: false\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Org Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/secrets:
    get:
      tags:
      - Project Secret
      summary: List secrets
      description: Retrieves the information of the secrets.
      operationId: get-project-scoped-secrets
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: query
        description: Slug field of secrets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: type
        in: query
        description: Secret types on which the filter will be applied
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - SSHKeyPath
            - SSHKeyReference
            - SSHPassword
            - SSHKerberosTGTKeyTabFile
            - SSHKerberosTGTPassword
            - SecretFile
            - SecretText
            - WinRmTGTKeyTabFile
            - WinRmTGTPassword
            - WinRmNTLM
      - name: recursive
        in: query
        description: 'Expand current scope to include all child scopes '
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret list response
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page.Link"
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                    \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
                x-content-type: application/json
              examples:
                example-list-secret-response-json:
                  value:
                  - secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecretResponse'
              examples:
                example-list-secret-response-yaml:
                  value: "- secret:\n    name: example_secret\n    slug: example_secret\n\
                    \    org: default\n    project: example_project\n    tags:\n \
                    \     property1: example_secret\n    description: example_secret\n\
                    \    spec:\n      type: SSHKeyPath\n      port: 80\n      username:\
                    \ example_secret\n      key_path: example_secret\n      encrypted_passphrase:\
                    \ account.example_secret\n  created: 1234567890\n  updated: 1234567890\n\
                    \  draft: false\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Secret
      summary: Create a secret
      description: Creates a new secret
      operationId: create-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: private_secret
        in: query
        description: This would be used to define secret as private.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "201":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/secrets/{secret}:
    get:
      tags:
      - Account Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Account Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Secret
      summary: Deletes a secret
      description: Deletes the information of the secret with the matching secret
        slug.
      operationId: delete-account-scoped-secret
      parameters:
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/secrets/{secret}:
    get:
      tags:
      - Org Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Org Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Org Secret
      summary: Delete a secret
      description: Deletes the information of the secret with the matching secret
        slug.
      operationId: delete-org-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/secrets/{secret}:
    get:
      tags:
      - Project Secret
      summary: Retrieve a secret
      description: Retrieves the information of the secret.
      operationId: get-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Secret
      summary: Update a secret
      description: Updates the information of the secret with the matching secret
        slug.
      operationId: update-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/SecretRequest'
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Secret
      summary: Delete a secret
      description: Deletes the information of the secret with the matching secret
        slug.
      operationId: delete-project-scoped-secret
      parameters:
      - name: org
        in: path
        description: Slug field of the organization the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Slug field of the project the resource is scoped to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: secret
        in: path
        description: Slug field of the secret
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Secret response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-json:
                  value:
                    secret:
                      name: example_secret
                      slug: example_secret
                      org: default
                      project: example_project
                      tags:
                        property1: example_secret
                      description: example_secret
                      spec:
                        type: SSHKeyPath
                        port: 80
                        username: example_secret
                        key_path: example_secret
                        encrypted_passphrase: account.example_secret
                    created: 1234567890
                    updated: 1234567890
                    draft: false
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretResponse'
              examples:
                example-secret-response-yaml:
                  value: "secret:\n  name: example_secret\n  slug: example_secret\n\
                    \  org: default\n  project: example_project\n  tags:\n    property1:\
                    \ example_secret\n  description: example_secret\n  spec:\n   \
                    \ type: SSHKeyPath\n    port: 80\n    username: example_secret\n\
                    \    key_path: example_secret\n    encrypted_passphrase: account.example_secret\n\
                    created: 1234567890\nupdated: 1234567890\ndraft: false\n"
      security:
      - x-api-key: []
  /v1/resource-groups:
    get:
      tags:
      - Account Resource Groups
      summary: List Resource Groups
      description: Returns a list of Resource Groups present in the Account scope.
      operationId: list-resource-groups-acc
      parameters:
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Resource Groups List response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/resource-groups?page=2&limit=1>; rel=\"next\", </v1/resource-groups?page=1&limit=1>;\
                    \ rel=\"self\", </v1/resource-groups?page=0&limit=1>; rel=\"previous\"\
                    , "
          content:
            application/json:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
                x-content-type: application/json
              examples:
                resource-group-list-response:
                  value:
                  - slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-list-response:
                  value: "- slug: example_resource_group\n  name: Example Resource\
                    \ Group\n  color: '#0063F7'\n  tags:\n    example-tag-1: example-tag-1-value\n\
                    \    example-tag-2: example-tag-2-value\n  description: This is\
                    \ an Example Resource Group\n  allowed_scope_levels:\n    - account\n\
                    \  included_scope:\n    - filter: EXCLUDING_CHILD_SCOPES\n   \
                    \   account: sample_account\n      org: sample_organization\n\
                    \      project: sample_project\n  resource_filter:\n    - resource_type:\
                    \ resource\n      identifiers:\n        - example_resource\n \
                    \     attribute_name: resource_attribute\n      attribute_values:\n\
                    \        - example_resource_attribute\n  include_all: false\n\
                    \  harness_managed: true\n  created: 1234567890\n  updated: 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Account Resource Groups
      summary: Create a Resource Group
      description: Creates a custom Resource Group in the Account scope.
      operationId: create-resource-group-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "201":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/resource-groups/{resource-group}:
    get:
      tags:
      - Account Resource Groups
      summary: Retrieve a Resource Group
      description: Retrieves a Resource Group from Account scope.
      operationId: get-resource-group-acc
      parameters:
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
      x-internal: false
    put:
      tags:
      - Account Resource Groups
      summary: Update a Resource Group
      description: Updates a Resource Group from Account scope.
      operationId: update-resource-group-acc
      parameters:
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Account Resource Groups
      summary: Delete a Resource Group
      description: Deletes a custom Resource Group from Account scope.
      operationId: delete-resource-group-acc
      parameters:
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/resource-groups:
    get:
      tags:
      - Organization Resource Groups
      summary: List Resource Groups
      description: Returns a list of Resource Groups present in the Organization scope.
      operationId: list-resource-groups-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Resource Groups List response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/resource-groups?page=2&limit=1>; rel=\"next\", </v1/resource-groups?page=1&limit=1>;\
                    \ rel=\"self\", </v1/resource-groups?page=0&limit=1>; rel=\"previous\"\
                    , "
          content:
            application/json:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
                x-content-type: application/json
              examples:
                resource-group-list-response:
                  value:
                  - slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-list-response:
                  value: "- slug: example_resource_group\n  name: Example Resource\
                    \ Group\n  color: '#0063F7'\n  tags:\n    example-tag-1: example-tag-1-value\n\
                    \    example-tag-2: example-tag-2-value\n  description: This is\
                    \ an Example Resource Group\n  allowed_scope_levels:\n    - account\n\
                    \  included_scope:\n    - filter: EXCLUDING_CHILD_SCOPES\n   \
                    \   account: sample_account\n      org: sample_organization\n\
                    \      project: sample_project\n  resource_filter:\n    - resource_type:\
                    \ resource\n      identifiers:\n        - example_resource\n \
                    \     attribute_name: resource_attribute\n      attribute_values:\n\
                    \        - example_resource_attribute\n  include_all: false\n\
                    \  harness_managed: true\n  created: 1234567890\n  updated: 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Organization Resource Groups
      summary: Create a Resource Group
      description: Creates a custom Resource Group in the Organization scope.
      operationId: create-resource-group-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "201":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/resource-groups/{resource-group}:
    get:
      tags:
      - Organization Resource Groups
      summary: Retrieve a Resource Group
      description: Retrieves a Resource Group from Organization scope.
      operationId: get-resource-group-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Organization Resource Groups
      summary: Update a Resource Group
      description: Updates a Resource Group from Organization scope.
      operationId: update-resource-group-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Organization Resource Groups
      summary: Delete a Resource Group
      description: Deletes a custom Resource Group from Organization scope.
      operationId: delete-resource-group-org
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/resource-groups:
    get:
      tags:
      - Project Resource Groups
      summary: List Resource Groups
      description: Returns a list of Resource Groups present in the Project scope.
      operationId: list-resource-groups-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Resource Groups List response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/resource-groups?page=2&limit=1>; rel=\"next\", </v1/resource-groups?page=1&limit=1>;\
                    \ rel=\"self\", </v1/resource-groups?page=0&limit=1>; rel=\"previous\"\
                    , "
          content:
            application/json:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
                x-content-type: application/json
              examples:
                resource-group-list-response:
                  value:
                  - slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-list-response:
                  value: "- slug: example_resource_group\n  name: Example Resource\
                    \ Group\n  color: '#0063F7'\n  tags:\n    example-tag-1: example-tag-1-value\n\
                    \    example-tag-2: example-tag-2-value\n  description: This is\
                    \ an Example Resource Group\n  allowed_scope_levels:\n    - account\n\
                    \  included_scope:\n    - filter: EXCLUDING_CHILD_SCOPES\n   \
                    \   account: sample_account\n      org: sample_organization\n\
                    \      project: sample_project\n  resource_filter:\n    - resource_type:\
                    \ resource\n      identifiers:\n        - example_resource\n \
                    \     attribute_name: resource_attribute\n      attribute_values:\n\
                    \        - example_resource_attribute\n  include_all: false\n\
                    \  harness_managed: true\n  created: 1234567890\n  updated: 1234567890\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Project Resource Groups
      summary: Create a Resource Group
      description: Creates a custom Resource Group in the Project scope.
      operationId: create-resource-group-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "201":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/resource-groups/{resource-group}:
    get:
      tags:
      - Project Resource Groups
      summary: Retrieve a Resource Group
      description: Retrieves a Resource Group from Project scope.
      operationId: get-resource-group-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Project Resource Groups
      summary: Update a Resource Group
      description: Updates a Resource Group from Project scope.
      operationId: update-resource-group-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateResourceGroupRequest'
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Project Resource Groups
      summary: Delete a Resource Group
      description: Deletes a custom Resource Group from Project scope.
      operationId: delete-resource-group-project
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: resource-group
        in: path
        description: Resource Group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Resource Group response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value:
                    slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-response:
                  value: "slug: example_resource_group\nname: Example Resource Group\n\
                    color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\ndescription: This is an\
                    \ Example Resource Group\nallowed_scope_levels:\n  - account\n\
                    included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                    \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                    resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                    \      - example_resource\n    attribute_name: resource_attribute\n\
                    \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                    \ false\nharness_managed: true\ncreated: 1234567890\nupdated:\
                    \ 1234567890\n"
      security:
      - x-api-key: []
  /v1/resource-groups/filter:
    post:
      tags:
      - Filter Resource Groups
      summary: Filter Resource Groups
      description: Returns a list of Resource Groups based on filter criteria.
      operationId: filter-resource-groups
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      requestBody:
        $ref: '#/components/requestBodies/FilterResourceGroupRequest'
      responses:
        "200":
          description: Resource Groups List response body
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/resource-groups?page=2&limit=1>; rel=\"next\", </v1/resource-groups?page=1&limit=1>;\
                    \ rel=\"self\", </v1/resource-groups?page=0&limit=1>; rel=\"previous\"\
                    , "
          content:
            application/json:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
                x-content-type: application/json
              examples:
                resource-group-list-response:
                  value:
                  - slug: example_resource_group
                    name: Example Resource Group
                    color: '#0063F7'
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    description: This is an Example Resource Group
                    allowed_scope_levels:
                    - account
                    included_scope:
                    - filter: EXCLUDING_CHILD_SCOPES
                      account: sample_account
                      org: sample_organization
                      project: sample_project
                    resource_filter:
                    - resource_type: resource
                      identifiers:
                      - example_resource
                      attribute_name: resource_attribute
                      attribute_values:
                      - example_resource_attribute
                    include_all_resources: false
                    harness_managed: true
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                type: array
                description: List of Resource Groups
                items:
                  $ref: '#/components/schemas/ResourceGroupsResponse'
              examples:
                resource-group-list-response:
                  value: "- slug: example_resource_group\n  name: Example Resource\
                    \ Group\n  color: '#0063F7'\n  tags:\n    example-tag-1: example-tag-1-value\n\
                    \    example-tag-2: example-tag-2-value\n  description: This is\
                    \ an Example Resource Group\n  allowed_scope_levels:\n    - account\n\
                    \  included_scope:\n    - filter: EXCLUDING_CHILD_SCOPES\n   \
                    \   account: sample_account\n      org: sample_organization\n\
                    \      project: sample_project\n  resource_filter:\n    - resource_type:\
                    \ resource\n      identifiers:\n        - example_resource\n \
                    \     attribute_name: resource_attribute\n      attribute_values:\n\
                    \        - example_resource_attribute\n  include_all: false\n\
                    \  harness_managed: true\n  created: 1234567890\n  updated: 1234567890\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/pipelines:
    get:
      tags:
      - Pipelines
      summary: List Pipelines
      description: Returns a list of Pipelines.
      operationId: list-pipelines
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 30
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - created
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: module
        in: query
        description: Harness module which is part of the Pipeline.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CD
          - CI
          - CV
          - CF
          - CE
          - STO
      - name: filter_identifier
        in: query
        description: Identifier of a saved Filter.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pipeline_identifiers
        in: query
        description: List of Pipeline identifiers on the basis of which the Pipelines
          are filtered.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: name
        in: query
        description: Pipeline Name on the basis of which the Pipelines are filtered.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
      - name: description
        in: query
        description: Pipeline Description on the basis of which the Pipelines are
          filtered.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 1024
          type: string
      - name: tags
        in: query
        description: Filter tags as a key:value pair.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 128
          type: array
          example: key:value
          items:
            type: string
        examples:
          key_and_value:
            summary: Tag having both Key and Value.
            value: key:value
          key_only:
            summary: Tag having only Key.
            value: key
      - name: service_names
        in: query
        description: Service names on the basis of which the Pipelines are filtered.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: env_names
        in: query
        description: Names of Environments on the basis of which the Pipelines are
          filtered.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: deployment_type
        in: query
        description: Deployment type on the basis of which the Pipelines are filtered.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: repository
        in: query
        description: Repository name on the basis of which the Pipelines are filtered.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Response body for List Pipelines.
          headers:
            Link:
              description: "Links to related resources, in the format defined by [RFC\
                \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will\
                \ include a link with relation type `next` to the next page, if there\
                \ is a next page."
              style: simple
              explode: false
              schema:
                type: string
              examples:
                sample:
                  value: "</v1/orgs/{org}/projects/{project}/pipelines?page=2&limit=1>;\
                    \ rel=\"next\", </v1/orgs/{org}/projects/{project}/pipelines?page=1&limit=1>;\
                    \ rel=\"self\", </v1/orgs/{org}/projects/{project}/pipelines?page=0&limit=1>;\
                    \ rel=\"previous\", "
          content:
            application/json:
              schema:
                type: array
                description: Response body for List Pipelines.
                items:
                  $ref: '#/components/schemas/PipelineListResponseBody'
                x-content-type: application/json
              examples:
                example-list-response:
                  value:
                  - slug: example_pipeline
                    name: ExamplePipeline
                    description: This is an Example Pipeline
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    created: 1234567890
                    updated: 1234567890
                    modules:
                    - CD
                    execution_summary:
                      errors_count:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                      deployments_count:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                      - 6
                      - 7
                    recent_execution_info:
                    - executor_info:
                        trigger_type: NOOP
                        username: harness_user
                        email: noreply@harness.io
                      execution_id: example_execution_slug
                      execution_status: Running
                      started: 1234567890
                      ended: 1234567890
                      run_number: 5
                    store_type: REMOTE
                    connector_ref: example_connector
                    valid: true
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
            application/yaml:
              schema:
                type: array
                description: Response body for List Pipelines.
                items:
                  $ref: '#/components/schemas/PipelineListResponseBody'
              examples:
                example-list-response:
                  value: "- slug: example_pipeline\n  name: Example Pipeline\n  description:\
                    \ This is an Example Pipeline\n  tags:\n    example-tag-1: example-tag-1-value\n\
                    \    example-tag-2: example-tag-2-value\n  created: 1234567890\n\
                    \  updated: 1234567890\n  modules:\n    - CD\n  execution_summary:\n\
                    \    errors_count:\n      - 1\n      - 2\n      - 3\n      - 4\n\
                    \      - 5\n      - 6\n      - 7\n    deployments_count:\n   \
                    \   - 1\n      - 2\n      - 3\n      - 4\n      - 5\n      - 6\n\
                    \      - 7\n  recent_execution_info:\n    - executor_info:\n \
                    \       trigger_type: NOOP\n        username: harness_user\n \
                    \       email: noreply@harness.io\n      execution_id: example_execution_slug\n\
                    \      execution_status: Running\n      started: 1234567890\n\
                    \      ended: 1234567890\n      run_number: 5\n  store_type: REMOTE\n\
                    \  connector_ref: example_connector\n  valid: true\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n"
      security:
      - x-api-key: []
    post:
      tags:
      - Pipelines
      summary: Create a Pipeline
      description: Creates a Pipeline.
      operationId: create-pipeline
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PipelineCreateRequestBody'
      responses:
        "201":
          description: Pipeline response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCreateResponseBody'
              examples:
                example-pipeline:
                  value:
                    slug: example_pipeline
            application/yaml:
              schema:
                $ref: '#/components/schemas/PipelineCreateResponseBody'
              examples:
                example-pipeline:
                  value: "slug: example_pipeline\n"
      security:
      - x-api-key: []
  /v1/orgs/{org}/projects/{project}/pipelines/{pipeline}:
    get:
      tags:
      - Pipelines
      summary: Retrieve a Pipeline
      description: Retrieves a Pipeline.
      operationId: get-pipeline
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pipeline
        in: path
        description: Pipeline identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: branch_name
        in: query
        description: Name of the branch (for Git Experience).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: template_applied
        in: query
        description: "If true, returns Pipeline YAML with Templates applied on it."
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: connector_ref
        in: query
        description: Identifier of the Harness Connector used for CRUD operations
          on the Entity (for Git Experience).
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: repo_name
        in: query
        description: Name of the repository (for Git Experience).
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Pipeline response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineGetResponseBody'
              examples:
                example-response:
                  value:
                    pipeline_yaml: example_yaml_text
                    template_applied_pipeline_yaml: example_yaml_text_with_template
                    slug: example_pipeline
                    name: ExamplePipeline
                    org: example_org
                    project: example_project
                    description: Pipeline Description
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    modules:
                    - cd
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    valid: true
                    yaml_error_wrapper:
                      message: something is incorrect
                      message_fqn: something is incorrect at pipeline.name
                      stage_info:
                        slug: example_stage
                        type: stage
                        name: Example Stage
                        fqn: pipeline.stages.stage
                      step_info:
                        slug: example_step
                        type: string
                        name: string
                        fqn: pipeline.steps.step
                      fqn: pipeline.name
                      hint_message: try changing something
                    created: 1234567890
                    updated: 1234567890
            application/yaml:
              schema:
                $ref: '#/components/schemas/PipelineGetResponseBody'
              examples:
                example-response:
                  value: "pipeline_yaml: example_yaml_text\ntemplate_applied_pipeline_yaml:\
                    \ example_yaml_text_with_template\nslug: example_pipeline\nname:\
                    \ ExamplePipeline\norg: example_org\nproject: example_project\n\
                    description: Pipeline Description\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nmodules:\n  - cd\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    valid: true\nyaml_error_wrapper:\n  message: something is incorrect\n\
                    \  message_fqn: something is incorrect at pipeline.name\n  stage_info:\n\
                    \    slug: example_stage\n    type: stage\n    name: Example Stage\n\
                    \    fqn: pipeline.stages.stage\n  step_info:\n    slug: example_step\n\
                    \    type: string\n    name: string\n    fqn: pipeline.steps.step\n\
                    \  fqn: pipeline.name\n  hint_message: try changing something\n\
                    created: 1234567890\nupdated: 1234567890\n"
      security:
      - x-api-key: []
    put:
      tags:
      - Pipelines
      summary: Update a Pipeline
      description: Updates a Pipeline.
      operationId: update-pipeline
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pipeline
        in: path
        description: Pipeline identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/PipelineUpdateRequestBody'
      responses:
        "200":
          description: Pipeline response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineCreateResponseBody'
              examples:
                example-pipeline:
                  value:
                    slug: example_pipeline
            application/yaml:
              schema:
                $ref: '#/components/schemas/PipelineCreateResponseBody'
              examples:
                example-pipeline:
                  value: "slug: example_pipeline\n"
      security:
      - x-api-key: []
    delete:
      tags:
      - Pipelines
      summary: Delete a Pipeline
      description: Deletes a Pipeline.
      operationId: delete-pipeline
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pipeline
        in: path
        description: Pipeline identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: "{}\n"
      security:
      - x-api-key: []
  /v1/templates:
    get:
      tags:
      - Account Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Account scope.
      operationId: get-templates-list-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Account Template
      summary: Create Template
      description: Creates a Template in the Account scope.
      operationId: create-templates-acc
      parameters:
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/templates/{template}:
    get:
      tags:
      - Account Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Account scope.
      operationId: get-template-stable-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/templates/{template}/versions/{version}:
    get:
      tags:
      - Account Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Account scope.
      operationId: get-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Account Template
      summary: Update Template
      description: Updates particular version of Template at Account scope.
      operationId: update-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Account Template
      summary: Delete Template
      description: Deletes particular version of Template at Account scope.
      operationId: delete-template-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Account Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Account scope.
      operationId: update-template-stable-acc
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
  /v1/orgs/{org}/templates:
    get:
      tags:
      - Org Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Organization scope.
      operationId: get-templates-list-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Org Template
      summary: Create Template
      description: Creates a Template in the Organization scope.
      operationId: create-templates-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/orgs/{org}/templates/{template}:
    get:
      tags:
      - Org Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Organization scope.
      operationId: get-template-stable-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/orgs/{org}/templates/{template}/versions/{version}:
    get:
      tags:
      - Org Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Organization scope.
      operationId: get-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Org Template
      summary: Update Template
      description: Updates particular version of Template at Organization scope.
      operationId: update-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Org Template
      summary: Delete Template
      description: Deletes particular version of Template at Organization scope.
      operationId: delete-template-org
      parameters:
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/orgs/{org}/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Org Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Organization scope.
      operationId: update-template-stable-org
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
  /v1/orgs/{org}/projects/{project}/templates:
    get:
      tags:
      - Project Template
      summary: Get Templates List
      description: Retrieves list of Template with meta-data at Project scope.
      operationId: get-templates-list-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items in each page\t"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 30
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - slug
          - name
          - updated
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - ASC
          - DESC
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          with search term.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Template List Type
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - STABLE_TEMPLATE
          - LAST_UPDATES_TEMPLATE
          - ALL
      - name: recursive
        in: query
        description: Specify true if all accessible Templates are to be included
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: names
        in: query
        description: Template names for filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: identifiers
        in: query
        description: Template Ids for Filtering
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      - name: description
        in: query
        description: Filter properties description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entity_types
        in: query
        description: Type of Template
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Step
            - Stage
            - Pipeline
            - CustomDeployment
            - MonitoredService
            - SecretManager
      - name: child_types
        in: query
        description: Child types describe the type of Step or stage
        required: false
        style: form
        explode: true
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: Template Lists Meta Data Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value:
                  - account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    version_label: example_version
                    entity_type: Step
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataList'
              examples:
                example-1:
                  value: "- account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  version_label: example_version\n  entity_type: Step\n  child_type:\
                    \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                    \    object_id: example_object\n    branch_name: branch\n    file_path:\
                    \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                    \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url:\
                    \ www.repo.com\n  updated: 1234567890\n  store_type: INLINE\n\
                    \  connector_ref: example_connector_ref\n  stable_template: true\n"
    post:
      tags:
      - Project Template
      summary: Create Template
      description: Creates a Template in the Project scope.
      operationId: create-templates-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateCreateBody'
      responses:
        "201":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
  /v1/orgs/{org}/projects/{project}/templates/{template}:
    get:
      tags:
      - Project Template
      summary: Get Stable Template
      description: Retrieves stable version of Template at Project scope.
      operationId: get-template-stable-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
  /v1/orgs/{org}/projects/{project}/templates/{template}/versions/{version}:
    get:
      tags:
      - Project Template
      summary: Retrieve a Template
      description: Retrieves particular version of Template at Project scope.
      operationId: get-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: include_yaml
        in: query
        description: Use it to get Template along with Input Set YAML
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: branch_name
        in: query
        description: Name of the branch
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_connector_ref
        in: query
        description: Connector ref of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_repo_name
        in: query
        description: Repo name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_account_id
        in: query
        description: Account name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_org_id
        in: query
        description: Organization name of parent template if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parent_entity_project_id
        in: query
        description: Project name of parent entity if its remote
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Template With Input reference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value:
                    template:
                      account: example_account
                      org: example_organization
                      project: example_project
                      slug: example_template
                      name: Example_template
                      description: string
                      tags:
                        example-tag-1: example-tag-1-value
                        example-tag-2: example-tag-2-value
                      yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                        \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n\
                        \    type: Custom\n    spec:\n      execution:\n        steps:\n\
                        \          - step:\n              type: ShellScript\n    \
                        \          name: ss1\n              identifier: ss1\n    \
                        \          spec:\n                shell: Bash\n          \
                        \      onDelegate: true\n                source:\n       \
                        \           type: Inline\n                  spec:\n      \
                        \              script: exit 1\n                environmentVariables:\
                        \ []\n                outputVariables: []\n              timeout:\
                        \ 10m\n"
                      version_label: example_version
                      entity_type: Stage
                      child_type: example_child_type
                      scope: org
                      version: 1234567890
                      git_details:
                        object_id: example_object
                        branch_name: branch
                        file_path: /folder/file.json
                        repo_name: example_repository
                        commit_id: abcd123
                        file_url: www.repo/folder/file.com
                        repo_url: www.repo.com
                      updated: 1234567890
                      store_type: INLINE
                      connector_ref: example_connector_ref
                      stable_template: true
                    inputs: example
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateWithInputsResponse'
              examples:
                example-1:
                  value: "template:\n  account: example_account\n  org: example_organization\n\
                    \  project: example_project\n  slug: example_template\n  name:\
                    \ Example_template\n  description: string\n  tags:\n    example-tag-1:\
                    \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                    \  yaml: |\n    template:\n      name: Example_template\n    \
                    \  identifier: example_template\n      versionLabel: v1\n    \
                    \  type: Stage\n      tags: {}\n      spec:\n        type: Custom\n\
                    \        spec:\n          execution:\n            steps:\n   \
                    \           - step:\n                  type: ShellScript\n   \
                    \               name: ss1\n                  identifier: ss1\n\
                    \                  spec:\n                    shell: Bash\n  \
                    \                  onDelegate: true\n                    source:\n\
                    \                      type: Inline\n                      spec:\n\
                    \                        script: exit 1\n                    environmentVariables:\
                    \ []\n                    outputVariables: []\n              \
                    \    timeout: 10m\n  version_label: example_version\n  entity_type:\
                    \ Stage\n  child_type: example_child_type\n  scope: org\n  version:\
                    \ 1234567890\n  git_details:\n    object_id: example_object\n\
                    \    branch_name: branch\n    file_path: /folder/file.json\n \
                    \   repo_name: example_repository\n    commit_id: abcd123\n  \
                    \  file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                    \  updated: 1234567890\n  store_type: INLINE\n  connector_ref:\
                    \ example_connector_ref\n  stable_template: true\ninputs: example\n"
    put:
      tags:
      - Project Template
      summary: Update Template
      description: Updates particular version of Template at Project scope.
      operationId: update-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateUpdateBody'
      responses:
        "200":
          description: Template Response Body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value:
                    account: example_account
                    org: example_organization
                    project: example_project
                    slug: example_template
                    name: Example_template
                    description: string
                    tags:
                      example-tag-1: example-tag-1-value
                      example-tag-2: example-tag-2-value
                    yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                      \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n  \
                      \  type: Custom\n    spec:\n      execution:\n        steps:\n\
                      \          - step:\n              type: ShellScript\n      \
                      \        name: ss1\n              identifier: ss1\n        \
                      \      spec:\n                shell: Bash\n                onDelegate:\
                      \ true\n                source:\n                  type: Inline\n\
                      \                  spec:\n                    script: exit 1\n\
                      \                environmentVariables: []\n                outputVariables:\
                      \ []\n              timeout: 10m\n"
                    version_label: example_version
                    entity_type: Stage
                    child_type: example_child_type
                    scope: org
                    version: 1234567890
                    git_details:
                      object_id: example_object
                      branch_name: branch
                      file_path: /folder/file.json
                      repo_name: example_repository
                      commit_id: abcd123
                      file_url: www.repo/folder/file.com
                      repo_url: www.repo.com
                    updated: 1234567890
                    store_type: INLINE
                    connector_ref: example_connector_ref
                    stable_template: true
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
              examples:
                example-1:
                  value: "account: example_account\norg: example_organization\nproject:\
                    \ example_project\nslug: example_template\nname: Example_template\n\
                    description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                    \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n\
                    \    name: Example_template\n    identifier: example_template\n\
                    \    versionLabel: v1\n    type: Stage\n    tags: {}\n    spec:\n\
                    \      type: Custom\n      spec:\n        execution:\n       \
                    \   steps:\n            - step:\n                type: ShellScript\n\
                    \                name: ss1\n                identifier: ss1\n\
                    \                spec:\n                  shell: Bash\n      \
                    \            onDelegate: true\n                  source:\n   \
                    \                 type: Inline\n                    spec:\n  \
                    \                    script: exit 1\n                  environmentVariables:\
                    \ []\n                  outputVariables: []\n                timeout:\
                    \ 10m\nversion_label: example_version\nentity_type: Stage\nchild_type:\
                    \ example_child_type\nscope: org\nversion: 1234567890\ngit_details:\n\
                    \  object_id: example_object\n  branch_name: branch\n  file_path:\
                    \ /folder/file.json\n  repo_name: example_repository\n  commit_id:\
                    \ abcd123\n  file_url: www.repo/folder/file.com\n  repo_url: www.repo.com\n\
                    updated: 1234567890\nstore_type: INLINE\nconnector_ref: example_connector_ref\n\
                    stable_template: true\n"
    delete:
      tags:
      - Project Template
      summary: Delete Template
      description: Deletes particular version of Template at Project scope.
      operationId: delete-template-project
      parameters:
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: comments
        in: query
        description: 'Specify comment with respect to changes  '
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
  /v1/orgs/{org}/projects/{project}/templates/{template}/versions/{version}/stable:
    put:
      tags:
      - Project Template
      summary: Update Stable Template
      description: Updates the stable version of Template at Project scope.
      operationId: update-template-stable-project
      parameters:
      - name: org
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: template
        in: path
        description: Template Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: version
        in: path
        description: Version Label for Template
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Slug field of the account the resource is scoped to. This is\
          \ required for Authorization methods other than the x-api-key header. If\
          \ you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TemplateFetchBody'
      responses:
        "200":
          description: Template stable version update Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value:
                    stable_version: example_version
            application/yaml:
              schema:
                $ref: '#/components/schemas/TemplateUpdateStableResponse'
              examples:
                example-1:
                  value: "stable_version: example_version\n"
components:
  schemas:
    RolesResponse:
      title: RolesResponse
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Role Identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Role Name
        permissions:
          uniqueItems: true
          type: array
          description: Permissions for this Role.
          items:
            type: string
        allowed_scope_levels:
          uniqueItems: true
          type: array
          description: The Scope levels at which this Role can be used.
          items:
            type: string
            enum:
            - account
            - organization
            - project
        description:
          maxLength: 1024
          type: string
          description: Role description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Role tags
        scope:
          $ref: '#/components/schemas/RoleScope'
        created:
          type: integer
          description: Creation timestamp for Role.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Role.
          format: int64
        harness_managed:
          type: boolean
          description: "This indicates if this Role is managed by Harness or not.\
            \ If true, Harness can manage and modify this Role."
      description: Role Response Model
      example:
        permissions:
        - permissions
        - permissions
        created: 0
        allowed_scope_levels:
        - account
        - account
        scope:
          org: org
          project: project
          account: account
        name: name
        description: description
        harness_managed: true
        updated: 6
        slug: slug
        tags:
          key: tags
      x-stoplight:
        id: q6oq3jxkd2who
      x-examples:
        example-role:
          slug: example_role
          name: Example_Role
          permissions:
          - core_resource_view
          allowed_scope_levels:
          - account
          description: This is an Example Role
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          scope:
            account: sample_account
            org: sample_organization
            project: sample_project
          created: 1234567890
          updated: 1234567890
          harness_managed: true
    CreateRoleRequest:
      title: CreateRoleRequest
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Role identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Role name
        permissions:
          uniqueItems: true
          type: array
          description: List of the permission identifiers.
          items:
            type: string
        description:
          maxLength: 1024
          type: string
          description: Role description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Role tags
      description: Role request body
      x-stoplight:
        id: z8g6ol73nsqjs
      x-examples:
        role-request:
          slug: example_role
          name: Example_Role
          permissions:
          - core_view
          description: This is an Example Role
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
    RoleScope:
      title: Scope
      type: object
      properties:
        account:
          type: string
          description: Account identifier
        org:
          type: string
          description: Organization identifier
        project:
          type: string
          description: Project identifier
      description: Scope of the Role
      example:
        org: org
        project: project
        account: account
      x-stoplight:
        id: w8j3bc9323bxb
      x-examples:
        example-1:
          account: sample_account
          org: sample_organization
          project: sample_project
    RoleAssignment:
      title: RoleAssignment
      required:
      - principal
      - resource_group
      - role
      - slug
      type: object
      properties:
        slug:
          type: string
          description: Role assignment slug
        resource_group:
          type: string
          description: Resource group name
        role:
          type: string
          description: Role slug
        principal:
          $ref: '#/components/schemas/Principal'
        disabled:
          type: boolean
          description: Role assignment is disabled or not
        managed:
          type: boolean
          description: Role assignment is managed or not
      description: Role assignment request model
      example:
        principal:
          type: USER
          slug: slug
          scope_level: scope_level
        resource_group: resource_group
        role: role
        managed: true
        disabled: true
        slug: slug
    Principal:
      title: Principal
      required:
      - slug
      - type
      type: object
      properties:
        scope_level:
          type: string
          description: Role assignment principal scope level
        slug:
          type: string
          description: Role assignment principal slug
        type:
          type: string
          description: Role assignment principal type
          enum:
          - USER
          - USER_GROUP
          - SERVICE
          - API_KEY
          - SERVICE_ACCOUNT
      description: Role assignment principal
      example:
        type: USER
        slug: slug
        scope_level: scope_level
    RoleAssignmentResponse:
      title: RoleAssignmentResponse
      type: object
      properties:
        roleassignment:
          $ref: '#/components/schemas/RoleAssignment'
        created:
          type: integer
          description: Creation timestamp for Role.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Role.
          format: int64
        harness_managed:
          type: boolean
          description: Is harness managed
      description: Role assignment response model
      example:
        created: 0
        roleassignment:
          principal:
            type: USER
            slug: slug
            scope_level: scope_level
          resource_group: resource_group
          role: role
          managed: true
          disabled: true
          slug: slug
        harness_managed: true
        updated: 6
    Environment:
      title: Environment
      required:
      - name
      - slug
      type: object
      properties:
        account:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Account Identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Identifier of the Environment Request.
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project Identifier for the Entity.
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Name of the Environment Request.
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Environment tags
        yaml:
          type: string
          description: Yaml related to environment
        color:
          type: string
          description: Color of the Environment
        type:
          type: string
          description: Specify the environment type whether production or Preproduction.
          enum:
          - PreProduction
          - Production
      description: This is the Environment entity defined in Harness
      example:
        color: color
        org: org
        name: name
        project: project
        description: description
        type: PreProduction
        account: account
        slug: slug
        tags:
          key: tags
        yaml: yaml
      x-examples:
        example-1:
          account: example_account
          slug: example_environment
          org: example_organization
          project: example_project
          name: Example_environment
          description: Sample Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "environment:\n  orgIdentifier: \"example_organization\"\n  projectIdentifier:\
            \ \"example_project\"\n  identifier: \"example_environment\"\n  tags:\n\
            \    example_tag: \"\"\n    example_tag_2: \"\"\n  name: \"example_environment\"\
            \n  description: \"Sample Description\"\n  type: \"Production\"\n"
          color: '#0063F7'
          type: Production
    EnvironmentResponse:
      title: EnvironmentResponse
      type: object
      properties:
        environment:
          $ref: '#/components/schemas/Environment'
        created:
          type: integer
          description: Creation timestamp for Environment.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Environment.
          format: int64
      description: Default response when a environment is returned
      example:
        environment:
          color: color
          org: org
          name: name
          project: project
          description: description
          type: PreProduction
          account: account
          slug: slug
          tags:
            key: tags
          yaml: yaml
        created: 0
        updated: 6
      x-examples:
        example-1:
          environment:
            account: example_account
            slug: example_environment
            org: example_organization
            project: example_project
            name: Example_environment
            description: Sample Description
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: "environment:\n  orgIdentifier: \"example_organization\"\n  projectIdentifier:\
              \ \"example_project\"\n  identifier: \"example_environment\"\n  tags:\n\
              \    example_tag: \"\"\n    example_tag_2: \"\"\n  name: \"example_environment\"\
              \n  description: \"Sample Description\"\n  type: \"Production\"\n"
            color: '#0063F7'
            type: Production
          created: 1234567890
          updated: 1234567890
    EnvironmentListResponse:
      title: EnvironmentListResponse
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentResponse'
      x-stoplight:
        id: xn30jotaxcafj
      x-examples:
        example-1:
        - environment:
            account: example_account
            slug: example_environment
            org: example_organization
            project: example_project
            name: Example_environment
            description: Sample Description
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: "environment:\n  orgIdentifier: \"example_organization\"\n  projectIdentifier:\
              \ \"example_project\"\n  identifier: \"example_environment\"\n  tags:\n\
              \    example_tag: \"\"\n    example_tag_2: \"\"\n  name: \"example_environment\"\
              \n  description: \"Sample Description\"\n  type: \"Production\"\n"
            color: '#0063F7'
            type: Production
          created: 1234567890
          updated: 1234567890
      x-schema-name: EnvironmentListResponse
    EnvironmentRequest:
      title: EnvironmentRequest
      required:
      - name
      - slug
      - type
      - yaml
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Identifier of the Environment
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Name of the Environment
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Environment tags
        yaml:
          type: string
          description: YAML for the Environment Request
        color:
          type: string
          description: Color of the Environment
        type:
          type: string
          description: Specify the environment type whether production or Preproduction.
          enum:
          - PreProduction
          - Production
      description: 'Environment Request Body '
      x-examples:
        example-1:
          slug: example_environment
          name: Example_environment
          description: Sample Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "environment:\n  orgIdentifier: \"example_organization\"\n  projectIdentifier:\
            \ \"example_project\"\n  identifier: \"example_environment\"\n  tags:\n\
            \    example_tag: \"\"\n    example_tag_2: \"\"\n  name: \"example_environment\"\
            \n  description: \"Sample Description\"\n  type: \"Production\"\n"
          color: '#0063F7'
          type: PreProduction
    ServiceOverrideRequest:
      title: ServiceOverrideRequest
      required:
      - yaml
      type: object
      properties:
        yaml:
          type: string
          description: Yaml related to service override
      description: Service Override Request Body
      x-stoplight:
        id: 0licq81hyhkfk
      x-examples:
        example-1:
          yaml: "serviceOverrides:\n    environmentRef: example_environment\n    serviceRef:\
            \ example_service\n    variables:\n        - name: sample_var_1\n    \
            \      type: String\n          value: example_val\n        - name: sample_var_2\n\
            \          value: example_val\n          type: String\n"
    ServiceOverrideResponse:
      title: ServiceOverrideResponse
      required:
      - yaml
      type: object
      properties:
        account:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Account Identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project Identifier for the Entity.
        environemnt:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Environemnt Identifier for the Entity.
        service:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Service Identifier for the Entity.
        yaml:
          type: string
          description: |
            Yaml related to service override
      description: 'Default Service Override response '
      example:
        org: org
        service: service
        project: project
        account: account
        environemnt: environemnt
        yaml: yaml
      x-stoplight:
        id: 6lpzwqbp1vb4l
      x-examples:
        example-1:
          account: example_account
          org: example_organization
          project: example_project
          environemnt: example_environment
          service: example_service
          yaml: "serviceOverrides:\n    environmentRef: example_environment\n    serviceRef:\
            \ example_service\n    variables:\n        - name: sample_var_1\n    \
            \      type: String\n          value: example_val\n        - name: sample_var_2\n\
            \          value: example_val\n          type: String\n"
    ServiceOverrideListResponse:
      title: ServiceOverrideListResponse
      type: array
      description: List of Service Overrides for a given environment
      items:
        $ref: '#/components/schemas/ServiceOverrideResponse'
      x-stoplight:
        id: 6lpzwqbp1vb4l
      x-examples:
        example-1:
        - account: example_account
          org: example_organization
          project: example_project
          environemnt: example_environment
          service: example_service
          yaml: "serviceOverrides:\n    environmentRef: example_environment\n    serviceRef:\
            \ example_service\n    variables:\n        - name: sample_var_1\n    \
            \      type: String\n          value: example_val\n        - name: sample_var_2\n\
            \          value: example_val\n          type: String\n"
      x-schema-name: ServiceOverrideListResponse
    Service:
      title: Service
      required:
      - name
      - slug
      type: object
      properties:
        account:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Account Identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Identifier of the Service Request.
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization Identifier for the Entity.
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project Identifier for the Entity.
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Name of the Service Request.
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Service tags
        yaml:
          type: string
          description: Yaml related to service
      description: This is the Service entity defined in Harness
      example:
        org: org
        name: name
        project: project
        description: description
        account: account
        slug: slug
        tags:
          key: tags
        yaml: yaml
      x-examples:
        example-1:
          account: sample_account
          slug: example_service
          org: sample_organization
          project: sample_project
          name: Example_service
          description: This is a example service
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
            \n  tags: {}\n"
    ServiceResponse:
      title: ServiceResponse
      type: object
      properties:
        service:
          $ref: '#/components/schemas/Service'
        created:
          type: integer
          description: Creation timestamp for Service.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Service.
          format: int64
      description: Default response when a service is returned
      example:
        service:
          org: org
          name: name
          project: project
          description: description
          account: account
          slug: slug
          tags:
            key: tags
          yaml: yaml
        created: 0
        updated: 6
      x-examples:
        example-1:
          service:
            account: sample_account
            slug: example_service
            org: sample_organization
            project: sample_project
            name: Example_service
            description: This is a example service
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
              \n  tags: {}\n"
          created: 1234567890
          updated: 1234567890
    ServiceRequest:
      title: ServiceRequest
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Identifier of the Service
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Name of the Service
        description:
          maxLength: 1024
          type: string
          description: Description of the entity
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Service tags
        yaml:
          type: string
          description: YAML for the Service Request
      description: 'Service Request Body '
      x-examples:
        example-1:
          slug: example_service
          name: Example_service
          description: This is a example service
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
            \n  tags: {}\n"
    CreateOrganizationRequest:
      required:
      - org
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
    Organization:
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization slug
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Organization name
        description:
          maxLength: 1024
          type: string
          description: Organization description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Organization tags
      description: Organization model
      example:
        name: name
        description: description
        slug: slug
        tags:
          key: tags
    ModuleType:
      type: string
      description: Type of Modules
      enum:
      - CD
      - CI
      - CV
      - CF
      - CE
      - STO
      - CORE
      - PMS
      - TEMPLATESERVICE
      - GOVERNANCE
      - CHAOS
    CreateProjectRequest:
      required:
      - project
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
      description: Create project request
    Project:
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project slug
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Project name
        org:
          type: string
          description: Organization slug for the project
        color:
          type: string
          description: Project color
        modules:
          maxItems: 1024
          type: array
          description: List of modules for project
          items:
            $ref: '#/components/schemas/ModuleType'
        description:
          maxLength: 1024
          type: string
          description: Project description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Project tags
      description: Project model
      example:
        color: color
        org: org
        name: name
        description: description
        slug: slug
        modules:
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        - CD
        tags:
          key: tags
      x-examples:
        example-1:
          slug: example_project_slug
          name: example-project-name
          color: '#0063F7'
          modules:
          - CD
          description: This is a example project
          tags:
            property1: value1
            property2: value2
    ProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
        created:
          type: integer
          description: Creation timestamp for the project
          format: int64
        updated:
          type: integer
          description: Updated timestamp for the project
          format: int64
      description: Project response model
      example:
        created: 0
        project:
          color: color
          org: org
          name: name
          description: description
          slug: slug
          modules:
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          - CD
          tags:
            key: tags
        updated: 6
    OrganizationResponse:
      title: OrganizationResponse
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
        created:
          type: integer
          description: Creation timestamp for organization
          format: int64
        updated:
          type: integer
          description: Updated timestamp for organization
          format: int64
        harness_managed:
          type: boolean
          description: "This indicates if this organization is managed by Harness\
            \ or not. If true, Harness can manage and modify this organization."
      description: Organization response Model
      example:
        org:
          name: name
          description: description
          slug: slug
          tags:
            key: tags
        created: 0
        harness_managed: true
        updated: 6
      x-examples:
        example-1:
          org:
            slug: example_organization
            name: Example Organization
            description: This is an Example Organization
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
          created: 1234567890
          updated: 1234567890
          harness_managed: true
    UpdateOrganizationRequest:
      required:
      - org
      type: object
      properties:
        org:
          $ref: '#/components/schemas/Organization'
      description: Update oganization request
    UpdateProjectRequest:
      required:
      - project
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Project'
      description: Update project request
    SecretSpec:
      title: SecretSpec
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This specifies the type of secret
          enum:
          - SSHKeyPath
          - SSHKeyReference
          - SSHPassword
          - SSHKerberosTGTKeyTabFile
          - SSHKerberosTGTPassword
          - SecretFile
          - SecretText
          - WinRmTGTKeyTabFile
          - WinRmTGTPassword
          - WinRmNTLM
      description: Details of the secret defined in Harness
      example:
        type: SSHKeyPath
      discriminator:
        propertyName: type
        mapping:
          SSHKeyPath: '#/components/schemas/SSHKeyPathSpec'
          SSHKeyReference: '#/components/schemas/SSHKeyReferenceSpec'
          SSHPassword: '#/components/schemas/SSHPasswordSpec'
          SSHKerberosTGTKeyTabFile: '#/components/schemas/SSHKerberosTGTKeyTabFileSpec'
          SSHKerberosTGTPassword: '#/components/schemas/SSHKerberosTGTPasswordSpec'
          SecretFile: '#/components/schemas/SecretFileSpec'
          SecretText: '#/components/schemas/SecretTextSpec'
          WinRmTGTKeyTabFile: '#/components/schemas/WinRmTGTKeyTabFileSpec'
          WinRmTGTPassword: '#/components/schemas/WinRmTGTPasswordSpec'
          WinRmNTLM: '#/components/schemas/WinRmNTLMSpec'
    SSHKeyPathSpec:
      title: SSHKeyPath
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - key_path
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKeyPath
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          key_path:
            type: string
            description: Path of the key file
          encrypted_passphrase:
            type: string
            description: This is the passphrase provided while creating the SSH key
              for local encryption
      x-discriminator-value: SSHKeyPath
    SSHKeyReferenceSpec:
      title: SSHKeyReference
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKeyReference
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          key:
            type: string
            description: SSH key
          encrypted_passphrase:
            type: string
            description: This is the passphrase provided while creating the SSH key
              for local encryption
      x-discriminator-value: SSHKeyReference
    SSHPasswordSpec:
      title: SSHPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - password
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHPassword
          port:
            type: integer
            description: SSH port
            format: int32
          username:
            type: string
            description: SSH username
          password:
            type: string
            description: SSH password
      x-discriminator-value: SSHPassword
    SSHKerberosTGTKeyTabFileSpec:
      title: SSHKerberosTGTKeyTabFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKerberosTGTKeyTabFile
          port:
            type: integer
            description: SSH port
            format: int32
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          key_path:
            type: string
            description: Kerberos keytab file path
      x-discriminator-value: SSHKerberosTGTKeyTabFile
    SSHKerberosTGTPasswordSpec:
      title: SSHKerberosTGTPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SSHKerberosTGTPassword
          port:
            type: integer
            description: SSH port
            format: int32
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          password:
            type: string
            description: Kerberos password
      x-discriminator-value: SSHKerberosTGTPassword
    SecretFileSpec:
      title: SecretFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - secret_manager_slug
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SecretFile
          secret_manager_slug:
            type: string
            description: Slug of the secret manager used to manage the secret
      x-discriminator-value: SecretFile
    SecretTextSpec:
      title: SecretText
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - secret_manager_slug
        - type
        - value_type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - SecretText
          secret_manager_slug:
            type: string
            description: Slug of the secret manager used to manage the secret
          value_type:
            type: string
            description: This has details to specify if the secret value is inline
              or referenced
            enum:
            - Inline
            - Reference
          value:
            type: string
            description: Value of the Secret
      x-discriminator-value: SecretText
    WinRmTGTKeyTabFileSpec:
      title: WinRmTGTKeyTabFile
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmTGTKeyTabFile
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          key_path:
            type: string
            description: Keytab file path
          use_ssl:
            type: boolean
            description: This is the Kerberos either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmTGTKeyTabFile
    WinRmTGTPasswordSpec:
      title: WinRmTGTPassword
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmTGTPassword
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          principal:
            type: string
            description: Kerberos principal
          realm:
            type: string
            description: Kerberos realm
          password:
            type: string
            description: Kerberos password
          use_ssl:
            type: boolean
            description: This is the Kerberos either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmTGTPassword
    WinRmNTLMSpec:
      title: WinRmNTLM
      description: This is the SSH key authentication details defined in Harness.
      allOf:
      - $ref: '#/components/schemas/SecretSpec'
      - required:
        - domain
        - password
        - type
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of secret
            enum:
            - WinRmNTLM
          port:
            type: integer
            description: WinRm port
            format: int32
            default: 5986
          domain:
            type: string
            description: This is the NTLM domain name
          username:
            type: string
            description: This is the NTLM user name
          password:
            type: string
            description: This is the NTLM password
          use_ssl:
            type: boolean
            description: This is the NTLM either to use SSL/https
            default: true
          skip_cert_checks:
            type: boolean
            description: This is the Kerberos either to skip certificate checks
            default: true
          use_no_profile:
            type: boolean
            description: This is the Kerberos powershell runs without loading profile
      x-discriminator-value: WinRmNTLM
    SecretRequest:
      required:
      - secret
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
    Secret:
      required:
      - name
      - slug
      - spec
      type: object
      properties:
        name:
          pattern: "^[0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Secret name
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Secret slug
        org:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Organization slug for secret
        project:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Project slug for secret
        tags:
          type: object
          additionalProperties:
            type: string
          description: Secret tags
        description:
          type: string
          description: Secret description
        spec:
          $ref: '#/components/schemas/SecretSpec'
      example:
        org: org
        name: name
        project: project
        description: description
        slug: slug
        spec:
          type: SSHKeyPath
        tags:
          key: tags
    SecretResponse:
      title: SecretResponse
      type: object
      properties:
        secret:
          $ref: '#/components/schemas/Secret'
        created:
          type: integer
          description: Creation timestamp for the secret
          format: int64
        updated:
          type: integer
          description: Updated timestamp for the secret
          format: int64
        draft:
          type: boolean
        governance_metadata:
          type: object
          description: Governance metadata information
      description: Secret response model
      example:
        created: 0
        draft: true
        secret:
          org: org
          name: name
          project: project
          description: description
          slug: slug
          spec:
            type: SSHKeyPath
          tags:
            key: tags
        updated: 6
        governance_metadata: {}
    ConnectorTestConnectionErrorDetail:
      title: ConnectorTestConnectionErrorDetail
      type: object
      properties:
        reason:
          type: string
          description: Reason of test connection error
        message:
          type: string
          description: Test connection error message
        code:
          type: integer
          description: Test connection error code
      description: Connector test connection errors and their details.
      example:
        reason: reason
        code: 1
        message: message
    ConnectorConnectivityDetail:
      title: ConnectorConnectivityDetail
      type: object
      properties:
        status:
          type: string
          description: Connectivity status of a Connector
          enum:
          - SUCCESS
          - PARTIAL
          - FAILURE
          - UNKNOWN
        errors:
          type: array
          description: List of errors and their details
          items:
            $ref: '#/components/schemas/ConnectorTestConnectionErrorDetail'
        error_summary:
          type: string
          description: Summary of errors
        tested_at:
          type: integer
          description: Time at which Test Connection was completed
          format: int64
        connected_at:
          type: integer
          description: This is the last time at which the Connector was successfully
            connected
          format: int64
      description: This has details of the connectivity status of the Connector.
      example:
        error_summary: error_summary
        tested_at: 5
        connected_at: 5
        errors:
        - reason: reason
          code: 1
          message: message
        - reason: reason
          code: 1
          message: message
        status: SUCCESS
    ConnectorTestConnectionResponse:
      title: ConnectorTestConnectionResponse
      type: object
      properties:
        status:
          type: string
          description: Connectivity status of a Connector
          enum:
          - SUCCESS
          - PARTIAL
          - FAILURE
          - UNKNOWN
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorTestConnectionErrorDetail'
        error_summary:
          type: string
          description: Summary of errors
        tested_at:
          type: integer
          description: Time at which Test Connection was completed
          format: int64
        delegate_id:
          type: string
          description: ID of Delegate on which Test Connection is executed
      description: This has test connection details for the Connector defined in Harness.
      example:
        error_summary: error_summary
        tested_at: 0
        delegate_id: delegate_id
        errors:
        - reason: reason
          code: 1
          message: message
        - reason: reason
          code: 1
          message: message
        status: SUCCESS
    ConnectorResponse:
      title: ConnectorResponse
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
        created:
          type: integer
          description: Creation timestamp for the connector
          format: int64
        updated:
          type: integer
          description: Updated timestamp for the connector
          format: int64
        status:
          $ref: '#/components/schemas/ConnectorConnectivityDetail'
        harness_managed:
          type: boolean
          description: "This indicates if this Connector is managed by Harness or\
            \ not. If True, Harness can manage and modify this Connector."
        governance_metadata:
          type: object
          description: Governance metadata information
      description: Connector response model
      example:
        connector:
          org: org
          name: name
          description: description
          project: project
          slug: slug
          spec:
            type: GitHttp
          tags:
            key: tags
        created: 0
        harness_managed: true
        updated: 6
        governance_metadata: {}
        status:
          error_summary: error_summary
          tested_at: 5
          connected_at: 5
          errors:
          - reason: reason
            code: 1
            message: message
          - reason: reason
            code: 1
            message: message
          status: SUCCESS
    ConnectorRequest:
      required:
      - connector
      type: object
      properties:
        connector:
          $ref: '#/components/schemas/Connector'
    Connector:
      required:
      - name
      - slug
      - spec
      type: object
      properties:
        name:
          pattern: "^[0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Connector name
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Connector slug
        description:
          type: string
          description: Connector description
        org:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Organization slug for connector
        project:
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Project slug for connector
        tags:
          type: object
          additionalProperties:
            type: string
          description: Connector tags
        spec:
          $ref: '#/components/schemas/ConnectorSpec'
      example:
        org: org
        name: name
        description: description
        project: project
        slug: slug
        spec:
          type: GitHttp
        tags:
          key: tags
    ConnectorSpec:
      title: ConnectorSpec
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: This specifies the type of connector
          enum:
          - GitHttp
          - GitHttpEncrypted
          - GitSsh
          - Appdynamics
          - AppdynamicsClientId
          - Artifactory
          - ArtifactoryEncrypted
          - ArtifactoryAnonymous
          - AwsCodeCommit
          - AwsAccessKey
          - AwsEncryptedAccessKey
          - AwsIAMRole
          - AwsIRSA
          - AwsKmsAccessKey
          - AwsKmsAssumeIAM
          - AwsKmsAssumeSTS
          - AwsSecretManagerAccessKey
          - AwsSecretManagerAssumeIAM
          - AwsSecretManagerAssumeSTS
          - AzureClientSecretKey
          - AzureClientCertificate
          - AzureInheritFromDelegateUserAssignedManagedIdentity
          - AzureInheritFromDelegateSystemAssignedManagedIdentity
      description: Details of the connector defined in Harness
      example:
        type: GitHttp
      discriminator:
        propertyName: type
        mapping:
          GitHttp: '#/components/schemas/GitHttpConnectorSpec'
          GitHttpEncrypted: '#/components/schemas/GitHttpEncryptedConnectorSpec'
          GitSsh: '#/components/schemas/GitSshConnectorSpec'
          Appdynamics: '#/components/schemas/AppdynamicsConnectorSpec'
          AppdynamicsClientId: '#/components/schemas/AppdynamicsClientIdConnectorSpec'
          Artifactory: '#/components/schemas/ArtifactoryConnectorSpec'
          ArtifactoryEncrypted: '#/components/schemas/ArtifactoryEncryptedConnectorSpec'
          ArtifactoryAnonymous: '#/components/schemas/ArtifactoryAnonymousConnectorSpec'
          AwsCodeCommit: '#/components/schemas/AwsCodeCommitConnectorSpec'
          AwsAccessKey: '#/components/schemas/AwsAccessKeyConnectorSpec'
          AwsEncryptedAccessKey: '#/components/schemas/AwsEncryptedAccessKeyConnectorSpec'
          AwsIAMRole: '#/components/schemas/AwsIAMRoleConnectorSpec'
          AwsIRSA: '#/components/schemas/AwsIRSAConnectorSpec'
          AwsKmsAccessKey: '#/components/schemas/AwsKmsAccessKeyConnectorSpec'
          AwsKmsAssumeIAM: '#/components/schemas/AwsKmsAssumeIAMConnectorSpec'
          AwsKmsAssumeSTS: '#/components/schemas/AwsKmsAssumeSTSConnectorSpec'
          AwsSecretManagerAccessKey: '#/components/schemas/AwsSecretManagerAccessKeyConnectorSpec'
          AwsSecretManagerAssumeIAM: '#/components/schemas/AwsSecretManagerAssumeIAMConnectorSpec'
          AwsSecretManagerAssumeSTS: '#/components/schemas/AwsSecretManagerAssumeSTSConnectorSpec'
          AzureClientSecretKey: '#/components/schemas/AzureClientSecretKeyConnectorSpec'
          AzureClientCertificate: '#/components/schemas/AzureClientCertificateConnectorSpec'
          AzureInheritFromDelegateUserAssignedManagedIdentity: '#/components/schemas/AzureInheritFromDelegateUserAssignedManagedIdentityConnectorSpec'
          AzureInheritFromDelegateSystemAssignedManagedIdentity: '#/components/schemas/AzureInheritFromDelegateSystemAssignedManagedIdentityConnectorSpec'
    GitHttpConnectorSpec:
      title: GitHttp
      description: This contains details of the Generic Git http connector
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - connection_type
        - password_ref
        - type
        - url
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - GitHttp
          url:
            type: string
            description: Git repo url
          branch:
            type: string
            description: branch name
          connection_type:
            type: string
            enum:
            - Account
            - Repo
            - Project
          username:
            type: string
            description: git username
          password_ref:
            type: string
            description: Reference to encrypted Harness secret for git password
          validation_repo:
            type: string
            description: validation repo
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: GitHttp
    GitHttpEncryptedConnectorSpec:
      title: GitHttpEncrypted
      description: This contains details of the Generic Git http connector
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - connection_type
        - password_ref
        - type
        - url
        - username_ref
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - GitHttpEncrypted
          url:
            type: string
            description: Git repo url
          branch:
            type: string
            description: branch name
          connection_type:
            type: string
            enum:
            - Account
            - Repo
            - Project
          username_ref:
            type: string
            description: Reference to encrypted Harness secret for git username
          password_ref:
            type: string
            description: Reference to encrypted Harness secret for git password
          validation_repo:
            type: string
            description: validation repo
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: GitHttpEncrypted
    GitSshConnectorSpec:
      title: GitSsh
      description: This contains details of the Generic Git ssh connector
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - connection_type
        - ssh_key_ref
        - type
        - url
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - GitSsh
          url:
            type: string
            description: Git repo url
          branch:
            type: string
            description: branch name
          connection_type:
            type: string
            enum:
            - Account
            - Repo
            - Project
          ssh_key_ref:
            type: string
            description: Reference to encrypted Harness secret for git ssh key
          validation_repo:
            type: string
            description: validation repo
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: GitSsh
    AppdynamicsConnectorSpec:
      title: Appdynamics
      description: This contains details of the appdynamics connector
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - account_name
        - controller_url
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - Appdynamics
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          account_name:
            type: string
            description: appdymanics account name
          controller_url:
            type: string
            description: appdynamics controller url
          username:
            type: string
            description: appdynamics username
          password_ref:
            type: string
            description: Reference to encrypted Harness secret for appdynamics password
              secret
      x-discriminator-value: Appdynamics
    AppdynamicsClientIdConnectorSpec:
      title: AppdynamicsClientId
      description: This contains details of the appdynamics connector with client
        secrets
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - account_name
        - controller_url
        - type
        type: object
        properties:
          type:
            type: string
            enum:
            - AppdynamicsClientId
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          account_name:
            type: string
            description: appdymanics account name
          controller_url:
            type: string
            description: appdynamics controller url
          client_id:
            type: string
            description: appdynamics client id
          client_secret_ref:
            type: string
            description: Reference to encrypted Harness secret for appdynamics client
              secret
      x-discriminator-value: AppdynamicsClientId
    ArtifactoryAnonymousConnectorSpec:
      title: ArtifactoryAnonymous
      description: This contains details of the artifactory connector with anonymous
        user
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - type
        - url
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - ArtifactoryAnonymous
          url:
            type: string
            description: artifactory repo url
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: ArtifactoryAnonymous
    ArtifactoryConnectorSpec:
      title: Artifactory
      description: This contains details of the artifactory connector with username/password
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - password_ref
        - type
        - url
        - username
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - Artifactory
          url:
            type: string
            description: artifactory repo url
          username:
            type: string
            description: artifactory username
          password_ref:
            type: string
            description: Reference to encrypted Harness secret for artifactory password
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: Artifactory
    ArtifactoryEncryptedConnectorSpec:
      title: ArtifactoryEncrypted
      description: This contains details of the artifactory connector with encrypted
        username/password
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - password_ref
        - type
        - url
        - username_ref
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - ArtifactoryEncrypted
          url:
            type: string
            description: artifactory repo url
          username_ref:
            type: string
            description: Reference to encrypted Harness secret for artifactory username
          password_ref:
            type: string
            description: Reference to encrypted Harness secret for artifactory password
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
      x-discriminator-value: ArtifactoryEncrypted
    AwsCodeCommitConnectorSpec:
      title: AwsCodeCommit
      description: This contains details of the AWS code commit connector
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - secret_key_ref
        - type
        - url
        - url_type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsCodeCommit
          url:
            type: string
            description: AWS codecommit repository url
          url_type:
            type: string
            description: AWS codecommit repository url type
            enum:
            - Repo
            - Region
          access_key:
            type: string
            description: AWS access key
          access_key_ref:
            type: string
            description: Reference to encrypted Harness secret for AWS access key
          secret_key_ref:
            type: string
            description: Reference to encrypted Harness secret for AWS secret key
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
      x-discriminator-value: AwsCodeCommit
    AwsAccessKeyConnectorSpec:
      title: AwsAccessKey
      description: This contains details of the AWS connector and needs AWS access
        and secret keys for an AWS IAM user.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - access_key
        - secret_key_ref
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsAccessKey
          access_key:
            type: string
            description: AWS access key
          secret_key_ref:
            type: string
            description: Reference to encrypted Harness secret for AWS secret key
          cross_account_role_arn:
            type: string
            description: "If you want to use one AWS account for the connection, but\
              \ you want to deploy or build in a different AWS account. In this scenario,\
              \ the AWS account used for AWS access in Credentials will assume the\
              \ IAM role you specify in Cross-account role ARN setting. This option\
              \ uses the AWS Security Token Service (STS) feature."
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          test_region:
            type: string
            description: "By default, Harness uses the us-east-1 region to test the\
              \ credentials for this Connector. If you want to use an AWS GovCloud\
              \ account for this Connector, select it in Test Region. GovCloud is\
              \ used by organizations such as government agencies at the federal,\
              \ state, and local level, as well as contractors, educational institutions.\
              \ It is also used for regulatory compliance with these organizations."
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
      x-discriminator-value: AwsAccessKey
    AwsEncryptedAccessKeyConnectorSpec:
      title: AwsEncryptedAccessKey
      description: This contains details of the AWS connector and needs AWS encrypted
        access and secret keys for an AWS IAM user.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - access_key_ref
        - secret_key_ref
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsEncryptedAccessKey
          access_key_ref:
            type: string
            description: Reference to encrypted Harness secret for AWS access key
          secret_key_ref:
            type: string
            description: Reference to encrypted Harness secret for AWS secret key
          cross_account_role_arn:
            type: string
            description: "If you want to use one AWS account for the connection, but\
              \ you want to deploy or build in a different AWS account. In this scenario,\
              \ the AWS account used for AWS access in Credentials will assume the\
              \ IAM role you specify in Cross-account role ARN setting. This option\
              \ uses the AWS Security Token Service (STS) feature."
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          test_region:
            type: string
            description: "By default, Harness uses the us-east-1 region to test the\
              \ credentials for this Connector. If you want to use an AWS GovCloud\
              \ account for this Connector, select it in Test Region. GovCloud is\
              \ used by organizations such as government agencies at the federal,\
              \ state, and local level, as well as contractors, educational institutions.\
              \ It is also used for regulatory compliance with these organizations."
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
      x-discriminator-value: AwsEncryptedAccessKey
    AwsIAMRoleConnectorSpec:
      title: AwsIAMRole
      description: This contains details of the AWS connector. This assume IAM role
        on Delegate and uses the IAM role of a Harness Delegate running in your AWS
        account.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsIAMRole
          cross_account_role_arn:
            type: string
            description: "If you want to use one AWS account for the connection, but\
              \ you want to deploy or build in a different AWS account. In this scenario,\
              \ the AWS account used for AWS access in Credentials will assume the\
              \ IAM role you specify in Cross-account role ARN setting. This option\
              \ uses the AWS Security Token Service (STS) feature."
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          test_region:
            type: string
            description: "By default, Harness uses the us-east-1 region to test the\
              \ credentials for this Connector. If you want to use an AWS GovCloud\
              \ account for this Connector, select it in Test Region. GovCloud is\
              \ used by organizations such as government agencies at the federal,\
              \ state, and local level, as well as contractors, educational institutions.\
              \ It is also used for regulatory compliance with these organizations."
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
      x-discriminator-value: AwsIAMRole
    AwsIRSAConnectorSpec:
      title: AwsIRSA
      description: This contains details of the AWS connector. This uses IRSA and
        forces the Harness kubernetes delegate in AWS EKS to use a specific IAM role.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsIRSA
          cross_account_role_arn:
            type: string
            description: "If you want to use one AWS account for the connection, but\
              \ you want to deploy or build in a different AWS account. In this scenario,\
              \ the AWS account used for AWS access in Credentials will assume the\
              \ IAM role you specify in Cross-account role ARN setting. This option\
              \ uses the AWS Security Token Service (STS) feature."
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          test_region:
            type: string
            description: "By default, Harness uses the us-east-1 region to test the\
              \ credentials for this Connector. If you want to use an AWS GovCloud\
              \ account for this Connector, select it in Test Region. GovCloud is\
              \ used by organizations such as government agencies at the federal,\
              \ state, and local level, as well as contractors, educational institutions.\
              \ It is also used for regulatory compliance with these organizations."
          delegate_selectors:
            type: array
            description: List of unique delegate selectors
            items:
              type: string
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
      x-discriminator-value: AwsIRSA
    AwsKmsAccessKeyConnectorSpec:
      title: AwsKmsAccessKey
      description: This contains details of the AWS and needs AWS encrypted access
        and secret keys for the AWS KMS.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - access_key
        - kms_arn
        - region
        - secret_key
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsKmsAccessKey
          kms_arn:
            type: string
            description: Amazon Resource Name (ARN)
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          access_key:
            type: string
            description: Access Key for AWS authentication
          secret_key:
            type: string
            description: Secret Key for AWS authentication
          delegate_selectors:
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
      x-discriminator-value: AwsKmsAccessKey
    AwsKmsAssumeIAMConnectorSpec:
      title: AwsKmsAssumeIAM
      description: "This contains details of the AWS connector and Harness will authenticate\
        \ using the IAM role assigned to the AWS host running the Delegate, you select\
        \ using a Delegate Selector."
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - delegate_selectors
        - kms_arn
        - region
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsKmsAssumeIAM
          kms_arn:
            type: string
            description: Amazon Resource Name (ARN)
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
      x-discriminator-value: AwsKmsAssumeIAM
    AwsKmsAssumeSTSConnectorSpec:
      title: AwsKmsAssumeSTS
      description: "This contains details of the AWS connector and Harness will authenticate\
        \ using the IAM role assigned to the AWS host running the Delegate, you select\
        \ using a Delegate Selector."
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - delegate_selectors
        - kms_arn
        - region
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsKmsAssumeSTS
          kms_arn:
            type: string
            description: Amazon Resource Name (ARN)
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          role_arn:
            type: string
            description: Role ARN for the Delegate with STS Role
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          assume_sts_role_duration:
            type: string
            description: This is the AssumeRole Session Duration
      x-discriminator-value: AwsKmsAssumeSTS
    AwsSecretManagerAccessKeyConnectorSpec:
      title: AwsSecretManagerAccessKey
      description: This contains details of the AWS and needs AWS encrypted access
        and secret keys for the AWS Secret Manager.
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - access_key
        - region
        - secret_key
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsSecretManagerAccessKey
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          access_key:
            type: string
            description: Access Key for AWS authentication
          secret_key:
            type: string
            description: Secret Key for AWS authentication
          secret_name_prefix:
            type: string
            description: Text that is prepended to the Secret name as a prefix
          delegate_selectors:
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
      x-discriminator-value: AwsSecretManagerAccessKey
    AwsSecretManagerAssumeIAMConnectorSpec:
      title: AwsSecretManagerAssumeIAM
      description: "This contains details of the AWS connector and Harness will authenticate\
        \ using the IAM role assigned to the AWS host running the Delegate, you select\
        \ using a Delegate Selector."
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - region
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsSecretManagerAssumeIAM
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          secret_name_prefix:
            type: string
            description: Text that is prepended to the Secret name as a prefix
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
      x-discriminator-value: AwsSecretManagerAssumeIAM
    AwsSecretManagerAssumeSTSConnectorSpec:
      title: AwsSecretManagerAssumeSTS
      description: "This contains details of the AWS connector and Harness will authenticate\
        \ using the STS role assigned to the AWS host running the Delegate, you select\
        \ using a Delegate Selector."
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - region
        - role_arn
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AwsSecretManagerAssumeSTS
          region:
            type: string
            description: AWS Region for kms
          default:
            type: boolean
            description: Boolean value to indicate if the Secret Manager is your default
              Secret Manager
          secret_name_prefix:
            type: string
            description: Text that is prepended to the Secret name as a prefix
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          role_arn:
            type: string
            description: Role ARN for the Delegate with STS Role
          external_id:
            type: string
            description: "If the administrator of the account to which the role belongs\
              \ provided you with an external ID, then enter that value."
          assume_sts_role_duration:
            type: string
            description: This is the AssumeRole Session Duration
      x-discriminator-value: AwsSecretManagerAssumeSTS
    AzureClientSecretKeyConnectorSpec:
      title: AzureClientSecretKey
      description: This contains details of the Azure connector and uses Azure client
        secret key details
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - application_id
        - azure_environment_type
        - secret_ref
        - tenant_id
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AzureClientSecretKey
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          azure_environment_type:
            type: string
            description: "This specifies the Azure Environment type, which is AZURE\
              \ by default."
            enum:
            - AZURE
            - AZURE_US_GOVERNMENT
            default: AZURE
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
          application_id:
            type: string
            description: Application ID of the Azure App
          tenant_id:
            type: string
            description: The Azure Active Directory (AAD) directory ID where you created
              your application
          secret_ref:
            type: string
            description: Reference to encrypted Harness secret for Azure client secret
      x-discriminator-value: AzureClientSecretKey
    AzureClientCertificateConnectorSpec:
      title: AzureClientCertificate
      description: This contains details of the Azure connector and uses Azure client
        certificate details
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - application_id
        - azure_environment_type
        - certificate_ref
        - tenant_id
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AzureClientCertificate
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          azure_environment_type:
            type: string
            description: "This specifies the Azure Environment type, which is AZURE\
              \ by default."
            enum:
            - AZURE
            - AZURE_US_GOVERNMENT
            default: AZURE
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
          application_id:
            type: string
            description: Application ID of the Azure App
          tenant_id:
            type: string
            description: The Azure Active Directory (AAD) directory ID where you created
              your application
          certificate_ref:
            type: string
            description: Reference to encrypted Harness secret for Azure client secret
      x-discriminator-value: AzureClientCertificate
    AzureInheritFromDelegateUserAssignedManagedIdentityConnectorSpec:
      title: AzureInheritFromDelegateUserAssignedManagedIdentity
      description: This contains details of the Azure connector and for azure UserAssigned
        MSI auth details
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - azure_environment_type
        - client_id
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AzureInheritFromDelegateUserAssignedManagedIdentity
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          azure_environment_type:
            type: string
            description: "This specifies the Azure Environment type, which is AZURE\
              \ by default."
            enum:
            - AZURE
            - AZURE_US_GOVERNMENT
            default: AZURE
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
          client_id:
            type: string
            description: Client Id of the ManagedIdentity resource
      x-discriminator-value: AzureInheritFromDelegateUserAssignedManagedIdentity
    AzureInheritFromDelegateSystemAssignedManagedIdentityConnectorSpec:
      title: AzureInheritFromDelegateSystemAssignedManagedIdentity
      description: This contains details of the Azure connector for contains azure
        MSI auth details
      allOf:
      - $ref: '#/components/schemas/ConnectorSpec'
      - required:
        - azure_environment_type
        - type
        type: object
        properties:
          type:
            type: string
            description: This specifies the type of connector
            enum:
            - AzureInheritFromDelegateSystemAssignedManagedIdentity
          delegate_selectors:
            minItems: 1
            type: array
            description: List of Delegate Selectors that belong to the same Delegate
              and are used to connect to the Secret Manager
            items:
              type: string
          azure_environment_type:
            type: string
            description: "This specifies the Azure Environment type, which is AZURE\
              \ by default."
            enum:
            - AZURE
            - AZURE_US_GOVERNMENT
            default: AZURE
          execute_on_delegate:
            type: boolean
            description: execute on delegate
            default: true
      x-discriminator-value: AzureInheritFromDelegateSystemAssignedManagedIdentity
    ResourceGroupsResponse:
      title: Resource Groups Response
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Resource Group Identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Resource Group Name
        color:
          type: string
          description: Color associated with the Resource Group.
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Resource Group tags
        description:
          maxLength: 1024
          type: string
          description: Resource Group description
        allowed_scope_levels:
          uniqueItems: true
          type: array
          description: Allowed scope levels for this Resource Group.
          items:
            type: string
            enum:
            - account
            - organization
            - project
        included_scope:
          type: array
          description: Included scopes for the resources belonging to the Resource
            Group.
          items:
            $ref: '#/components/schemas/ResourceGroupScope'
        resource_filter:
          type: array
          description: Specifies the actual resources present in the Resource Group.
          items:
            $ref: '#/components/schemas/ResourceFilter'
        include_all_resources:
          type: boolean
          description: Boolean value for including all resources in Resource Group.
        harness_managed:
          type: boolean
          description: "This indicates if this Resource Group is managed by Harness\
            \ or not. If true, Harness can manage and modify this Resource Group."
        created:
          type: integer
          description: Creation timestamp for Resource Group.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Resource Group.
          format: int64
      description: Resource Group response body
      example:
        resource_filter:
        - identifiers:
          - identifiers
          - identifiers
          attribute_values:
          - attribute_values
          - attribute_values
          resource_type: resource_type
          attribute_name: attribute_name
        - identifiers:
          - identifiers
          - identifiers
          attribute_values:
          - attribute_values
          - attribute_values
          resource_type: resource_type
          attribute_name: attribute_name
        include_all_resources: true
        color: color
        included_scope:
        - filter: EXCLUDING_CHILD_SCOPES
          org: org
          project: project
          account: account
        - filter: EXCLUDING_CHILD_SCOPES
          org: org
          project: project
          account: account
        created: 0
        allowed_scope_levels:
        - account
        - account
        name: name
        description: description
        harness_managed: true
        updated: 6
        slug: slug
        tags:
          key: tags
      x-stoplight:
        id: q6oq3jxkd2who
      x-examples:
        example-resource-group:
          slug: example_resource_group
          name: Example_Resource Group
          color: '#0063F7'
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          description: This is an Example Resource Group
          allowed_scope_levels:
          - account
          included_scope:
          - filter: EXCLUDING_CHILD_SCOPES
            account: sample_account
            org: sample_organization
            project: sample_project
          resource_filter:
          - resource_type: resource
            identifiers:
            - example_resource
            attribute_name: resource_attribute
            attribute_values:
            - example_resource_attribute
          include_all_resources: false
          harness_managed: true
          created: 1234567890
          updated: 1234567890
    CreateResourceGroupRequest:
      title: Create Resource Group Request
      required:
      - name
      - slug
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Resource Group identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Resource Group name
        color:
          type: string
          description: Color associated with the Resource Group.
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Resource Group tags
        description:
          maxLength: 1024
          type: string
          description: Resource Group description
        included_scope:
          type: array
          description: Included scopes for the resources belonging to the Resource
            Group.
          items:
            $ref: '#/components/schemas/ResourceGroupScope'
        resource_filter:
          type: array
          description: Specifies the actual resources present in the Resource Group.
          items:
            $ref: '#/components/schemas/ResourceFilter'
        include_all_resources:
          type: boolean
          description: Boolean value for including all resources in Resource Group.
      description: Resource Group request body
      x-stoplight:
        id: z8g6ol73nsqjs
      x-examples:
        resource-group-request:
          slug: example_resource_group
          name: Example_Resource Group
          color: '#0063F7'
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          description: This is an Example Resource Group
          included_scope:
          - filter: EXCLUDING_CHILD_SCOPES
            account: sample_account
            org: sample_organization
            project: sample_project
          resource_filter:
          - resource_type: resource
            identifiers:
            - example_resource
            attribute_name: resource_attribute
            attribute_values:
            - example_resource_attribute
          include_all_resources: false
    ResourceGroupScope:
      title: Resource Group Scope
      required:
      - filter
      type: object
      properties:
        filter:
          type: string
          description: Including or Excluding Child scopes.
          enum:
          - EXCLUDING_CHILD_SCOPES
          - INCLUDING_CHILD_SCOPES
        account:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Account identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
      description: Included scopes for the Resources belonging to the Resource Group
      example:
        filter: EXCLUDING_CHILD_SCOPES
        org: org
        project: project
        account: account
      x-stoplight:
        id: w8j3bc9323bxb
      x-examples:
        example-1:
          filter: EXCLUDING_CHILD_SCOPES
          account: sample_account
          org: sample_organization
          project: sample_project
    ResourceFilter:
      title: Resource Filter
      required:
      - resource_type
      type: object
      properties:
        resource_type:
          type: string
          description: Specifies the type of Resource.
        identifiers:
          type: array
          description: Identifiers for the Resource Type.
          items:
            maxLength: 64
            minLength: 1
            pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            type: string
        attribute_name:
          type: string
          description: Attribute name on the basis of which filtering will be done.
        attribute_values:
          type: array
          description: Attribute values selected.
          items:
            type: string
      description: Specifies resources in Resource Group.
      example:
        identifiers:
        - identifiers
        - identifiers
        attribute_values:
        - attribute_values
        - attribute_values
        resource_type: resource_type
        attribute_name: attribute_name
      x-stoplight:
        id: m5qhp13hm6o1z
      x-examples:
        example-resource-filter:
          resource_type: resource
          identifiers:
          - example_resource
          attribute_name: resource_attribute
          attribute_values:
          - example_resource_attribute
    ResourceSelectorFilter:
      title: Resource Selector Filter
      required:
      - resource_type
      type: object
      properties:
        resource_type:
          type: string
          description: Filter by Resource type
        resource_slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Filter by Resource identifier
      description: Filter by whether the Resource Group has a particular Resource.
      x-stoplight:
        id: 0eh9msctzz3fy
      x-examples:
        example-resource-selector-filter:
          resource_type: resource
          resource_slug: example_resource
    ResourceGroupFilterRequestBody:
      title: Resource Group Filter Request Body
      type: object
      properties:
        account:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Filter by Account identifier.
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Filter by Organization identifier.
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Filter by Project identifier.
        search_term:
          type: string
          description: Filter Resource Group matching by identifier/name.
        identifier_filter:
          uniqueItems: true
          type: array
          description: Filter by Resource Group identifiers
          items:
            maxLength: 64
            minLength: 1
            pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
            type: string
        resource_selector_filter:
          uniqueItems: true
          type: array
          description: Filter based on whether it has a particular Resource.
          items:
            $ref: '#/components/schemas/ResourceSelectorFilter'
        managed_filter:
          type: string
          description: Filter based on whether the Resource Group is Harness Managed.
          enum:
          - NO_FILTER
          - ONLY_MANAGED
          - ONLY_CUSTOM
      description: Filter request body for Resource Groups.
      x-stoplight:
        id: bzgvkhevpa4rq
      x-examples:
        example-filter:
          account: example_account
          org: example_organization
          project: example_project
          search_term: search
          identifier_filter:
          - example_resource_group
          resource_selector_filter:
          - resource_type: RESOURCE
            resource_slug: example_resource
          managed_filter: NO_FILTER
    GitDetails:
      title: Git Response Details
      type: object
      properties:
        object_id:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_$]{0,63}$"
          type: string
          description: Object identifier / blob id
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        commit_id:
          type: string
          description: Latest commit identifier.
        file_url:
          type: string
          description: File URL of the Entity.
        repo_url:
          type: string
          description: Repository URL of the Entity.
      description: Git Experience related details of the Entity.
      example:
        file_path: file_path
        file_url: file_url
        repo_url: repo_url
        branch_name: branch_name
        repo_name: repo_name
        object_id: object_id
        commit_id: commit_id
      x-stoplight:
        id: qkq00fbqykhxw
      x-examples:
        example-git:
          object_id: example_object
          branch_name: branch
          file_path: /folder/file.json
          repo_name: example_repository
          commit_id: abcd123
          file_url: www.repo/folder/file.com
          repo_url: www.repo.com
    PipelineGetResponseBody:
      title: Pipeline Get Response Body
      type: object
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (returned as a String).
        template_applied_pipeline_yaml:
          type: string
          description: Pipeline YAML after resolving Templates (returned as a String).
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Pipeline identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Pipeline name
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
        description:
          maxLength: 1024
          type: string
          description: Pipeline description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Pipeline tags
        modules:
          uniqueItems: true
          type: array
          description: Modules utilised in the Pipeline.
          items:
            type: string
        git_details:
          $ref: '#/components/schemas/GitDetails'
        valid:
          type: boolean
          description: Specifies whether Pipeline is a valid or not.
        yaml_error_wrapper:
          type: array
          description: YAML schema errors.
          items:
            $ref: '#/components/schemas/YAMLSchemaErrorWrapper'
        created:
          type: integer
          description: Creation timestamp for Pipeline.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Pipeline.
          format: int64
      description: Pipeline response body.
      example:
        template_applied_pipeline_yaml: template_applied_pipeline_yaml
        org: org
        created: 0
        project: project
        description: description
        modules:
        - modules
        - modules
        yaml_error_wrapper:
        - message_fqn: message_fqn
          fqn: fqn
          stage_info:
            fqn: fqn
            name: name
            type: type
            slug: slug
          step_info: null
          hint_message: hint_message
          message: message
        - message_fqn: message_fqn
          fqn: fqn
          stage_info:
            fqn: fqn
            name: name
            type: type
            slug: slug
          step_info: null
          hint_message: hint_message
          message: message
        pipeline_yaml: pipeline_yaml
        tags:
          key: tags
        valid: true
        name: name
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        slug: slug
      x-stoplight:
        id: twnioaqmn69uy
      x-examples:
        example-get:
          pipeline_yaml: example_yaml_text
          template_applied_pipeline_yaml: example_yaml_text_with_template
          slug: example_pipeline
          name: ExamplePipeline
          org: example_org
          project: example_project
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          modules:
          - cd
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          valid: true
          yaml_error_wrapper:
            message: something is incorrect
            message_fqn: something is incorrect at pipeline.name
            stage_info:
              slug: example_stage
              type: stage
              name: Example Stage
              fqn: pipeline.stages.stage
            step_info:
              slug: example_step
              type: string
              name: string
              fqn: pipeline.steps.step
            fqn: pipeline.name
            hint_message: try changing something
          created: 1234567890
          updated: 1234567890
    PipelineListResponseBody:
      title: Pipeline List Response Body
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Pipeline identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Pipeline name
        description:
          maxLength: 1024
          type: string
          description: Pipeline description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Pipeline tags
        created:
          type: integer
          description: Creation timestamp for Pipeline.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Pipeline.
          format: int64
        modules:
          uniqueItems: true
          type: array
          description: Modules utilised in the Pipeline.
          items:
            type: string
        execution_summary:
          $ref: '#/components/schemas/ExecutionSummary'
        recent_execution_info:
          type: array
          description: Array of recent Execution information
          items:
            $ref: '#/components/schemas/RecentExecutionInfo'
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not
            (for Git Experience).
          enum:
          - INLINE
          - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity (for Git Experience).
        valid:
          type: boolean
          description: Specifies whether Pipeline is a valid or not.
        git_details:
          $ref: '#/components/schemas/GitDetails'
      description: Pipeline List response body
      example:
        execution_summary:
          deployments_count:
          - 5
          - 5
          errors_count:
          - 1
          - 1
        created: 0
        connector_ref: connector_ref
        description: description
        store_type: INLINE
        modules:
        - modules
        - modules
        tags:
          key: tags
        valid: true
        name: name
        recent_execution_info:
        - execution_id: execution_id
          executor_info:
            trigger_type: NOOP
            email: email
            username: username
          execution_status: Running
          ended: 2
          run_number: 0
          started: 5
        - execution_id: execution_id
          executor_info:
            trigger_type: NOOP
            email: email
            username: username
          execution_status: Running
          ended: 2
          run_number: 0
          started: 5
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        slug: slug
      x-stoplight:
        id: kaxl2v3p6i4wx
      x-examples:
        example-summary:
          slug: example_pipeline
          name: Example Pipeline
          description: This is an Example Pipeline
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          created: 1234567890
          updated: 1234567890
          modules: CD
          execution_summary:
            errors_count:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            deployments_count:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
          recent_execution_info:
          - executor_info:
              trigger_type: NOOP
              username: harness_user
              email: noreply@harness.io
            execution_id: example_execution_slug
            execution_status: Running
            started: 1234567890
            ended: 1234567890
            run_number: 5
          store_type: REMOTE
          connector_ref: example_connector
          valid: true
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
    ExecutionSummary:
      title: Execution Summary
      type: object
      properties:
        errors_count:
          type: array
          description: Number of errors on each of the last 7 days.
          items:
            type: integer
            format: int32
        deployments_count:
          type: array
          description: Number of deployments on each of the last 7 days.
          items:
            type: integer
            format: int32
      description: Execution Summary
      example:
        deployments_count:
        - 5
        - 5
        errors_count:
        - 1
        - 1
      x-stoplight:
        id: mxtmp0n5g1bsg
      x-examples:
        example-execution-summary:
          errors_count:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          deployments_count:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
    PipelineCreateRequestBody:
      title: Pipeline Create Request Body
      required:
      - name
      - pipeline_yaml
      - slug
      type: object
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (to be passed as a String).
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Pipeline identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Pipeline name
        description:
          maxLength: 1024
          type: string
          description: Pipeline description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Pipeline tags
        git_details:
          $ref: '#/components/schemas/GitCreateDetails'
      description: 'Pipeline request body object '
      x-stoplight:
        id: enghevjhz64ca
      x-examples:
        example-pipeline:
          pipeline_yaml: "pipeline:\n  allowStageExecutions: false\n  stages:\n  \
            \  - stage:\n        name: Example Build Stage\n        identifier: example_build_stage\n\
            \        description: ''\n        type: Approval\n        spec:\n    \
            \      execution:\n            steps:\n              - step:\n       \
            \           name: Approval Step\n                  identifier: Approval_Step\n\
            \                  type: HarnessApproval\n                  timeout: 1d\n\
            \                  spec:\n                    approvalMessage: |-\n  \
            \                    Please review the following information\n       \
            \               and approve the pipeline progression\n               \
            \     includePipelineExecutionHistory: true\n                    approvers:\n\
            \                      minimumCount: 1\n                      disallowPipelineExecutor:\
            \ false\n                      userGroups: <+input>\n                \
            \    approverInputs: []\n              - step:\n                  type:\
            \ ShellScript\n                  name: ShellScript Step\n            \
            \      identifier: ShellScript_Step\n                  spec:\n       \
            \             shell: Bash\n                    onDelegate: true\n    \
            \                source:\n                      type: Inline\n       \
            \               spec:\n                        script: <+input>\n    \
            \                environmentVariables: []\n                    outputVariables:\
            \ []\n                    executionTarget: {}\n                  timeout:\
            \ 10m\n        tags: {}\n    - stage:\n        name: Example Deploy Stage\n\
            \        identifier: example_deploy_stage\n        description: ''\n \
            \       type: Deployment\n        spec:\n          serviceConfig:\n  \
            \          serviceRef: <+input>\n            serviceDefinition:\n    \
            \          spec:\n                variables: []\n              type: Kubernetes\n\
            \          infrastructure:\n            environmentRef: <+input>\n   \
            \         infrastructureDefinition:\n              type: KubernetesDirect\n\
            \              spec:\n                connectorRef: <+input>\n       \
            \         namespace: <+input>\n                releaseName: release-<+INFRA_KEY>\n\
            \            allowSimultaneousDeployments: false\n          execution:\n\
            \            steps:\n              - step:\n                  name: Rollout\
            \ Deployment\n                  identifier: rolloutDeployment\n      \
            \            type: K8sRollingDeploy\n                  timeout: 10m\n\
            \                  spec:\n                    skipDryRun: false\n    \
            \        rollbackSteps:\n              - step:\n                  name:\
            \ Rollback Rollout Deployment\n                  identifier: rollbackRolloutDeployment\n\
            \                  type: K8sRollingRollback\n                  timeout:\
            \ 10m\n                  spec: {}\n        tags: {}\n        failureStrategies:\n\
            \          - onFailure:\n              errors:\n                - AllErrors\n\
            \              action:\n                type: StageRollback\n"
          slug: example_pipeline
          name: ExamplePipeline
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            branch_name: branch
            file_path: /folder/file.json
            commit_message: Added Harness Git Experience
            base_branch: old_branch
            connector_ref: git_connector
            store_type: REMOTE
            repo_name: example_repository
    PipelineCreateResponseBody:
      title: Pipeline Create Response Body
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Pipeline identifier
      description: Pipeline response body
      example:
        slug: slug
      x-stoplight:
        id: 70uk481o3cw8j
      x-examples:
        example-pipeline:
          slug: example_pipeline
    YAMLSchemaErrorWrapper:
      title: YAML Schema Error Wrapper
      type: object
      properties:
        message:
          type: string
          description: Error message
        message_fqn:
          type: string
          description: Error message with FQN
        stage_info:
          $ref: '#/components/schemas/NodeInfo'
        step_info:
          $ref: '#/components/schemas/NodeInfo'
        fqn:
          type: string
          description: Fully Qualified Name as per YAML
        hint_message:
          type: string
          description: Hint message
      description: YAML schema error.
      example:
        message_fqn: message_fqn
        fqn: fqn
        stage_info:
          fqn: fqn
          name: name
          type: type
          slug: slug
        step_info: null
        hint_message: hint_message
        message: message
      x-stoplight:
        id: 64bisstgjyjfh
      x-examples:
        example-schema-error:
          message: something is incorrect
          message_fqn: something is incorrect at pipeline.name
          stage_info:
            slug: example_stage
            type: stage
            name: Example Stage
            fqn: pipeline.stages.stage
          step_info:
            slug: example_step
            type: string
            name: string
            fqn: pipeline.steps.step
          fqn: pipeline.name
          hint_message: try changing something
    NodeInfo:
      title: Entity Details
      type: object
      properties:
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Entity identifier
        type:
          type: string
          description: Type of Entity
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Name of Entity
        fqn:
          type: string
          description: Fully Qualified Name
      description: Entity details
      example:
        fqn: fqn
        name: name
        type: type
        slug: slug
      x-stoplight:
        id: wgx64fjolzlcr
      x-examples:
        example-node-info:
          slug: example_stage
          type: stage
          name: name
          fqn: pipeline.stages.stage1.name
    RecentExecutionInfo:
      title: Recent Execution Information
      type: object
      properties:
        executor_info:
          $ref: '#/components/schemas/ExecutorInfo'
        execution_id:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Execution identifier
        execution_status:
          type: string
          description: Last Execution status of the Pipeline.
          enum:
          - Running
          - AsyncWaiting
          - TaskWaiting
          - TimedWaiting
          - Failed
          - Errored
          - IgnoreFailed
          - NotStarted
          - Expired
          - Aborted
          - Discontinuing
          - Queued
          - Paused
          - ResourceWaiting
          - InterventionWaiting
          - ApprovalWaiting
          - Success
          - Suspended
          - Skipped
          - Pausing
          - ApprovalRejected
          - InputWaiting
          - NOT_STARTED
          - INTERVENTION_WAITING
          - APPROVAL_WAITING
          - APPROVAL_REJECTED
          - Waiting
        started:
          type: integer
          description: Start timestamp of Execution
          format: int64
        ended:
          type: integer
          description: End timestamp of Execution
          format: int64
        run_number:
          type: integer
          description: The Execution number of this Pipeline.
          format: int32
          example: 0
      description: Recent Execution information of the Pipeline.
      example:
        execution_id: execution_id
        executor_info:
          trigger_type: NOOP
          email: email
          username: username
        execution_status: Running
        ended: 2
        run_number: 0
        started: 5
      x-stoplight:
        id: bfup5ytbj94pn
      x-examples:
        example-recent:
          executor_info:
            trigger_type: NOOP
            username: harness_user
            email: noreply@harness.io
          execution_id: example_execution_slug
          execution_status: Running
          started: 1234567890
          ended: 1234567890
          run_number: 5
    ExecutorInfo:
      title: Executor Information
      type: object
      properties:
        trigger_type:
          type: string
          description: Trigger type
          enum:
          - NOOP
          - MANUAL
          - WEBHOOK
          - WEBHOOK_CUSTOM
          - SCHEDULER_CRON
        username:
          type: string
          description: Username of the Executor.
        email:
          type: string
          description: Email address of the Executor.
      description: Information regarding Executor of Pipeline.
      example:
        trigger_type: NOOP
        email: email
        username: username
      x-stoplight:
        id: 41793mh9py33c
      x-examples:
        example-executor:
          trigger_type: NOOP
          username: harness_user
          email: noreply@harness.io
    GitCreateDetails:
      title: Create Git Details
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
        repo_name:
          type: string
          description: Name of the repository.
      description: Contains parameters related to creating an Entity for Git Experience.
      x-stoplight:
        id: 36li0g4pug41q
      x-examples:
        example-create-git:
          branch_name: branch
          file_path: /folder/file.json
          commit_message: Added Harness Git Experience
          base_branch: old_branch
          connector_ref: git_connector
          store_type: REMOTE
          repo_name: example_repository
    GitUpdateDetails:
      title: Update Git Details
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        last_object_id:
          type: string
          description: Last object identifier (for Github only).
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        last_commit_id:
          type: string
          description: Last commit identifier.
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
        repo_name:
          type: string
          description: Name of the repository.
      description: Contains parameters related to updating an Entity for Git Experience.
      x-stoplight:
        id: cko6b02f6trvt
      x-examples:
        example-update-git:
          branch_name: branch
          commit_message: Added Harness Git Experience
          last_object_id: abcdXYZ
          base_branch: old_branch
          last_commit_id: abcdXYZ
          connector_ref: git_connector
          store_type: REMOTE
          repo_name: example_repository
    PipelineUpdateRequestBody:
      title: Pipeline Update Request Body
      required:
      - name
      - pipeline_yaml
      - slug
      type: object
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (to be passed as a String).
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Pipeline identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Pipeline name
        description:
          maxLength: 1024
          type: string
          description: Pipeline description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Pipeline tags
        git_details:
          $ref: '#/components/schemas/GitUpdateDetails'
      description: 'Pipeline request body object '
      x-stoplight:
        id: u6xvv15ghw7kk
      x-examples:
        example-pipeline:
          pipeline_yaml: "pipeline:\n  allowStageExecutions: false\n  stages:\n  \
            \  - stage:\n        name: Example Build Stage\n        identifier: example_build_stage\n\
            \        description: ''\n        type: Approval\n        spec:\n    \
            \      execution:\n            steps:\n              - step:\n       \
            \           name: Approval Step\n                  identifier: Approval_Step\n\
            \                  type: HarnessApproval\n                  timeout: 1d\n\
            \                  spec:\n                    approvalMessage: |-\n  \
            \                    Please review the following information\n       \
            \               and approve the pipeline progression\n               \
            \     includePipelineExecutionHistory: true\n                    approvers:\n\
            \                      minimumCount: 1\n                      disallowPipelineExecutor:\
            \ false\n                      userGroups: <+input>\n                \
            \    approverInputs: []\n              - step:\n                  type:\
            \ ShellScript\n                  name: ShellScript Step\n            \
            \      identifier: ShellScript_Step\n                  spec:\n       \
            \             shell: Bash\n                    onDelegate: true\n    \
            \                source:\n                      type: Inline\n       \
            \               spec:\n                        script: <+input>\n    \
            \                environmentVariables: []\n                    outputVariables:\
            \ []\n                    executionTarget: {}\n                  timeout:\
            \ 10m\n        tags: {}\n    - stage:\n        name: Example Deploy Stage\n\
            \        identifier: example_deploy_stage\n        description: ''\n \
            \       type: Deployment\n        spec:\n          serviceConfig:\n  \
            \          serviceRef: <+input>\n            serviceDefinition:\n    \
            \          spec:\n                variables: []\n              type: Kubernetes\n\
            \          infrastructure:\n            environmentRef: <+input>\n   \
            \         infrastructureDefinition:\n              type: KubernetesDirect\n\
            \              spec:\n                connectorRef: <+input>\n       \
            \         namespace: <+input>\n                releaseName: release-<+INFRA_KEY>\n\
            \            allowSimultaneousDeployments: false\n          execution:\n\
            \            steps:\n              - step:\n                  name: Rollout\
            \ Deployment\n                  identifier: rolloutDeployment\n      \
            \            type: K8sRollingDeploy\n                  timeout: 10m\n\
            \                  spec:\n                    skipDryRun: false\n    \
            \        rollbackSteps:\n              - step:\n                  name:\
            \ Rollback Rollout Deployment\n                  identifier: rollbackRolloutDeployment\n\
            \                  type: K8sRollingRollback\n                  timeout:\
            \ 10m\n                  spec: {}\n        tags: {}\n        failureStrategies:\n\
            \          - onFailure:\n              errors:\n                - AllErrors\n\
            \              action:\n                type: StageRollback\n"
          slug: example_pipeline
          name: ExamplePipeline
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: abcdXYZ
            base_branch: old_branch
            last_commit_id: abcdXYZ
            connector_ref: git_connector
            store_type: REMOTE
            repo_name: example_repository
    TemplateResponse:
      title: templateResponse
      required:
      - account
      - name
      - slug
      - yaml
      type: object
      properties:
        account:
          type: string
          description: Account identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Template identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Template Name
        description:
          maxLength: 1024
          type: string
          description: Template description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Template tags
        yaml:
          type: string
          description: Yaml related to template
        version_label:
          type: string
          description: Version label of template
        entity_type:
          type: string
          description: |
            Type of Template
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
        child_type:
          type: string
          description: Defines child template type
        scope:
          type: string
          description: Scope of template
          enum:
          - org
          - project
          - account
          - unknown
        version:
          type: integer
          description: Version of template
          format: int64
        git_details:
          $ref: '#/components/schemas/EntityGitDetails'
        updated:
          type: integer
          description: |
            Last modification timestamp for Service.
          format: int64
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not
            (for Git Experience).
          enum:
          - INLINE
          - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity (for Git Experience).
        stable_template:
          type: boolean
          description: True if this version is stable version of Template
      description: Default response when a template is returned
      example:
        version_label: version_label
        org: org
        connector_ref: connector_ref
        project: project
        description: description
        store_type: INLINE
        version: 0
        tags:
          key: tags
        entity_type: Step
        stable_template: true
        scope: org
        name: name
        child_type: child_type
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        account: account
        slug: slug
        yaml: yaml
      x-stoplight:
        id: kj7anewxbf9xe
      x-examples:
        example-1:
          account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          version_label: example_version
          entity_type: Stage
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
    TemplateMetadataSummaryResponse:
      title: TemplateMetadataSummaryResponse
      type: object
      properties:
        account:
          type: string
          description: Account identifier
        org:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Organization identifier
        project:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Project identifier
        slug:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          type: string
          description: Template identifier
        name:
          maxLength: 64
          minLength: 1
          pattern: "^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$"
          type: string
          description: Template Name
        description:
          maxLength: 1024
          type: string
          description: Template description
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
          description: Template tags
        version_label:
          type: string
          description: Version label of template
        entity_type:
          type: string
          description: |
            Type of Template
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
        child_type:
          type: string
          description: Defines child template type
        scope:
          type: string
          description: Scope of template
          enum:
          - org
          - project
          - account
          - unknown
        version:
          type: integer
          description: Version of template
          format: int64
        git_details:
          $ref: '#/components/schemas/EntityGitDetails'
        updated:
          type: integer
          description: |
            Last modification timestamp for Service.
          format: int64
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not
            (for Git Experience).
          enum:
          - INLINE
          - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity (for Git Experience).
        stable_template:
          type: boolean
          description: True if this version is stable version of Template
      description: Single Template Metadata Model
      example:
        version_label: version_label
        org: org
        connector_ref: connector_ref
        project: project
        description: description
        store_type: INLINE
        version: 0
        tags:
          key: tags
        entity_type: Step
        stable_template: true
        scope: org
        name: name
        child_type: child_type
        git_details:
          file_path: file_path
          file_url: file_url
          repo_url: repo_url
          branch_name: branch_name
          repo_name: repo_name
          object_id: object_id
          commit_id: commit_id
        updated: 6
        account: account
        slug: slug
      x-stoplight:
        id: 92a2rxt8uqji1
      x-examples:
        example-1:
          account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          version_label: example_version
          entity_type: Step
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
    TemplateWithInputsResponse:
      title: templateWithInputsResponse
      type: object
      properties:
        template:
          $ref: '#/components/schemas/TemplateResponse'
        inputs:
          type: string
          description: Input Yaml for the Template
      description: Returns Template input YAML with template response
      example:
        template:
          version_label: version_label
          org: org
          connector_ref: connector_ref
          project: project
          description: description
          store_type: INLINE
          version: 0
          tags:
            key: tags
          entity_type: Step
          stable_template: true
          scope: org
          name: name
          child_type: child_type
          git_details:
            file_path: file_path
            file_url: file_url
            repo_url: repo_url
            branch_name: branch_name
            repo_name: repo_name
            object_id: object_id
            commit_id: commit_id
          updated: 6
          account: account
          slug: slug
          yaml: yaml
        inputs: inputs
      x-stoplight:
        id: 3fo3c6coeu472
      x-examples:
        example-1:
          template:
            account: example_account
            org: example_organization
            project: example_project
            slug: example_template
            name: Example_template
            description: string
            tags:
              example-tag-1: example-tag-1-value
              example-tag-2: example-tag-2-value
            yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
              \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
              \    spec:\n      execution:\n        steps:\n          - step:\n  \
              \            type: ShellScript\n              name: ss1\n          \
              \    identifier: ss1\n              spec:\n                shell: Bash\n\
              \                onDelegate: true\n                source:\n       \
              \           type: Inline\n                  spec:\n                \
              \    script: exit 1\n                environmentVariables: []\n    \
              \            outputVariables: []\n              timeout: 10m\n"
            version_label: example_version
            entity_type: Stage
            child_type: example_child_type
            scope: org
            version: 1234567890
            git_details:
              object_id: example_object
              branch_name: branch
              file_path: /folder/file.json
              repo_name: example_repository
              commit_id: abcd123
              file_url: www.repo/folder/file.com
              repo_url: www.repo.com
            updated: 1234567890
            store_type: INLINE
            connector_ref: example_connector_ref
            stable_template: true
          inputs: example
    TemplateMetaDataList:
      title: TemplateMetaDataList
      type: array
      description: Template Meta Data List Model
      items:
        $ref: '#/components/schemas/TemplateMetadataSummaryResponse'
      x-stoplight:
        id: ld1ggfzj0v0nv
      x-examples:
        example-1:
        - account: example_account
          org: example_organization
          project: example_project
          slug: example_template
          name: Example_template
          description: string
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          version_label: example_version
          entity_type: Step
          child_type: example_child_type
          scope: org
          version: 1234567890
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          updated: 1234567890
          store_type: INLINE
          connector_ref: example_connector_ref
          stable_template: true
      x-schema-name: TemplateMetaDataList
    EntityGitDetails:
      title: entityGitDetails
      type: object
      properties:
        object_id:
          type: string
          description: Entity identifier
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        commit_id:
          type: string
          description: Latest commit identifier.
        file_url:
          type: string
          description: File URL of the Entity.
        repo_url:
          type: string
          description: Repository URL of the Entity.
      description: Git Experience related details of the Entity.
      example:
        file_path: file_path
        file_url: file_url
        repo_url: repo_url
        branch_name: branch_name
        repo_name: repo_name
        object_id: object_id
        commit_id: commit_id
      x-stoplight:
        id: bu0i4dwga5nkz
      x-examples:
        example-git:
          object_id: example_object
          branch_name: branch
          file_path: /folder/file.json
          repo_name: example_repository
          commit_id: abcd123
          file_url: www.repo/folder/file.com
          repo_url: www.repo.com
    GitFindDetails:
      title: GitFindDetails
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        parent_entity_connector_ref:
          type: string
          description: Connector ref of parent template if its remote
        parent_entity_repo_name:
          type: string
          description: Repo name of parent template if its remote
        parent_entity_account_id:
          type: string
          description: Account name of parent template if its remote
        parent_entity_org_id:
          type: string
          description: Organization name of parent template if its remote
        parent_entity_project_id:
          type: string
          description: Project name of parent entity if its remote
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Contains parameters related to Fetching an Entity for Git Experience.
      x-stoplight:
        id: 8b3cs1apis8zf
      x-examples:
        example-1:
          branch_name: branch
          parent_entity_connector_ref: example_connector_ref
          parent_entity_repo_name: example_repo_name
          parent_entity_account_id: example_account_id
          parent_entity_org_id: example_org_id
          parent_entity_project_id: example_project_id
          comments: sample_comments
    GitCreateDetails1:
      title: Create Git Details
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
        repo_name:
          type: string
          description: Name of the repository.
      description: Contains parameters related to creating an Entity for Git Experience.
      x-stoplight:
        id: 18xzr2klzl8kn
      x-examples:
        example-create-git:
          branch_name: branch
          file_path: /folder/file.json
          commit_message: Added Harness Git Experience
          base_branch: old_branch
          connector_ref: git_connector
          store_type: INLINE
          repo_name: example_repository
    GitUpdateDetails1:
      title: GitUpdateDetails
      type: object
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        last_object_id:
          type: string
          description: Last object identifier (for Github).
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled
            by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations
            on the Entity.
        last_commit_id:
          type: string
          description: Last commit identifier (for Git Repositories other than Github).
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
          - INLINE
          - REMOTE
      description: Contains parameters related to Updating an Entity for Git Experience.
      x-stoplight:
        id: jejwgam2kmatw
      x-examples:
        example-1:
          branch_name: branch
          commit_message: Added Harness Git Experience
          last_object_id: example_object_id
          base_branch: old_branch
          connector_ref: git_connector
          last_commit_id: example_commit_id
          file_path: /folder/file.json
          repo_name: example_repository
          store_type: INLINE
    TemplateUpdateRequestBody:
      title: TemplateUpdateRequestBody
      type: object
      properties:
        template_yaml:
          type: string
          description: Yaml for updating existing Template
        git_details:
          $ref: '#/components/schemas/GitUpdateDetails1'
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Templates Update Request Body
      x-stoplight:
        id: ok69fcmiqlm1c
      x-examples:
        example-2:
          template_yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: example_object_id
            base_branch: old_branch
            connector_ref: git_connector
            last_commit_id: example_commit_id
            file_path: /folder/file.json
            repo_name: example_repository
            store_type: INLINE
          comments: sample_comment
    TemplateCreateRequestBody:
      title: TemplateCreateRequestBody
      type: object
      properties:
        template_yaml:
          type: string
          description: Yaml for creating new Template
        git_details:
          $ref: '#/components/schemas/GitCreateDetails1'
        is_stable:
          type: boolean
          description: True if given version for template to be set as stable
        comments:
          type: string
          description: 'Specify comment with respect to changes  '
      description: Templates Create Request Body
      x-stoplight:
        id: mp9rm9sp09yru
      x-examples:
        example-2:
          template_yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
            \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type: Custom\n\
            \    spec:\n      execution:\n        steps:\n          - step:\n    \
            \          type: ShellScript\n              name: ss1\n              identifier:\
            \ ss1\n              spec:\n                shell: Bash\n            \
            \    onDelegate: true\n                source:\n                  type:\
            \ Inline\n                  spec:\n                    script: exit 1\n\
            \                environmentVariables: []\n                outputVariables:\
            \ []\n              timeout: 10m\n"
          git_details:
            branch_name: branch
            file_path: /folder/file.json
            commit_message: Added Harness Git Experience
            base_branch: old_branch
            connector_ref: git_connector
            store_type: INLINE
            repo_name: example_repository
          is_stable: true
          comments: sample_comment
    TemplateUpdateStableResponse:
      title: TemplateUpdateStableResponse
      type: object
      properties:
        stable_version:
          type: string
          description: |
            Version which is set as stable for the given Template
      description: Template stable version update Response
      example:
        stable_version: stable_version
      x-stoplight:
        id: 1h4plmwhpjnp4
  responses:
    RolesListResponse:
      description: Roles List Response body
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RolesResponse'
            x-content-type: application/json
          examples:
            role-list-response:
              value:
              - slug: example_role
                name: Example_Role
                permissions:
                - core_resource_view
                allowed_scope_levels:
                - account
                description: This is an Example Role
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                scope:
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RolesResponse'
          examples:
            role-list-response:
              value: "- slug: example_role\n  name: Example_Role\n  permissions:\n\
                \    - core_resource_view\n  allowed_scope_levels:\n    - account\n\
                \  description: This is an Example Role\n  tags:\n    example-tag-1:\
                \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n  scope:\n\
                \    account: sample_account\n    org: sample_organization\n    project:\
                \ sample_project\n  created: 1234567890\n  updated: 1234567890\n \
                \ harness_managed: true\n"
    RoleResponse:
      description: Role Response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RolesResponse'
          examples:
            role-response:
              value:
                slug: example_role
                name: Example_Role
                permissions:
                - core_resource_view
                allowed_scope_levels:
                - account
                description: This is an Example Role
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                scope:
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/RolesResponse'
          examples:
            role-response:
              value: "slug: example_role\nname: Example_Role\npermissions:\n  - core_resource_view\n\
                allowed_scope_levels:\n  - account\ndescription: This is an Example\
                \ Role\ntags:\n  example-tag-1: example-tag-1-value\n  example-tag-2:\
                \ example-tag-2-value\nscope:\n  account: sample_account\n  org: sample_organization\n\
                \  project: sample_project\ncreated: 1234567890\nupdated: 1234567890\n\
                harness_managed: true\n"
    RoleAssignmentResponse:
      description: Role assignment response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleAssignmentResponse'
          examples:
            role-assignment-response-json:
              value:
                roleassignment:
                  slug: example_role_assignment
                  resource_group: example_resource_group_slug
                  role: example_role_slug
                  principal:
                    scope: ACCOUNT
                    slug: example_principal_slug
                    type: USER
                  disabled: false
                  managed: false
                created: 1234567890
                updated: 1234567890
                harness_managaed: false
        application/yaml:
          schema:
            $ref: '#/components/schemas/RoleAssignmentResponse'
          examples:
            role-assignment-response-yaml:
              value: "roleassignment:\n  slug: example_role_assignment\n  resource_group:\
                \ example_resource_group_slug\n  role: example_role_slug\n  principal:\n\
                \    scope: ACCOUNT\n    slug: example_principal_slug\n    type: USER\n\
                \  disabled: false\n  managed: false\ncreated: 1234567890\nupdated:\
                \ 1234567890\nharness_managaed: false\n"
    RoleAssignmentListResponse:
      description: Role Assignment List Response body
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "</v1/roles?page=2&limit=1>; rel=\"next\", </v1/roles?page=1&limit=1>;\
                \ rel=\"self\", </v1/roles?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RoleAssignmentResponse'
            x-content-type: application/json
          examples:
            role-assignment-response-json:
              value:
              - roleassignment:
                  slug: example_role_assignment
                  resource_group: example_resource_group_slug
                  role: example_role_slug
                  principal:
                    scope: ACCOUNT
                    slug: example_principal_slug
                    type: USER
                  disabled: false
                  managed: false
                created: 1234567890
                updated: 1234567890
                harness_managaed: false
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RoleAssignmentResponse'
          examples:
            role-assignment-response-json:
              value: "- roleassignment:\n    slug: example_role_assignment\n    resource_group:\
                \ example_resource_group_slug\n    role: example_role_slug\n    principal:\n\
                \      scope: ACCOUNT\n      slug: example_principal_slug\n      type:\
                \ USER\n    disabled: false\n    managed: false\n  created: 1234567890\n\
                \  updated: 1234567890\n  harness_managaed: false\n"
    ServiceListResponse:
      description: Example response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceResponse'
            x-content-type: application/json
          examples:
            example-1:
              value:
              - service:
                  account: sample_account
                  slug: example_service
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example service
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
                    \n  tags: {}\n"
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value: "- service:\n    account: sample_account\n    slug: example_service\n\
                \    org: sample_organization\n    project: sample_project\n    name:\
                \ Example_service\n    description: This is a example service\n  \
                \  tags:\n      example-tag-1: example-tag-1-value\n      example-tag-2:\
                \ example-tag-2-value\n    yaml: |\n      service:\n        name:\
                \ \"Example_service\"\n        identifier: \"example_service\"\n \
                \       tags: {}\n  created: 1234567890\n  updated: 1234567890\n"
    EnvironmentListResponse:
      description: Environment List Response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentListResponse'
          examples:
            example-1:
              value:
              - environment:
                  account: example_account
                  slug: example_environment
                  org: example_organization
                  project: example_project
                  name: Example_environment
                  description: Sample Description
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                    \ \"example_project\"\n  identifier: \"example_environment\"\n\
                    \  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n  name:\
                    \ \"example_environment\"\n  description: \"Sample Description\"\
                    \n  type: \"Production\"\n"
                  color: '#0063F7'
                  type: Production
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value: "- environment:\n    account: sample_account\n    slug: example_environment\n\
                \    org: sample_organization\n    project: sample_project\n    name:\
                \ Example_environment\n    description: Sample Description\n    tags:\n\
                \      example-tag-1: example-tag-1-value\n      example-tag-2: example-tag-2-value\n\
                \    yaml: |\n      environment:\n        orgIdentifier: \"default\"\
                \n        projectIdentifier: \"example_project\"\n        identifier:\
                \ \"example_environment\"\n        tags:\n          example_tag: \"\
                \"\n          example_tag_2: \"\"\n        name: \"example_environment\"\
                \n        description: \"Sample Description\"\n        type: \"Production\"\
                \n    color: '#0063F7'\n    type: Production\n  created: 1234567890\n\
                \  updated: 1234567890\n"
    ServiceResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value:
                service:
                  account: sample_account
                  slug: example_service
                  org: sample_organization
                  project: sample_project
                  name: Example_service
                  description: This is a example service
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
                    \n  tags: {}\n"
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceResponse'
          examples:
            example-1:
              value: "service:\n  account: sample_account\n  slug: example_service\n\
                \  org: sample_organization\n  project: sample_project\n  name: Example_service\n\
                \  description: This is a example service\n  tags:\n    example-tag-1:\
                \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n  yaml:\
                \ |\n    service:\n      name: \"Example_service\"\n      identifier:\
                \ \"example_service\"\n      tags: {}\ncreated: 1234567890\nupdated:\
                \ 1234567890\n"
    EnvironmentResponse:
      description: Environment Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value:
                environment:
                  account: example_account
                  slug: example_environment
                  org: example_organization
                  project: example_project
                  name: Example_environment
                  description: Sample Description
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "environment:\n  orgIdentifier: \"default\"\n  projectIdentifier:\
                    \ \"example_project\"\n  identifier: \"example_environment\"\n\
                    \  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n  name:\
                    \ \"example_environment\"\n  description: \"Sample Description\"\
                    \n  type: \"Production\"\n"
                  color: '#0063F7'
                  type: Production
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentResponse'
          examples:
            example-1:
              value: "environment:\n  account: example_account\n  slug: example_environment\n\
                \  org: example_organization\n  project: example_project\n  name:\
                \ Example_environment\n  description: Sample Description\n  tags:\n\
                \    example-tag-1: example-tag-1-value\n    example-tag-2: example-tag-2-value\n\
                \  yaml: |\n    environment:\n      orgIdentifier: \"default\"\n \
                \     projectIdentifier: \"example_project\"\n      identifier: \"\
                example_environment\"\n      tags:\n        example_tag: \"\"\n  \
                \      example_tag_2: \"\"\n      name: \"example_environment\"\n\
                \      description: \"Sample Description\"\n      type: \"Production\"\
                \n  color: '#0063F7'\n  type: Production\ncreated: 1234567890\nupdated:\
                \ 1234567890\n"
    OrganizationResponse:
      description: Organization response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organization-response-json:
              value:
                org:
                  slug: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organization-response-yaml:
              value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                \  description: This is an example organization\n  tags:\n    example-tag-1:\
                \ example-tag-1-value\n    example-tag-2: example-tag-2-value\ncreated:\
                \ 1234567890\nupdated: 1234567890\nharness_managed: true\n"
    ProjectResponse:
      description: Project response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-response-json:
              value:
                project:
                  org: example_org_slug
                  slug: example_project_slug
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-response-yaml:
              value: "project:\n  org: example_org_slug\n  slug: example_project_slug\n\
                \  name: example-project-name\n  color: '#0063F7'\n  modules:\n  \
                \  - CD\n  description: This is a example project\n  tags:\n    property1:\
                \ value1\n    property2: value2\ncreated: 1234567890\nupdated: 1234567890\n"
    ProjectListResponse:
      description: Project list response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page.Link"
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectResponse'
            x-content-type: application/json
          examples:
            example-project-list-response-json:
              value:
              - project:
                  org: example_org_slug
                  slug: example_project_slug
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ProjectResponse'
          examples:
            example-project-list-response-yaml:
              value: "- project:\n    org: example_org_slug\n    slug: example_project_slug\n\
                \    name: example-project-name\n    color: '#0063F7'\n    modules:\n\
                \      - CD\n    description: This is a example project\n    tags:\n\
                \      property1: value1\n      property2: value2\n  created: 1234567890\n\
                \  updated: 1234567890\n"
    OrganizationListResponse:
      description: Organization list response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrganizationResponse'
            x-content-type: application/json
          examples:
            example-organizations-list-response-json:
              value:
              - org:
                  slug: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                harness_managed: true
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrganizationResponse'
          examples:
            example-organizations-list-response-yaml:
              value: "- org:\n    slug: example_organization\n    name: Example Organization\n\
                \    description: This is an example organization\n    tags:\n   \
                \   example-tag-1: example-tag-1-value\n      example-tag-2: example-tag-2-value\n\
                \  created: 1234567890\n  updated: 1234567890\n  harness_managed:\
                \ true\n"
    SecretResponse:
      description: Secret response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretResponse'
          examples:
            example-secret-response-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 80
                    username: example_secret
                    key_path: example_secret
                    encrypted_passphrase: account.example_secret
                created: 1234567890
                updated: 1234567890
                draft: false
        application/yaml:
          schema:
            $ref: '#/components/schemas/SecretResponse'
          examples:
            example-secret-response-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHKeyPath\n  \
                \  port: 80\n    username: example_secret\n    key_path: example_secret\n\
                \    encrypted_passphrase: account.example_secret\ncreated: 1234567890\n\
                updated: 1234567890\ndraft: false\n"
    SecretListResponse:
      description: Secret list response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page.Link"
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SecretResponse'
            x-content-type: application/json
          examples:
            example-list-secret-response-json:
              value:
              - secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 80
                    username: example_secret
                    key_path: example_secret
                    encrypted_passphrase: account.example_secret
                created: 1234567890
                updated: 1234567890
                draft: false
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SecretResponse'
          examples:
            example-list-secret-response-yaml:
              value: "- secret:\n    name: example_secret\n    slug: example_secret\n\
                \    org: default\n    project: example_project\n    tags:\n     \
                \ property1: example_secret\n    description: example_secret\n   \
                \ spec:\n      type: SSHKeyPath\n      port: 80\n      username: example_secret\n\
                \      key_path: example_secret\n      encrypted_passphrase: account.example_secret\n\
                \  created: 1234567890\n  updated: 1234567890\n  draft: false\n"
    ConnectorTestConnectionResponse:
      description: This has test connection details for the Connector defined in Harness.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorTestConnectionResponse'
        application/yaml:
          schema:
            $ref: '#/components/schemas/ConnectorTestConnectionResponse'
    ConnectorResponse:
      description: Connector response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorResponse'
          examples:
            example-connector-response-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  description: example_connector
                  spec:
                    type: GitHttp
                    url: https://github.com/example/example-repo.git
                    branch: example_branch
                    connection_type: Repo
                    username: git-http-user
                    password_ref: account.git-http-password
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ConnectorResponse'
          examples:
            example-connector-response-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  org: default\n  project: example_project\n  tags:\n    property1:\
                \ example_connector\n  description: example_connector\n  spec:\n \
                \     type: GitHttp\n      url: 'https://github.com/example/example-repo.git'\n\
                \      branch: example_branch\n      connection_type: Repo\n     \
                \ username: git-http-user\n      password_ref: account.git-http-password\n\
                created: 1234567890\nupdated: 1234567890\n"
    ConnectorListResponse:
      description: Connector list response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "<{url}?page=2&limit=1>; rel=\"next\", <{url}?page=1&limit=1>;\
                \ rel=\"self\", <{url}?page=0&limit=1>; rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ConnectorResponse'
            x-content-type: application/json
          examples:
            example-list-connector-response-json:
              value:
              - connector:
                  name: example_connector
                  slug: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  description: example_connector
                  spec:
                    type: GitHttp
                    url: https://github.com/example/example-repo.git
                    branch: example_branch
                    connection_type: Repo
                    username: git-http-user
                    password_ref: account.git-http-password
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ConnectorResponse'
          examples:
            example-list-connector-response-yaml:
              value: "- connector:\n    name: example_connector\n    slug: example_connector\n\
                \    org: default\n    project: example_project\n    tags:\n     \
                \ property1: example_connector\n    description: example_connector\n\
                \    spec:\n        type: GitHttp\n        url: 'https://github.com/example/example-repo.git'\n\
                \        branch: example_branch\n        connection_type: Repo\n \
                \       username: git-http-user\n        password_ref: account.git-http-password\n\
                \  created: 1234567890\n  updated: 1234567890\n"
    ServiceOverrideResponse:
      description: Service Override Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOverrideResponse'
          examples:
            example-1:
              value:
                account: example_account
                org: example_organization
                project: example_project
                environemnt: example_environment
                service: example_service
                yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                  \    serviceRef: example_service\n    variables:\n        - name:\
                  \ sample_var_1\n          type: String\n          value: example_val\n\
                  \        - name: sample_var_2\n          value: example_val\n  \
                  \        type: String\n"
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceOverrideResponse'
          examples:
            example-1:
              value: "account: example_account\norg: example_organization\nproject:\
                \ example_project\nenvironemnt: example_environment\nservice: example_service\n\
                yaml: |\n  serviceOverrides:\n      environmentRef: example_environment\n\
                \      serviceRef: example_service\n      variables:\n          -\
                \ name: sample_var_1\n            type: String\n            value:\
                \ example_val\n          - name: sample_var_2\n            value:\
                \ example_val\n            type: String\n"
    ServiceOverrideListResponse:
      description: Serivce Order List Response
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page.Link"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOverrideListResponse'
          examples:
            example-1:
              value:
              - account: example_account
                org: example_organization
                project: example_project
                environemnt: example_environment
                service: example_service
                yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                  \    serviceRef: example_service\n    variables:\n        - name:\
                  \ sample_var_1\n          type: String\n          value: example_val\n\
                  \        - name: sample_var_2\n          value: example_val\n  \
                  \        type: String\n"
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceOverrideListResponse'
          examples:
            example-1:
              value: "- account: example_account\n  org: example_organization\n  project:\
                \ example_project\n  environemnt: example_environment\n  service:\
                \ example_service\n  yaml: |\n    serviceOverrides:\n        environmentRef:\
                \ example_environment\n        serviceRef: example_service\n     \
                \   variables:\n            - name: sample_var_1\n              type:\
                \ String\n              value: example_val\n            - name: sample_var_2\n\
                \              value: example_val\n              type: String\n"
    ResourceGroupsListResponse:
      description: Resource Groups List response body
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "</v1/resource-groups?page=2&limit=1>; rel=\"next\", </v1/resource-groups?page=1&limit=1>;\
                \ rel=\"self\", </v1/resource-groups?page=0&limit=1>; rel=\"previous\"\
                , "
      content:
        application/json:
          schema:
            type: array
            description: List of Resource Groups
            items:
              $ref: '#/components/schemas/ResourceGroupsResponse'
            x-content-type: application/json
          examples:
            resource-group-list-response:
              value:
              - slug: example_resource_group
                name: Example Resource Group
                color: '#0063F7'
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                description: This is an Example Resource Group
                allowed_scope_levels:
                - account
                included_scope:
                - filter: EXCLUDING_CHILD_SCOPES
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                resource_filter:
                - resource_type: resource
                  identifiers:
                  - example_resource
                  attribute_name: resource_attribute
                  attribute_values:
                  - example_resource_attribute
                include_all_resources: false
                harness_managed: true
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            type: array
            description: List of Resource Groups
            items:
              $ref: '#/components/schemas/ResourceGroupsResponse'
          examples:
            resource-group-list-response:
              value: "- slug: example_resource_group\n  name: Example Resource Group\n\
                \  color: '#0063F7'\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  description: This is an\
                \ Example Resource Group\n  allowed_scope_levels:\n    - account\n\
                \  included_scope:\n    - filter: EXCLUDING_CHILD_SCOPES\n      account:\
                \ sample_account\n      org: sample_organization\n      project: sample_project\n\
                \  resource_filter:\n    - resource_type: resource\n      identifiers:\n\
                \        - example_resource\n      attribute_name: resource_attribute\n\
                \      attribute_values:\n        - example_resource_attribute\n \
                \ include_all: false\n  harness_managed: true\n  created: 1234567890\n\
                \  updated: 1234567890\n"
    ResourceGroupsResponse:
      description: Resource Group response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceGroupsResponse'
          examples:
            resource-group-response:
              value:
                slug: example_resource_group
                name: Example Resource Group
                color: '#0063F7'
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                description: This is an Example Resource Group
                allowed_scope_levels:
                - account
                included_scope:
                - filter: EXCLUDING_CHILD_SCOPES
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                resource_filter:
                - resource_type: resource
                  identifiers:
                  - example_resource
                  attribute_name: resource_attribute
                  attribute_values:
                  - example_resource_attribute
                include_all_resources: false
                harness_managed: true
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/ResourceGroupsResponse'
          examples:
            resource-group-response:
              value: "slug: example_resource_group\nname: Example Resource Group\n\
                color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n  example-tag-2:\
                \ example-tag-2-value\ndescription: This is an Example Resource Group\n\
                allowed_scope_levels:\n  - account\nincluded_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n\
                \    account: sample_account\n    org: sample_organization\n    project:\
                \ sample_project\nresource_filter:\n  - resource_type: resource\n\
                \    identifiers:\n      - example_resource\n    attribute_name: resource_attribute\n\
                \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                \ false\nharness_managed: true\ncreated: 1234567890\nupdated: 1234567890\n"
    PipelineCreateResponseBody:
      description: Pipeline response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineCreateResponseBody'
          examples:
            example-pipeline:
              value:
                slug: example_pipeline
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineCreateResponseBody'
          examples:
            example-pipeline:
              value: "slug: example_pipeline\n"
    PipelineGetResponseBody:
      description: Pipeline response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineGetResponseBody'
          examples:
            example-response:
              value:
                pipeline_yaml: example_yaml_text
                template_applied_pipeline_yaml: example_yaml_text_with_template
                slug: example_pipeline
                name: ExamplePipeline
                org: example_org
                project: example_project
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                modules:
                - cd
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                valid: true
                yaml_error_wrapper:
                  message: something is incorrect
                  message_fqn: something is incorrect at pipeline.name
                  stage_info:
                    slug: example_stage
                    type: stage
                    name: Example Stage
                    fqn: pipeline.stages.stage
                  step_info:
                    slug: example_step
                    type: string
                    name: string
                    fqn: pipeline.steps.step
                  fqn: pipeline.name
                  hint_message: try changing something
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineGetResponseBody'
          examples:
            example-response:
              value: "pipeline_yaml: example_yaml_text\ntemplate_applied_pipeline_yaml:\
                \ example_yaml_text_with_template\nslug: example_pipeline\nname: ExamplePipeline\n\
                org: example_org\nproject: example_project\ndescription: Pipeline\
                \ Description\ntags:\n  example-tag-1: example-tag-1-value\n  example-tag-2:\
                \ example-tag-2-value\nmodules:\n  - cd\ngit_details:\n  object_id:\
                \ example_object\n  branch_name: branch\n  file_path: /folder/file.json\n\
                \  repo_name: example_repository\n  commit_id: abcd123\n  file_url:\
                \ www.repo/folder/file.com\n  repo_url: www.repo.com\nvalid: true\n\
                yaml_error_wrapper:\n  message: something is incorrect\n  message_fqn:\
                \ something is incorrect at pipeline.name\n  stage_info:\n    slug:\
                \ example_stage\n    type: stage\n    name: Example Stage\n    fqn:\
                \ pipeline.stages.stage\n  step_info:\n    slug: example_step\n  \
                \  type: string\n    name: string\n    fqn: pipeline.steps.step\n\
                \  fqn: pipeline.name\n  hint_message: try changing something\ncreated:\
                \ 1234567890\nupdated: 1234567890\n"
    PipelineListResponseBody:
      description: Response body for List Pipelines.
      headers:
        Link:
          description: "Links to related resources, in the format defined by [RFC\
            \ 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include\
            \ a link with relation type `next` to the next page, if there is a next\
            \ page."
          style: simple
          explode: false
          schema:
            type: string
          examples:
            sample:
              value: "</v1/orgs/{org}/projects/{project}/pipelines?page=2&limit=1>;\
                \ rel=\"next\", </v1/orgs/{org}/projects/{project}/pipelines?page=1&limit=1>;\
                \ rel=\"self\", </v1/orgs/{org}/projects/{project}/pipelines?page=0&limit=1>;\
                \ rel=\"previous\", "
      content:
        application/json:
          schema:
            type: array
            description: Response body for List Pipelines.
            items:
              $ref: '#/components/schemas/PipelineListResponseBody'
            x-content-type: application/json
          examples:
            example-list-response:
              value:
              - slug: example_pipeline
                name: ExamplePipeline
                description: This is an Example Pipeline
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                created: 1234567890
                updated: 1234567890
                modules:
                - CD
                execution_summary:
                  errors_count:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                  deployments_count:
                  - 1
                  - 2
                  - 3
                  - 4
                  - 5
                  - 6
                  - 7
                recent_execution_info:
                - executor_info:
                    trigger_type: NOOP
                    username: harness_user
                    email: noreply@harness.io
                  execution_id: example_execution_slug
                  execution_status: Running
                  started: 1234567890
                  ended: 1234567890
                  run_number: 5
                store_type: REMOTE
                connector_ref: example_connector
                valid: true
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
        application/yaml:
          schema:
            type: array
            description: Response body for List Pipelines.
            items:
              $ref: '#/components/schemas/PipelineListResponseBody'
          examples:
            example-list-response:
              value: "- slug: example_pipeline\n  name: Example Pipeline\n  description:\
                \ This is an Example Pipeline\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  created: 1234567890\n \
                \ updated: 1234567890\n  modules:\n    - CD\n  execution_summary:\n\
                \    errors_count:\n      - 1\n      - 2\n      - 3\n      - 4\n \
                \     - 5\n      - 6\n      - 7\n    deployments_count:\n      - 1\n\
                \      - 2\n      - 3\n      - 4\n      - 5\n      - 6\n      - 7\n\
                \  recent_execution_info:\n    - executor_info:\n        trigger_type:\
                \ NOOP\n        username: harness_user\n        email: noreply@harness.io\n\
                \      execution_id: example_execution_slug\n      execution_status:\
                \ Running\n      started: 1234567890\n      ended: 1234567890\n  \
                \    run_number: 5\n  store_type: REMOTE\n  connector_ref: example_connector\n\
                \  valid: true\n  git_details:\n    object_id: example_object\n  \
                \  branch_name: branch\n    file_path: /folder/file.json\n    repo_name:\
                \ example_repository\n    commit_id: abcd123\n    file_url: www.repo/folder/file.com\n\
                \    repo_url: www.repo.com\n"
    TemplateResponse:
      description: Template Response Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateResponse'
          examples:
            example-1:
              value:
                account: example_account
                org: example_organization
                project: example_project
                slug: example_template
                name: Example_template
                description: string
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                  \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type:\
                  \ Custom\n    spec:\n      execution:\n        steps:\n        \
                  \  - step:\n              type: ShellScript\n              name:\
                  \ ss1\n              identifier: ss1\n              spec:\n    \
                  \            shell: Bash\n                onDelegate: true\n   \
                  \             source:\n                  type: Inline\n        \
                  \          spec:\n                    script: exit 1\n         \
                  \       environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                version_label: example_version
                entity_type: Stage
                child_type: example_child_type
                scope: org
                version: 1234567890
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                updated: 1234567890
                store_type: INLINE
                connector_ref: example_connector_ref
                stable_template: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateResponse'
          examples:
            example-1:
              value: "account: example_account\norg: example_organization\nproject:\
                \ example_project\nslug: example_template\nname: Example_template\n\
                description: string\ntags:\n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\nyaml: |\n  template:\n    name:\
                \ Example_template\n    identifier: example_template\n    versionLabel:\
                \ v1\n    type: Stage\n    tags: {}\n    spec:\n      type: Custom\n\
                \      spec:\n        execution:\n          steps:\n            -\
                \ step:\n                type: ShellScript\n                name:\
                \ ss1\n                identifier: ss1\n                spec:\n  \
                \                shell: Bash\n                  onDelegate: true\n\
                \                  source:\n                    type: Inline\n   \
                \                 spec:\n                      script: exit 1\n  \
                \                environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\nversion_label: example_version\n\
                entity_type: Stage\nchild_type: example_child_type\nscope: org\nversion:\
                \ 1234567890\ngit_details:\n  object_id: example_object\n  branch_name:\
                \ branch\n  file_path: /folder/file.json\n  repo_name: example_repository\n\
                \  commit_id: abcd123\n  file_url: www.repo/folder/file.com\n  repo_url:\
                \ www.repo.com\nupdated: 1234567890\nstore_type: INLINE\nconnector_ref:\
                \ example_connector_ref\nstable_template: true\n"
    TemplateWithInputsResponse:
      description: Template With Input reference
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateWithInputsResponse'
          examples:
            example-1:
              value:
                template:
                  account: example_account
                  org: example_organization
                  project: example_project
                  slug: example_template
                  name: Example_template
                  description: string
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  yaml: "template:\n  name: Example_template\n  identifier: example_template\n\
                    \  versionLabel: v1\n  type: Stage\n  tags: {}\n  spec:\n    type:\
                    \ Custom\n    spec:\n      execution:\n        steps:\n      \
                    \    - step:\n              type: ShellScript\n              name:\
                    \ ss1\n              identifier: ss1\n              spec:\n  \
                    \              shell: Bash\n                onDelegate: true\n\
                    \                source:\n                  type: Inline\n   \
                    \               spec:\n                    script: exit 1\n  \
                    \              environmentVariables: []\n                outputVariables:\
                    \ []\n              timeout: 10m\n"
                  version_label: example_version
                  entity_type: Stage
                  child_type: example_child_type
                  scope: org
                  version: 1234567890
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
                  updated: 1234567890
                  store_type: INLINE
                  connector_ref: example_connector_ref
                  stable_template: true
                inputs: example
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateWithInputsResponse'
          examples:
            example-1:
              value: "template:\n  account: example_account\n  org: example_organization\n\
                \  project: example_project\n  slug: example_template\n  name: Example_template\n\
                \  description: string\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  yaml: |\n    template:\n\
                \      name: Example_template\n      identifier: example_template\n\
                \      versionLabel: v1\n      type: Stage\n      tags: {}\n     \
                \ spec:\n        type: Custom\n        spec:\n          execution:\n\
                \            steps:\n              - step:\n                  type:\
                \ ShellScript\n                  name: ss1\n                  identifier:\
                \ ss1\n                  spec:\n                    shell: Bash\n\
                \                    onDelegate: true\n                    source:\n\
                \                      type: Inline\n                      spec:\n\
                \                        script: exit 1\n                    environmentVariables:\
                \ []\n                    outputVariables: []\n                  timeout:\
                \ 10m\n  version_label: example_version\n  entity_type: Stage\n  child_type:\
                \ example_child_type\n  scope: org\n  version: 1234567890\n  git_details:\n\
                \    object_id: example_object\n    branch_name: branch\n    file_path:\
                \ /folder/file.json\n    repo_name: example_repository\n    commit_id:\
                \ abcd123\n    file_url: www.repo/folder/file.com\n    repo_url: www.repo.com\n\
                \  updated: 1234567890\n  store_type: INLINE\n  connector_ref: example_connector_ref\n\
                \  stable_template: true\ninputs: example\n"
    TemplateMetaDataList:
      description: Template Lists Meta Data Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateMetaDataList'
          examples:
            example-1:
              value:
              - account: example_account
                org: example_organization
                project: example_project
                slug: example_template
                name: Example_template
                description: string
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                version_label: example_version
                entity_type: Step
                child_type: example_child_type
                scope: org
                version: 1234567890
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                updated: 1234567890
                store_type: INLINE
                connector_ref: example_connector_ref
                stable_template: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateMetaDataList'
          examples:
            example-1:
              value: "- account: example_account\n  org: example_organization\n  project:\
                \ example_project\n  slug: example_template\n  name: Example_template\n\
                \  description: string\n  tags:\n    example-tag-1: example-tag-1-value\n\
                \    example-tag-2: example-tag-2-value\n  version_label: example_version\n\
                \  entity_type: Step\n  child_type: example_child_type\n  scope: org\n\
                \  version: 1234567890\n  git_details:\n    object_id: example_object\n\
                \    branch_name: branch\n    file_path: /folder/file.json\n    repo_name:\
                \ example_repository\n    commit_id: abcd123\n    file_url: www.repo/folder/file.com\n\
                \    repo_url: www.repo.com\n  updated: 1234567890\n  store_type:\
                \ INLINE\n  connector_ref: example_connector_ref\n  stable_template:\
                \ true\n"
    TemplateUpdateStableResponse:
      description: Template stable version update Response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateUpdateStableResponse'
          examples:
            example-1:
              value:
                stable_version: example_version
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateUpdateStableResponse'
          examples:
            example-1:
              value: "stable_version: example_version\n"
  parameters:
    Limit:
      name: limit
      in: query
      description: "Pagination: Number of items to return."
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        type: integer
        default: 30
    Sort:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - slug
        - name
        - created
        - updated
    Order:
      name: order
      in: query
      description: Order on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - ASC
        - DESC
    PageIndex:
      name: page
      in: query
      description: "Pagination page number strategy: Specify the page number within\
        \ the paginated collection related to the number of items on each page."
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 0
    SearchTerm:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        the search term.
      required: false
      style: form
      explode: true
      schema:
        type: string
    OrgParam:
      name: org
      in: path
      description: Organization identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProjectParam:
      name: project
      in: path
      description: Project identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    RoleParam:
      name: role
      in: path
      description: Role identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AccountHeader:
      name: Harness-Account
      in: header
      description: "Slug field of the account the resource is scoped to. This is required\
        \ for Authorization methods other than the x-api-key header. If you are using\
        \ the x-api-key header, this can be skipped."
      required: false
      style: simple
      explode: false
      schema:
        type: string
    Page:
      name: page
      in: query
      description: "Pagination page number strategy: Specify the page number within\
        \ the paginated collection related to the number of items in each page\t"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 0
    Limit1:
      name: limit
      in: query
      description: "Pagination: Number of items to return"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 30
    SearchTerm1:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        with search term.
      required: false
      style: form
      explode: true
      schema:
        type: string
    OrgsQueryParam:
      name: org
      in: query
      description: Slug field of the organizations the resource is scoped to
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    ProjectsQueryParam:
      name: project
      in: query
      description: Slug field of the projects the resource is scoped to
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    OrgPathParam:
      name: org
      in: path
      description: Slug field of the organization the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    PrivateSecret:
      name: private_secret
      in: query
      description: This would be used to define secret as private.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    ProjectPathParam:
      name: project
      in: path
      description: Slug field of the project the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServicePathParam:
      name: service
      in: path
      description: Slug field of the service the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ServiceIdentifiers:
      name: service_ids
      in: query
      description: List of Service Identifiers
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    EnvironmentIdentifiers:
      name: environment_ids
      in: query
      description: List of Environment Identifiers
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    Sort1:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - name
        - slug
        - created
        - updated
    EnvironmentPathParam:
      name: environment
      in: path
      description: Slug field of the environemnt the resource is scoped to
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ResourceGroupParam:
      name: resource-group
      in: path
      description: Resource Group identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Branch:
      name: branch_name
      in: query
      description: Name of the branch (for Git Experience).
      required: false
      style: form
      explode: true
      schema:
        type: string
    PipelineParam:
      name: pipeline
      in: path
      description: Pipeline identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Org:
      name: org
      in: path
      description: Organization Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Project:
      name: project
      in: path
      description: Project Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Template:
      name: template
      in: path
      description: Template Identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Version:
      name: version
      in: path
      description: Version Label for Template
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AccountHeaderParam:
      name: Harness-Account
      in: header
      description: "Slug field of the account the resource is scoped to. This is required\
        \ for Authorization methods other than the x-api-key header. If you are using\
        \ the x-api-key header, this can be skipped."
      required: false
      style: simple
      explode: false
      schema:
        type: string
    Comments:
      name: comments
      in: query
      description: 'Specify comment with respect to changes  '
      required: false
      style: form
      explode: true
      schema:
        type: string
    Limit2:
      name: limit
      in: query
      description: "Pagination: Number of items to return"
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 30
    Sort2:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - slug
        - name
        - updated
    SearchTerm2:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        with search term.
      required: false
      style: form
      explode: true
      schema:
        type: string
    TemplateListType:
      name: type
      in: query
      description: Template List Type
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
        - STABLE_TEMPLATE
        - LAST_UPDATES_TEMPLATE
        - ALL
    IncludeAllTemplatesAccessibleAtScope:
      name: recursive
      in: query
      description: Specify true if all accessible Templates are to be included
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    GetTemplateInputYaml:
      name: include_yaml
      in: query
      description: Use it to get Template along with Input Set YAML
      required: false
      style: form
      explode: true
      schema:
        type: boolean
    Branch1:
      name: branch_name
      in: query
      description: Name of the branch
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentConnectorRef:
      name: parent_entity_connector_ref
      in: query
      description: Connector ref of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentRepoName:
      name: parent_entity_repo_name
      in: query
      description: Repo name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentAccountId:
      name: parent_entity_account_id
      in: query
      description: Account name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentOrgId:
      name: parent_entity_org_id
      in: query
      description: Organization name of parent template if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    ParentProjectId:
      name: parent_entity_project_id
      in: query
      description: Project name of parent entity if its remote
      required: false
      style: form
      explode: true
      schema:
        type: string
    TemplateNames:
      name: names
      in: query
      description: Template names for filtering
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    TemplateIds:
      name: identifiers
      in: query
      description: Template Ids for Filtering
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
    Description:
      name: description
      in: query
      description: Filter properties description
      required: false
      style: form
      explode: true
      schema:
        type: string
    EntityType:
      name: entity_types
      in: query
      description: Type of Template
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
          enum:
          - Step
          - Stage
          - Pipeline
          - CustomDeployment
          - MonitoredService
          - SecretManager
    TemplateChildTypes:
      name: child_types
      in: query
      description: Child types describe the type of Step or stage
      required: false
      style: form
      explode: true
      schema:
        uniqueItems: true
        type: array
        items:
          type: string
  requestBodies:
    CreateRoleRequest:
      description: Role Request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRoleRequest'
          examples:
            role-request:
              value:
                slug: example_role
                name: Example_Role
                permissions:
                - core_view
                description: This is an Example Role
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateRoleRequest'
          examples:
            role-request:
              value: "slug: example_role\nname: Example_Role\npermissions:\n  - core_view\n\
                description: This is an Example Role\ntags:\n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\n"
      required: true
    RoleAssignmentRequest:
      description: Role Request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleAssignment'
          examples:
            role-assignment-request-json:
              value:
                slug: example_role_assignment
                resource_group: example_resource_group_slug
                role: example_role_slug
                principal:
                  scope: ACCOUNT
                  slug: example_principal_slug
                  type: USER
                disabled: false
                managed: false
        application/yaml:
          schema:
            $ref: '#/components/schemas/RoleAssignment'
          examples:
            role-assignment-request-yaml:
              value: "slug: example_role_assignment\nresource_group: example_resource_group_slug\n\
                role: example_role_slug\nprincipal:\n  scope: ACCOUNT\n  slug: example_principal_slug\n\
                \  type: USER\ndisabled: false\nmanaged: false\n"
      required: true
    EnvironmentRequest:
      description: Create Environment request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EnvironmentRequest'
          examples:
            example-1:
              value:
                slug: example_environment
                name: Example_environment
                description: Sample Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: "environment:\n  orgIdentifier: \"example_organization\"\n \
                  \ projectIdentifier: \"example_project\"\n  identifier: \"example_environment\"\
                  \n  tags:\n    example_tag: \"\"\n    example_tag_2: \"\"\n  name:\
                  \ \"example_environment\"\n  description: \"Sample Description\"\
                  \n  type: \"Production\"\n"
                color: '#0063F7'
                type: Production
        application/yaml:
          schema:
            $ref: '#/components/schemas/EnvironmentRequest'
          examples:
            example-1:
              value: "slug: example_environment\nname: Example_environment\ndescription:\
                \ Sample Description\ntags:\n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\nyaml: |\n  environment:\n \
                \   orgIdentifier: \"example_organization\"\n    projectIdentifier:\
                \ \"example_project\"\n    identifier: \"example_environment\"\n \
                \   tags:\n      example_tag: \"\"\n      example_tag_2: \"\"\n  \
                \  name: \"example_environment\"\n    description: \"Sample Description\"\
                \n    type: \"Production\"\ncolor: '#0063F7'\ntype: Production\n"
      required: true
    ServiceRequest:
      description: Create Service request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceRequest'
          examples:
            example-1:
              value:
                slug: example_service
                name: Example_service
                description: This is a example service
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                yaml: "service:\n  name: \"Example_service\"\n  identifier: \"example_service\"\
                  \n  tags: {}\n"
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceRequest'
          examples:
            example-1:
              value: "slug: example_service\nname: Example_service\ndescription: This\
                \ is a example service\ntags:\n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\nyaml: |\n  service:\n    name:\
                \ \"Example_service\"\n    identifier: \"example_service\"\n    tags:\
                \ {}\n"
      required: true
    UpdateProjectRequest:
      description: Put the necessary fields for the API to update a Project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProjectRequest'
          examples:
            example-project-update-request-json:
              value:
                project:
                  slug: example_project_slug
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
        application/yaml:
          schema:
            $ref: '#/components/schemas/UpdateProjectRequest'
          examples:
            example-project-update-request-yaml:
              value: "project:\n  slug: example_project_slug\n  name: example-project-name\n\
                \  color: '#0063F7'\n  modules:\n    - CD\n  description: This is\
                \ a example project\n  tags:\n    property1: value1\n    property2:\
                \ value2\n"
      required: true
    CreateOrganizationRequest:
      description: Post the necessary fields for the API to create an organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrganizationRequest'
          examples:
            example-create-organization-request-json:
              value:
                org:
                  slug: example_organization
                  name: Example Organization
                  description: This is an Example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateOrganizationRequest'
          examples:
            example-create-organization-request-yaml:
              value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                \  description: This is an Example organization\n  tags:\n    example-tag-1:\
                \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n"
      required: true
    UpdateOrganizationRequest:
      description: Put the necessary fields for the API to update a organization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOrganizationRequest'
          examples:
            example-organization-update-request-json:
              value:
                org:
                  slug: example_organization
                  name: Example Organization
                  description: This is an example organization
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
        application/yaml:
          schema:
            $ref: '#/components/schemas/UpdateOrganizationRequest'
          examples:
            example-organization-update-request-json:
              value: "org:\n  slug: example_organization\n  name: Example Organization\n\
                \  description: This is an example organization\n  tags:\n    example-tag-1:\
                \ example-tag-1-value\n    example-tag-2: example-tag-2-value\n"
      required: true
    CreateProjectRequest:
      description: Post the necessary fields for the API to create a project.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateProjectRequest'
          examples:
            example-create-project-request-json:
              value:
                project:
                  slug: example_project_slug
                  name: example-project-name
                  color: '#0063F7'
                  modules:
                  - CD
                  description: This is a example project
                  tags:
                    property1: value1
                    property2: value2
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateProjectRequest'
          examples:
            example-create-project-request-yaml:
              value: "project:\n  slug: example_project_slug\n  name: example-project-name\n\
                \  color: '#0063F7'\n  modules:\n    - CD\n  description: This is\
                \ a example project\n  tags:\n    property1: value1\n    property2:\
                \ value2\n"
      required: true
    SecretRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecretRequest'
          examples:
            example-ssh-kerberos-tgt-key-tab-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTKeyTabFile
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
            example-ssh-kerberos-tgt-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKerberosTGTPassword
                    port: 22
                    principal: example-principal
                    realm: example-realm
                    password: account.example-password
            example-secret-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretFile
                    secret_manager_slug: example_secret_manager_slug
            example-secret-text-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SecretText
                    secret_manager_slug: example_secret_manager_slug
                    value_type: Inline
                    value: example_secret_text_value
            example-ssh-key-path-file-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyPath
                    port: 22
                    username: example_username
                    key_path: ssh/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-key-reference-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHKeyReference
                    port: 22
                    username: example_username
                    key: example/secret/key/path
                    encrypted_passphrase: account.example_passphrase
            example-ssh-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: SSHPassword
                    port: 22
                    username: example_username
                    password: account.example_password
            example-winrm-ntlm-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmNTLM
                    port: 5986
                    domain: example-domain
                    username: example-username
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-key-file-tab-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTKeyTabFile
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    key_path: key/file/path
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
            example-winrm-tgt-password-secret-request-json:
              value:
                secret:
                  name: example_secret
                  slug: example_secret
                  org: default
                  project: example_project
                  tags:
                    property1: example_secret
                  description: example_secret
                  spec:
                    type: WinRmTGTPassword
                    port: 5986
                    principal: example-principal
                    realm: example-realm
                    password: example-password
                    use_ssl: true
                    skip_cert_checks: true
                    use_no_profile: true
        application/yaml:
          schema:
            $ref: '#/components/schemas/SecretRequest'
          examples:
            example-ssh-kerberos-tgt-key-tab-file-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHKerberosTGTKeyTabFile\n\
                \    port: 22\n    principal: example-principal\n    realm: example-realm\n\
                \    key_path: key/file/path\n"
            example-ssh-kerberos-tgt-password-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHKerberosTGTPassword\n\
                \    port: 22\n    principal: example-principal\n    realm: example-realm\n\
                \    password: account.example-password\n"
            example-secret-file-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SecretFile\n  \
                \  secret_manager_slug: example_secret_manager_slug\n"
            example-secret-text-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SecretText\n  \
                \  secret_manager_slug: example_secret_manager_slug\n    value_type:\
                \ Inline\n    value: example_secret_text_value\n"
            example-ssh-key-path-file-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHKeyPath\n  \
                \  port: 22\n    username: example_username\n    key_path: ssh/key/path\n\
                \    encrypted_passphrase: account.example_passphrase\n"
            example-ssh-key-reference-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHKeyReference\n\
                \    port: 22\n    username: example_username\n    key: example/secret/key/path\n\
                \    encrypted_passphrase: account.example_passphrase\n"
            example-ssh-password-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: SSHPassword\n \
                \   port: 22\n    username: example_username\n    password: account.example_password\n"
            example-winrm-ntlm-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: WinRmNTLM\n   \
                \ port: 5986\n    domain: example-domain\n    username: example-username\n\
                \    password: example-password\n    use_ssl: true\n    skip_cert_checks:\
                \ true\n    use_no_profile: true\n"
            example-winrm-tgt-key-file-tab-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: WinRmTGTKeyTabFile\n\
                \    port: 5986\n    principal: example-principal\n    realm: example-realm\n\
                \    key_path: key/file/path\n    use_ssl: true\n    skip_cert_checks:\
                \ true\n    use_no_profile: true\n"
            example-winrm-tgt-password-secret-request-yaml:
              value: "secret:\n  name: example_secret\n  slug: example_secret\n  org:\
                \ default\n  project: example_project\n  tags:\n    property1: example_secret\n\
                \  description: example_secret\n  spec:\n    type: WinRmTGTPassword\n\
                \    port: 5986\n    principal: example-principal\n    realm: example-realm\n\
                \    password: example-password\n    use_ssl: true\n    skip_cert_checks:\
                \ true\n    use_no_profile: true\n"
        multipart/form-data:
          schema:
            required:
            - file
            - spec
            properties:
              spec:
                $ref: '#/components/schemas/SecretRequest'
              file:
                type: string
                format: binary
      required: true
    ConnectorRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorRequest'
          examples:
            example-git-http-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: GitHttp
                    url: https://github.com/example/example-repo.git
                    branch: example_branch
                    connection_type: Repo
                    username: git-http-user
                    password_ref: account.git-http-password
                    execute_on_delegate: false
            example-git-http-encrypted-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: GitHttpEncrypted
                    url: https://github.com/example/example-repo.git
                    branch: example_branch
                    connection_type: Repo
                    username_ref: account.git-http-user
                    password_ref: account.git-http-password
                    validation_repo: https://github.com/example/example-validation-repo.git
                    execute_on_delegate: false
            example-git-ssh-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: GitSsh
                    url: https://github.com/example/example-repo.git
                    branch: example_branch
                    connection_type: Repo
                    ssh_key_ref: account.git-http-password
                    execute_on_delegate: false
            example-appdynamics-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: Appdynamics
                    account_name: appdynamics-account-name
                    controller_url: https://appdynamics.com/controller/
                    username: appdynamics-username
                    password_ref: account.appdynamics-password
                    delegate_selectors: []
            example-appdynamics-client-id-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AppdynamicsClientId
                    account_name: appdynamics-account-name
                    controller_url: https://appdynamics.com/controller/
                    client_id: appdynamics-client-id
                    client_secret_ref: account.appdynamics-client-secret
                    delegate_selectors: []
            example-artifactory-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: Artifactory
                    url: https://artifactory.com/example/example-artifactory
                    username: artifactory-user
                    password_ref: account.artifactory-password
                    delegate_selectors: []
                    execute_on_delegate: false
            example-artifactory-anonymous-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: ArtifactoryAnonymous
                    url: https://artifactory.com/example/example-artifactory
                    delegate_selectors: []
                    execute_on_delegate: false
            example-artifactory-encrypted-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: ArtifactoryEncrypted
                    url: https://artifactory.com/example/example-artifactory
                    username_ref: account.artifactory-user
                    password_ref: account.artifactory-password
                    delegate_selectors: []
                    execute_on_delegate: false
            example-azure-client-certificate-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AzureClientCertificate
                    delegate_selectors:
                    - pl1
                    azure_environment_type: AZURE
                    execute_on_delegate: false
                    application_id: "1234567890"
                    tenant_id: "1234567890"
                    certificate_ref: account.azure-client-certificate
            example-azure-client-secret-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AzureClientSecretKey
                    delegate_selectors:
                    - pl1
                    azure_environment_type: AZURE
                    execute_on_delegate: false
                    application_id: "1234567890"
                    tenant_id: "1234567890"
                    secret_ref: account.azure-secret-key
            example-azure-system-assigned-managed-identity-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AzureInheritFromDelegateSystemAssignedManagedIdentity
                    delegate_selectors:
                    - pl1
                    azure_environment_type: AZURE
                    execute_on_delegate: false
            example-azure-user-assigned-managed-identity-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AzureInheritFromDelegateUserAssignedManagedIdentity
                    delegate_selectors:
                    - pl1
                    azure_environment_type: AZURE
                    execute_on_delegate: false
                    application_id: "1234567890"
                    client_id: "1234567890"
            example-aws-code-commit-connector-request-json:
              value:
                connector:
                  name: example_connector
                  slug: example_connector
                  description: example_connector
                  org: default
                  project: example_project
                  tags:
                    property1: example_connector
                  spec:
                    type: AwsCodeCommit
                    url: https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo
                    url_type: Repo
                    access_key_ref: account.aws-access-key
                    secret_key_ref: account.aws-secret-key
        application/yaml:
          schema:
            $ref: '#/components/schemas/ConnectorRequest'
          examples:
            example-git-http-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: GitHttp\n\
                \    url: 'https://github.com/example/example-repo.git'\n    branch:\
                \ example_branch\n    connection_type: Repo\n    username: git-http-user\n\
                \    password_ref: account.git-http-password\n    execute_on_delegate:\
                \ false\n"
            example-git-http-encrypted-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: GitHttpEncrypted\n\
                \    url: https://github.com/example/example-repo.git\n    branch:\
                \ example_branch\n    connection_type: Repo\n    username_ref: account.git-http-user\n\
                \    password_ref: account.git-http-password\n    validation_repo:\
                \ https://github.com/example/example-validation-repo.git\n    execute_on_delegate:\
                \ false\n"
            example-git-ssh-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: GitSsh\n\
                \    url: 'https://github.com/example/example-repo.git'\n    branch:\
                \ example_branch\n    connection_type: Repo\n    ssh_key_ref: account.git-http-password\n\
                \    execute_on_delegate: false\n"
            example-appdynamics-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: Appdynamics\n\
                \    account_name: appdynamics-account-name\n    controller_url: https://appdynamics.com/controller/\n\
                \    username: appdynamics-username\n    password_ref: account.appdynamics-password\n\
                \    delegate_selectors: []\n"
            example-appdynamics-client-id-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AppdynamicsClientId\n\
                \    account_name: appdynamics-account-name\n    controller_url: https://appdynamics.com/controller/\n\
                \    client_id: appdynamics-client-id\n    client_secret_ref: account.appdynamics-client-secret\n\
                \    delegate_selectors: []\n"
            example-artifactory-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: Artifactory\n\
                \    url: https://artifactory.com/example/example-artifactory\n  \
                \  username: artifactory-user\n    password_ref: account.artifactory-password\n\
                \    delegate_selectors: []\n    execute_on_delegate: false\n"
            example-artifactory-anonymous-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: ArtifactoryAnonymous\n\
                \    url: https://artifactory.com/example/example-artifactory\n  \
                \  delegate_selectors: []\n    execute_on_delegate: false\n"
            example-artifactory-encrypted-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: ArtifactoryEncrypted\n\
                \    url: https://artifactory.com/example/example-artifactory\n  \
                \  username_ref: account.artifactory-user\n    password_ref: account.artifactory-password\n\
                \    delegate_selectors: []\n    execute_on_delegate: false\n"
            example-azure-client-certificate-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AzureClientCertificate\n\
                \    delegate_selectors:\n    - pl1\n    azure_environment_type: AZURE\n\
                \    execute_on_delegate: false\n    application_id: '1234567890'\n\
                \    tenant_id: '1234567890'\n    certificate_ref: account.azure-client-certificate\n"
            example-azure-client-secret-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AzureClientSecretKey\n\
                \    delegate_selectors:\n    - pl1\n    azure_environment_type: AZURE\n\
                \    execute_on_delegate: false\n    application_id: '1234567890'\n\
                \    tenant_id: '1234567890'\n    secret_ref: account.azure-secret-key\n"
            example-azure-system-assigned-managed-identity-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AzureInheritFromDelegateSystemAssignedManagedIdentity\n\
                \    delegate_selectors:\n    - pl1\n    azure_environment_type: AZURE\n\
                \    execute_on_delegate: false\n"
            example-azure-user-assigned-managed-identity-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AzureInheritFromDelegateUserAssignedManagedIdentity\n\
                \    delegate_selectors:\n    - pl1\n    azure_environment_type: AZURE\n\
                \    execute_on_delegate: false\n    application_id: '1234567890'\n\
                \    client_id: '1234567890'\n"
            example-aws-code-commit-connector-request-yaml:
              value: "connector:\n  name: example_connector\n  slug: example_connector\n\
                \  description: example_connector\n  org: default\n  project: example_project\n\
                \  tags:\n    property1: example_connector\n  spec:\n    type: AwsCodeCommit\n\
                \    url: 'https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo'\n\
                \    url_type: Repo\n    access_key_ref: account.aws-access-key\n\
                \    secret_key_ref: account.aws-secret-key\n"
      required: true
    ServiceOverrideRequest:
      description: Create/Update Service Override Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceOverrideRequest'
          examples:
            example-1:
              value:
                yaml: "serviceOverrides:\n    environmentRef: example_environment\n\
                  \    serviceRef: example_service\n    variables:\n        - name:\
                  \ sample_var_1\n          type: String\n          value: example_val\n\
                  \        - name: sample_var_2\n          value: example_val\n  \
                  \        type: String\n"
        application/yaml:
          schema:
            $ref: '#/components/schemas/ServiceOverrideRequest'
          examples:
            example-1:
              value: "yaml: |\n  serviceOverrides:\n      environmentRef: example_environment\n\
                \      serviceRef: example_service\n      variables:\n          -\
                \ name: sample_var_1\n            type: String\n            value:\
                \ example_val\n          - name: sample_var_2\n            value:\
                \ example_val\n            type: String\n"
    CreateResourceGroupRequest:
      description: Resource Group request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateResourceGroupRequest'
          examples:
            resource-group-request:
              value:
                slug: example_resource_group
                name: Example Resource Group
                color: '#0063F7'
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                description: This is an Example Resource Group
                included_scope:
                - filter: EXCLUDING_CHILD_SCOPES
                  account: sample_account
                  org: sample_organization
                  project: sample_project
                resource_filter:
                - resource_type: resource
                  identifiers:
                  - example_resource
                  attribute_name: resource_attribute
                  attribute_values:
                  - example_resource_attribute
                include_all_resources: false
        application/yaml:
          schema:
            $ref: '#/components/schemas/CreateResourceGroupRequest'
          examples:
            resource-group-request:
              value: "slug: example_resource_group\nname: Example Resource Group\n\
                color: '#0063F7'\ntags:\n  example-tag-1: example-tag-1-value\n  example-tag-2:\
                \ example-tag-2-value\ndescription: This is an Example Resource Group\n\
                included_scope:\n  - filter: EXCLUDING_CHILD_SCOPES\n    account:\
                \ sample_account\n    org: sample_organization\n    project: sample_project\n\
                resource_filter:\n  - resource_type: resource\n    identifiers:\n\
                \      - example_resource\n    attribute_name: resource_attribute\n\
                \    attribute_values:\n      - example_resource_attribute\ninclude_all:\
                \ false\n"
      required: true
    FilterResourceGroupRequest:
      description: Filter Resource Group request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceGroupFilterRequestBody'
          examples:
            example-filter:
              value:
                account: example_account
                org: example_organization
                project: example_project
                search_term: search
                identifier_filter:
                - example_resource_group
                resource_selector_filter:
                - resource_type: RESOURCE
                  resource_slug: example_resource
                managed_filter: NO_FILTER
        application/yaml:
          schema:
            $ref: '#/components/schemas/ResourceGroupFilterRequestBody'
          examples:
            example-filter:
              value: "account: example_account\norg: example_organization\nproject:\
                \ example_project\nsearch_term: search\nidentifier_filter:\n  - example_resource_group\n\
                resource_selector_filter:\n  - resource_type: RESOURCE\n    resource_slug:\
                \ example_resource\nmanaged_filter: NO_FILTER\n"
      required: true
    PipelineCreateRequestBody:
      description: Pipeline request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineCreateRequestBody'
          examples:
            example-pipeline:
              value:
                pipeline_yaml: "pipeline:\n  allowStageExecutions: false\n  stages:\n\
                  \    - stage:\n        name: Example Build Stage\n        identifier:\
                  \ example_build_stage\n        description: ''\n        type: Approval\n\
                  \        spec:\n          execution:\n            steps:\n     \
                  \         - step:\n                  name: Approval Step\n     \
                  \             identifier: Approval_Step\n                  type:\
                  \ HarnessApproval\n                  timeout: 1d\n             \
                  \     spec:\n                    approvalMessage: |-\n         \
                  \             Please review the following information\n        \
                  \              and approve the pipeline progression\n          \
                  \          includePipelineExecutionHistory: true\n             \
                  \       approvers:\n                      minimumCount: 1\n    \
                  \                  disallowPipelineExecutor: false\n           \
                  \           userGroups: <+input>\n                    approverInputs:\
                  \ []\n              - step:\n                  type: ShellScript\n\
                  \                  name: ShellScript Step\n                  identifier:\
                  \ ShellScript_Step\n                  spec:\n                  \
                  \  shell: Bash\n                    onDelegate: true\n         \
                  \           source:\n                      type: Inline\n      \
                  \                spec:\n                        script: <+input>\n\
                  \                    environmentVariables: []\n                \
                  \    outputVariables: []\n                    executionTarget: {}\n\
                  \                  timeout: 10m\n        tags: {}\n    - stage:\n\
                  \        name: Example Deploy Stage\n        identifier: example_deploy_stage\n\
                  \        description: ''\n        type: Deployment\n        spec:\n\
                  \          serviceConfig:\n            serviceRef: <+input>\n  \
                  \          serviceDefinition:\n              spec:\n           \
                  \     variables: []\n              type: Kubernetes\n          infrastructure:\n\
                  \            environmentRef: <+input>\n            infrastructureDefinition:\n\
                  \              type: KubernetesDirect\n              spec:\n   \
                  \             connectorRef: <+input>\n                namespace:\
                  \ <+input>\n                releaseName: release-<+INFRA_KEY>\n\
                  \            allowSimultaneousDeployments: false\n          execution:\n\
                  \            steps:\n              - step:\n                  name:\
                  \ Rollout Deployment\n                  identifier: rolloutDeployment\n\
                  \                  type: K8sRollingDeploy\n                  timeout:\
                  \ 10m\n                  spec:\n                    skipDryRun:\
                  \ false\n            rollbackSteps:\n              - step:\n   \
                  \               name: Rollback Rollout Deployment\n            \
                  \      identifier: rollbackRolloutDeployment\n                 \
                  \ type: K8sRollingRollback\n                  timeout: 10m\n   \
                  \               spec: {}\n        tags: {}\n        failureStrategies:\n\
                  \          - onFailure:\n              errors:\n               \
                  \ - AllErrors\n              action:\n                type: StageRollback\n"
                slug: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineCreateRequestBody'
          examples:
            example-pipeline:
              value: "pipeline_yaml: 'pipeline: allowStageExecutions: false stages:\
                \ - stage: name: Example Build Stage identifier: example_build_stage\
                \ description: '''' type: Approval spec: execution: steps: - step:\
                \ name: Approval Step identifier: Approval_Step type: HarnessApproval\
                \ timeout: 1d spec: approvalMessage: |- Please review the following\
                \ information and approve the pipeline progression includePipelineExecutionHistory:\
                \ true approvers: minimumCount: 1 disallowPipelineExecutor: false\
                \ userGroups: <+input> approverInputs: [] - step: type: ShellScript\
                \ name: ShellScript Step identifier: ShellScript_Step spec: shell:\
                \ Bash onDelegate: true source: type: Inline spec: script: <+input>\
                \ environmentVariables: [] outputVariables: [] executionTarget: {}\
                \ timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier:\
                \ example_deploy_stage description: '''' type: Deployment spec: serviceConfig:\
                \ serviceRef: <+input> serviceDefinition: spec: variables: [] type:\
                \ Kubernetes infrastructure: environmentRef: <+input> infrastructureDefinition:\
                \ type: KubernetesDirect spec: connectorRef: <+input> namespace: <+input>\
                \ releaseName: release-<+INFRA_KEY> allowSimultaneousDeployments:\
                \ false execution: steps: - step: name: Rollout Deployment identifier:\
                \ rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun:\
                \ false rollbackSteps: - step: name: Rollback Rollout Deployment identifier:\
                \ rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m\
                \ spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors\
                \ action: type: StageRollback'\nslug: example_pipeline\nname: ExamplePipeline\n\
                description: Pipeline Description\ntags: \n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\ngit_details:\n  branch_name:\
                \ branch\n  file_path: /folder/file.json\n  commit_message: Added\
                \ Harness Git Experience\n  base_branch: old_branch\n  connector_ref:\
                \ git_connector\n  store_type: REMOTE\n  repo_name: example_repository\n"
      required: true
    PipelineUpdateRequestBody:
      description: Pipeline request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineUpdateRequestBody'
          examples:
            example-pipeline:
              value:
                pipeline_yaml: "pipeline:\n  allowStageExecutions: false\n  stages:\n\
                  \    - stage:\n        name: Example Build Stage\n        identifier:\
                  \ example_build_stage\n        description: ''\n        type: Approval\n\
                  \        spec:\n          execution:\n            steps:\n     \
                  \         - step:\n                  name: Approval Step\n     \
                  \             identifier: Approval_Step\n                  type:\
                  \ HarnessApproval\n                  timeout: 1d\n             \
                  \     spec:\n                    approvalMessage: |-\n         \
                  \             Please review the following information\n        \
                  \              and approve the pipeline progression\n          \
                  \          includePipelineExecutionHistory: true\n             \
                  \       approvers:\n                      minimumCount: 1\n    \
                  \                  disallowPipelineExecutor: false\n           \
                  \           userGroups: <+input>\n                    approverInputs:\
                  \ []\n              - step:\n                  type: ShellScript\n\
                  \                  name: ShellScript Step\n                  identifier:\
                  \ ShellScript_Step\n                  spec:\n                  \
                  \  shell: Bash\n                    onDelegate: true\n         \
                  \           source:\n                      type: Inline\n      \
                  \                spec:\n                        script: <+input>\n\
                  \                    environmentVariables: []\n                \
                  \    outputVariables: []\n                    executionTarget: {}\n\
                  \                  timeout: 10m\n        tags: {}\n    - stage:\n\
                  \        name: Example Deploy Stage\n        identifier: example_deploy_stage\n\
                  \        description: ''\n        type: Deployment\n        spec:\n\
                  \          serviceConfig:\n            serviceRef: <+input>\n  \
                  \          serviceDefinition:\n              spec:\n           \
                  \     variables: []\n              type: Kubernetes\n          infrastructure:\n\
                  \            environmentRef: <+input>\n            infrastructureDefinition:\n\
                  \              type: KubernetesDirect\n              spec:\n   \
                  \             connectorRef: <+input>\n                namespace:\
                  \ <+input>\n                releaseName: release-<+INFRA_KEY>\n\
                  \            allowSimultaneousDeployments: false\n          execution:\n\
                  \            steps:\n              - step:\n                  name:\
                  \ Rollout Deployment\n                  identifier: rolloutDeployment\n\
                  \                  type: K8sRollingDeploy\n                  timeout:\
                  \ 10m\n                  spec:\n                    skipDryRun:\
                  \ false\n            rollbackSteps:\n              - step:\n   \
                  \               name: Rollback Rollout Deployment\n            \
                  \      identifier: rollbackRolloutDeployment\n                 \
                  \ type: K8sRollingRollback\n                  timeout: 10m\n   \
                  \               spec: {}\n        tags: {}\n        failureStrategies:\n\
                  \          - onFailure:\n              errors:\n               \
                  \ - AllErrors\n              action:\n                type: StageRollback\n"
                slug: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: abcdXYZ
                  base_branch: old_branch
                  last_commit_id: abcdXYZ
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineUpdateRequestBody'
          examples:
            example-pipeline:
              value: "pipeline_yaml: 'pipeline: allowStageExecutions: false stages:\
                \ - stage: name: Example Build Stage identifier: example_build_stage\
                \ description: '''' type: Approval spec: execution: steps: - step:\
                \ name: Approval Step identifier: Approval_Step type: HarnessApproval\
                \ timeout: 1d spec: approvalMessage: |- Please review the following\
                \ information and approve the pipeline progression includePipelineExecutionHistory:\
                \ true approvers: minimumCount: 1 disallowPipelineExecutor: false\
                \ userGroups: <+input> approverInputs: [] - step: type: ShellScript\
                \ name: ShellScript Step identifier: ShellScript_Step spec: shell:\
                \ Bash onDelegate: true source: type: Inline spec: script: <+input>\
                \ environmentVariables: [] outputVariables: [] executionTarget: {}\
                \ timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier:\
                \ example_deploy_stage description: '''' type: Deployment spec: serviceConfig:\
                \ serviceRef: <+input> serviceDefinition: spec: variables: [] type:\
                \ Kubernetes infrastructure: environmentRef: <+input> infrastructureDefinition:\
                \ type: KubernetesDirect spec: connectorRef: <+input> namespace: <+input>\
                \ releaseName: release-<+INFRA_KEY> allowSimultaneousDeployments:\
                \ false execution: steps: - step: name: Rollout Deployment identifier:\
                \ rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun:\
                \ false rollbackSteps: - step: name: Rollback Rollout Deployment identifier:\
                \ rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m\
                \ spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors\
                \ action: type: StageRollback'\nslug: example_pipeline\nname: ExamplePipeline\n\
                description: Pipeline Description\ntags: \n  example-tag-1: example-tag-1-value\n\
                \  example-tag-2: example-tag-2-value\ngit_details:\n  branch_name:\
                \ branch\n  commit_message: Added Harness Git Experience\n  last_object_id:\
                \ abcdXYZ\n  base_branch: old_branch\n  last_commit_id: abcdXYZ\n\
                \  connector_ref: git_connector\n  store_type: REMOTE\n  repo_name:\
                \ example_repository\n"
      required: true
    TemplateUpdateBody:
      description: Templates Update Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateUpdateRequestBody'
          examples:
            example-1:
              value:
                template_yaml: "template:\n  name: Example_template\n  identifier:\
                  \ example_template\n  versionLabel: v1\n  type: Stage\n  tags: {}\n\
                  \  spec:\n    type: Custom\n    spec:\n      execution:\n      \
                  \  steps:\n          - step:\n              type: ShellScript\n\
                  \              name: ss1\n              identifier: ss1\n      \
                  \        spec:\n                shell: Bash\n                onDelegate:\
                  \ true\n                source:\n                  type: Inline\n\
                  \                  spec:\n                    script: exit 1\n \
                  \               environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: example_object_id
                  base_branch: old_branch
                  connector_ref: git_connector
                  last_commit_id: example_commit_id
                  file_path: /folder/file.json
                  repo_name: example_repository
                  store_type: INLINE
                comments: sample_comments
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateUpdateRequestBody'
          examples:
            example-1:
              value: "template_yaml: |\n  template:\n    name: Example_template\n\
                \    identifier: example_template\n    versionLabel: v1\n    type:\
                \ Stage\n    tags: {}\n    spec:\n      type: Custom\n      spec:\n\
                \        execution:\n          steps:\n            - step:\n     \
                \           type: ShellScript\n                name: ss1\n       \
                \         identifier: ss1\n                spec:\n               \
                \   shell: Bash\n                  onDelegate: true\n            \
                \      source:\n                    type: Inline\n               \
                \     spec:\n                      script: exit 1\n              \
                \    environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\ngit_details:\n  branch_name: branch\n\
                \  commit_message: Added Harness Git Experience\n  last_object_id:\
                \ example_object_id\n  base_branch: old_branch\n  connector_ref: git_connector\n\
                \  last_commit_id: example_commit_id\n  file_path: /folder/file.json\n\
                \  repo_name: example_repository\n  store_type: INLINE\ncomments:\
                \ sample_comments\n"
    TemplateFetchBody:
      description: Templates Fetch Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitFindDetails'
          examples:
            example-1:
              value:
                branch_name: branch
                parent_entity_connector_ref: example_connector_ref
                parent_entity_repo_name: example_repo_name
                parent_entity_account_id: example_account_id
                parent_entity_org_id: example_org_id
                parent_entity_project_id: example_project_id
                comments: sample_comments
        application/yaml:
          schema:
            $ref: '#/components/schemas/GitFindDetails'
          examples:
            example-1:
              value: "branch_name: branch\nparent_entity_connector_ref: example_connector_ref\n\
                parent_entity_repo_name: example_repo_name\nparent_entity_account_id:\
                \ example_account_id\nparent_entity_org_id: example_org_id\nparent_entity_project_id:\
                \ example_project_id\ncomments: sample_comments\n"
    TemplateCreateBody:
      description: Templates Create Request Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TemplateCreateRequestBody'
          examples:
            example-1:
              value:
                template_yaml: "template:\n  name: Example_template\n  identifier:\
                  \ example_template\n  versionLabel: v1\n  type: Stage\n  tags: {}\n\
                  \  spec:\n    type: Custom\n    spec:\n      execution:\n      \
                  \  steps:\n          - step:\n              type: ShellScript\n\
                  \              name: ss1\n              identifier: ss1\n      \
                  \        spec:\n                shell: Bash\n                onDelegate:\
                  \ true\n                source:\n                  type: Inline\n\
                  \                  spec:\n                    script: exit 1\n \
                  \               environmentVariables: []\n                outputVariables:\
                  \ []\n              timeout: 10m\n"
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: INLINE
                  repo_name: example_repository
                is_stable: true
                comments: sample_comment
        application/yaml:
          schema:
            $ref: '#/components/schemas/TemplateCreateRequestBody'
          examples:
            example-1:
              value: "template_yaml: |\n  template:\n    name: Example_template\n\
                \    identifier: example_template\n    versionLabel: v1\n    type:\
                \ Stage\n    tags: {}\n    spec:\n      type: Custom\n      spec:\n\
                \        execution:\n          steps:\n            - step:\n     \
                \           type: ShellScript\n                name: ss1\n       \
                \         identifier: ss1\n                spec:\n               \
                \   shell: Bash\n                  onDelegate: true\n            \
                \      source:\n                    type: Inline\n               \
                \     spec:\n                      script: exit 1\n              \
                \    environmentVariables: []\n                  outputVariables:\
                \ []\n                timeout: 10m\ngit_details:\n  branch_name: branch\n\
                \  file_path: /folder/file.json\n  commit_message: Added Harness Git\
                \ Experience\n  base_branch: old_branch\n  connector_ref: git_connector\n\
                \  store_type: INLINE\n  repo_name: example_repository\nis_stable:\
                \ true\ncomments: sample_comment\n"
  securitySchemes:
    x-api-key:
      type: apiKey
      description: API key is a token provided while making the API calls. This is
        used to authenticate the client at the exposed endpoint.
      name: x-api-key
      in: header
x-stoplight:
  id: bfet7n314xd4i
x-tagGroups:
- name: Organization
  tags:
  - Organization
- name: Project
  tags:
  - Org Project
- name: Secret
  tags:
  - Account Secret
  - Org Secret
  - Project Secret
- name: Connector
  tags:
  - Account Connector
  - Org Connector
  - Project Connector
- name: Pipelines
  tags:
  - Pipelines
- name: Templates
  tags:
  - Account Template
  - Org Template
  - Project Template
- name: Services
  tags:
  - Project Services
- name: Environments
  tags:
  - Project Environments
- name: Roles
  tags:
  - Account Roles
  - Organization Roles
  - Project Roles
- name: Resource Groups
  tags:
  - Account Resource Groups
  - Organization Resource Groups
  - Project Resource Groups
  - Filter Resource Groups
- name: Role Assignments
  tags:
  - Account Role Assignments
  - Org Role Assignments
  - Project Role Assignments
